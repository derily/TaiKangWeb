DEBUG 2017-11-07 14:07:50,477 [41   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-07 14:07:50,487 [41   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-07 14:07:50,493 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,495 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,495 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,495 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,495 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,495 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,495 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,496 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,496 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,496 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,496 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,496 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,496 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,496 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,496 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,497 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,497 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,497 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,497 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,497 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,497 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:07:50,499 [41   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-07 14:07:50,627 [41   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:07:50,627 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:07:50,627 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:07:50,627 [41   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:07:50,911 [41   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
FATAL 2017-11-07 14:07:51,023 [41   ] Abp.AbpBootstrapper                      - System.ArgumentException: 路由集合中已存在名为“swagger_docsswagger/docs/{apiVersion}”的路由。路由名称必须唯一。
参数名: name
   在 System.Web.Routing.RouteCollection.Add(String name, RouteBase item)
   在 System.Web.Http.WebHost.Routing.HostedHttpRouteCollection.Add(String name, IHttpRoute route)
   在 System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(HttpRouteCollection routes, String name, String routeTemplate, Object defaults, Object constraints, HttpMessageHandler handler)
   在 Swashbuckle.Application.HttpConfigurationExtensions.EnableSwagger(HttpConfiguration httpConfig, String routeTemplate, Action`1 configure)
   在 Swashbuckle.Application.HttpConfigurationExtensions.EnableSwagger(HttpConfiguration httpConfig, Action`1 configure)
   在 TaiKang.WebApi.TaiKangWebApiModule.ConfigureSwaggerUi() 位置 E:\SVN\泰康生物\TaiKang.WebApi\WebApi\TaiKangWebApiModule.cs:行号 34
   在 TaiKang.WebApi.TaiKangWebApiModule.Initialize() 位置 E:\SVN\泰康生物\TaiKang.WebApi\WebApi\TaiKangWebApiModule.cs:行号 29
   在 Abp.Modules.AbpModuleManager.<>c.<StartModules>b__15_1(AbpModuleInfo module)
   在 System.Collections.Generic.List`1.ForEach(Action`1 action)
   在 Abp.Modules.AbpModuleManager.StartModules()
   在 Abp.AbpBootstrapper.Initialize()
System.ArgumentException: 路由集合中已存在名为“swagger_docsswagger/docs/{apiVersion}”的路由。路由名称必须唯一。
参数名: name
   在 System.Web.Routing.RouteCollection.Add(String name, RouteBase item)
   在 System.Web.Http.WebHost.Routing.HostedHttpRouteCollection.Add(String name, IHttpRoute route)
   在 System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(HttpRouteCollection routes, String name, String routeTemplate, Object defaults, Object constraints, HttpMessageHandler handler)
   在 Swashbuckle.Application.HttpConfigurationExtensions.EnableSwagger(HttpConfiguration httpConfig, String routeTemplate, Action`1 configure)
   在 Swashbuckle.Application.HttpConfigurationExtensions.EnableSwagger(HttpConfiguration httpConfig, Action`1 configure)
   在 TaiKang.WebApi.TaiKangWebApiModule.ConfigureSwaggerUi() 位置 E:\SVN\泰康生物\TaiKang.WebApi\WebApi\TaiKangWebApiModule.cs:行号 34
   在 TaiKang.WebApi.TaiKangWebApiModule.Initialize() 位置 E:\SVN\泰康生物\TaiKang.WebApi\WebApi\TaiKangWebApiModule.cs:行号 29
   在 Abp.Modules.AbpModuleManager.<>c.<StartModules>b__15_1(AbpModuleInfo module)
   在 System.Collections.Generic.List`1.ForEach(Action`1 action)
   在 Abp.Modules.AbpModuleManager.StartModules()
   在 Abp.AbpBootstrapper.Initialize()
DEBUG 2017-11-07 14:08:01,040 [65   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-07 14:08:01,043 [65   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-07 14:09:00,952 [41   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-07 14:09:00,962 [41   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-07 14:09:00,968 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,971 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,971 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,971 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,971 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,971 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,971 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,971 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,971 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,971 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,972 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,972 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:00,974 [41   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-07 14:09:01,094 [41   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:09:01,094 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:09:01,094 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:09:01,094 [41   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:09:01,376 [41   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:09:02,283 [41   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-07 14:09:02,287 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-07 14:09:02,288 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-07 14:09:02,294 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-07 14:09:02,304 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-07 14:09:02,338 [41   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 14:09:02,797 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 14:09:02,884 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 37 classes define auto mapping attributes
DEBUG 2017-11-07 14:09:02,884 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-07 14:09:02,886 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-07 14:09:02,886 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-07 14:09:02,886 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-07 14:09:02,886 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-07 14:09:02,887 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-07 14:09:02,888 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-07 14:09:02,888 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-07 14:09:03,173 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 14:09:03,187 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 14:09:03,195 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-07 14:09:03,195 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-07 14:09:03,196 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-07 14:09:03,197 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-07 14:09:03,198 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-07 14:09:03,198 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-07 14:09:03,199 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-07 14:09:03,200 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-07 14:09:03,201 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-07 14:09:03,201 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-07 14:09:03,202 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-07 14:09:03,203 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-07 14:09:03,204 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-07 14:09:03,205 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-07 14:09:03,205 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-07 14:09:03,206 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-07 14:09:03,207 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-07 14:09:03,208 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-07 14:09:03,208 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-07 14:09:03,209 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-07 14:09:03,210 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-07 14:09:03,211 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-07 14:09:03,212 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-07 14:09:03,213 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-07 14:09:22,313 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"3bc84b1b-677a-464b-9d8a-3aa5ec437526","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:09:22.3068033Z","Properties":{}}
DEBUG 2017-11-07 14:09:22,391 [65   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 3bc84b1b-677a-464b-9d8a-3aa5ec437526
DEBUG 2017-11-07 14:09:33,911 [75   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 3bc84b1b-677a-464b-9d8a-3aa5ec437526
DEBUG 2017-11-07 14:09:37,754 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"a13733f4-4b9f-4b46-8b20-aba618cf9e6d","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:09:37.7548033Z","Properties":{}}
DEBUG 2017-11-07 14:09:37,763 [65   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: a13733f4-4b9f-4b46-8b20-aba618cf9e6d
DEBUG 2017-11-07 14:09:43,881 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: a13733f4-4b9f-4b46-8b20-aba618cf9e6d
DEBUG 2017-11-07 14:09:46,339 [18   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"fc4f07c1-d394-45ca-ba5e-2e1ff9f8fe70","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:09:46.3388033Z","Properties":{}}
DEBUG 2017-11-07 14:09:46,347 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: fc4f07c1-d394-45ca-ba5e-2e1ff9f8fe70
DEBUG 2017-11-07 14:09:56,543 [18   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-07 14:09:56,545 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 14:09:56,546 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 14:09:56,546 [18   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-07 14:10:01,390 [41   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-07 14:10:01,401 [41   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-07 14:10:01,407 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,408 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,408 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,408 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,409 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,409 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,409 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,409 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,409 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,409 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,409 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,409 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,410 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,410 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,410 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,410 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,410 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,410 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,410 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,410 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,410 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:10:01,413 [41   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-07 14:10:01,485 [41   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:10:01,485 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:10:01,485 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:10:01,485 [41   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:10:01,758 [41   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
FATAL 2017-11-07 14:10:01,872 [41   ] Abp.AbpBootstrapper                      - System.ArgumentException: 路由集合中已存在名为“swagger_docsswagger/docs/{apiVersion}”的路由。路由名称必须唯一。
参数名: name
   在 System.Web.Routing.RouteCollection.Add(String name, RouteBase item)
   在 System.Web.Http.WebHost.Routing.HostedHttpRouteCollection.Add(String name, IHttpRoute route)
   在 System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(HttpRouteCollection routes, String name, String routeTemplate, Object defaults, Object constraints, HttpMessageHandler handler)
   在 Swashbuckle.Application.HttpConfigurationExtensions.EnableSwagger(HttpConfiguration httpConfig, String routeTemplate, Action`1 configure)
   在 Swashbuckle.Application.HttpConfigurationExtensions.EnableSwagger(HttpConfiguration httpConfig, Action`1 configure)
   在 TaiKang.WebApi.TaiKangWebApiModule.ConfigureSwaggerUi()
   在 TaiKang.WebApi.TaiKangWebApiModule.Initialize()
   在 Abp.Modules.AbpModuleManager.<>c.<StartModules>b__15_1(AbpModuleInfo module)
   在 System.Collections.Generic.List`1.ForEach(Action`1 action)
   在 Abp.Modules.AbpModuleManager.StartModules()
   在 Abp.AbpBootstrapper.Initialize()
System.ArgumentException: 路由集合中已存在名为“swagger_docsswagger/docs/{apiVersion}”的路由。路由名称必须唯一。
参数名: name
   在 System.Web.Routing.RouteCollection.Add(String name, RouteBase item)
   在 System.Web.Http.WebHost.Routing.HostedHttpRouteCollection.Add(String name, IHttpRoute route)
   在 System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(HttpRouteCollection routes, String name, String routeTemplate, Object defaults, Object constraints, HttpMessageHandler handler)
   在 Swashbuckle.Application.HttpConfigurationExtensions.EnableSwagger(HttpConfiguration httpConfig, String routeTemplate, Action`1 configure)
   在 Swashbuckle.Application.HttpConfigurationExtensions.EnableSwagger(HttpConfiguration httpConfig, Action`1 configure)
   在 TaiKang.WebApi.TaiKangWebApiModule.ConfigureSwaggerUi()
   在 TaiKang.WebApi.TaiKangWebApiModule.Initialize()
   在 Abp.Modules.AbpModuleManager.<>c.<StartModules>b__15_1(AbpModuleInfo module)
   在 System.Collections.Generic.List`1.ForEach(Action`1 action)
   在 Abp.Modules.AbpModuleManager.StartModules()
   在 Abp.AbpBootstrapper.Initialize()
DEBUG 2017-11-07 14:10:11,879 [65   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-07 14:10:11,882 [65   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-07 14:14:24,631 [41   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-07 14:14:24,641 [41   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-07 14:14:24,647 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,648 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,648 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,648 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,648 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,648 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,649 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,649 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,649 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,649 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,649 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,649 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,649 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,649 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,650 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,650 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,650 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,650 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,650 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,650 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,650 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:24,652 [41   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-07 14:14:24,792 [41   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:14:24,792 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:14:24,792 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:14:24,792 [41   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:14:25,074 [41   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:14:26,031 [41   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-07 14:14:26,035 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-07 14:14:26,036 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-07 14:14:26,042 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-07 14:14:26,052 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-07 14:14:26,087 [41   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 14:14:26,540 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 14:14:26,627 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 37 classes define auto mapping attributes
DEBUG 2017-11-07 14:14:26,627 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-07 14:14:26,629 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-07 14:14:26,630 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-07 14:14:26,631 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-07 14:14:26,631 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-07 14:14:26,631 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-07 14:14:26,631 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-07 14:14:26,631 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-07 14:14:26,631 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-07 14:14:26,631 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-07 14:14:26,631 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-07 14:14:26,631 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-07 14:14:26,631 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-07 14:14:26,631 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-07 14:14:26,631 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-07 14:14:26,631 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-07 14:14:26,885 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 14:14:26,898 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 14:14:26,905 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-07 14:14:26,906 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-07 14:14:26,907 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-07 14:14:26,907 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-07 14:14:26,908 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-07 14:14:26,909 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-07 14:14:26,910 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-07 14:14:26,911 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-07 14:14:26,911 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-07 14:14:26,912 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-07 14:14:26,913 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-07 14:14:26,914 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-07 14:14:26,915 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-07 14:14:26,915 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-07 14:14:26,916 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-07 14:14:26,917 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-07 14:14:26,918 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-07 14:14:26,919 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-07 14:14:26,919 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-07 14:14:26,920 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-07 14:14:26,921 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-07 14:14:26,922 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-07 14:14:26,923 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-07 14:14:26,923 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-07 14:14:35,281 [76   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"45ce88da-183f-44d3-bcca-96164719cbff","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:14:35.2768033Z","Properties":{}}
DEBUG 2017-11-07 14:14:35,357 [76   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 45ce88da-183f-44d3-bcca-96164719cbff
DEBUG 2017-11-07 14:14:42,740 [76   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 45ce88da-183f-44d3-bcca-96164719cbff
DEBUG 2017-11-07 14:14:46,115 [30   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"1545cd1c-3a41-46b0-aede-b56a4f7fde75","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:14:46.1158033Z","Properties":{}}
DEBUG 2017-11-07 14:14:46,123 [76   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 1545cd1c-3a41-46b0-aede-b56a4f7fde75
DEBUG 2017-11-07 14:15:53,916 [69   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 1545cd1c-3a41-46b0-aede-b56a4f7fde75
WARN  2017-11-07 14:16:36,821 [75   ] nHandling.AbpApiExceptionFilterAttribute - Method arguments are not valid! See ValidationErrors for details.
Abp.Runtime.Validation.AbpValidationException: Method arguments are not valid! See ValidationErrors for details.
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.ThrowValidationError()
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.Validate()
   在 Abp.WebApi.Validation.AbpApiValidationFilter.<ExecuteActionFilterAsync>d__5.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Auditing.AbpApiAuditFilter.<ExecuteActionFilterAsync>d__4.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ActionFilterResult.<ExecuteAsync>d__2.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Security.AntiForgery.AbpAntiForgeryApiFilter.<ExecuteAuthorizationFilterAsync>d__10.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Authorization.AbpApiAuthorizeFilter.<ExecuteAuthorizationFilterAsync>d__7.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.AuthenticationFilterResult.<ExecuteAsync>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ExceptionFilterResult.<ExecuteAsync>d__0.MoveNext()
WARN  2017-11-07 14:16:36,824 [75   ] nHandling.AbpApiExceptionFilterAttribute - There are 1 validation errors:
WARN  2017-11-07 14:16:36,824 [75   ] nHandling.AbpApiExceptionFilterAttribute -  (input)
DEBUG 2017-11-07 14:20:19,102 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"9d21db70-3fb2-4d85-8404-f1b86165be33","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:20:19.1028033Z","Properties":{}}
DEBUG 2017-11-07 14:20:19,115 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 9d21db70-3fb2-4d85-8404-f1b86165be33
DEBUG 2017-11-07 14:21:40,760 [23   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 9d21db70-3fb2-4d85-8404-f1b86165be33
DEBUG 2017-11-07 14:21:42,544 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"61a61de8-2409-4206-b0a9-f6266981df5c","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:21:42.5448033Z","Properties":{}}
DEBUG 2017-11-07 14:21:42,553 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 61a61de8-2409-4206-b0a9-f6266981df5c
DEBUG 2017-11-07 14:22:46,996 [18   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 61a61de8-2409-4206-b0a9-f6266981df5c
DEBUG 2017-11-07 14:22:49,286 [69   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"78dd9aee-a6ef-4a4e-af92-66317c209cc8","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:22:49.2868033Z","Properties":{}}
DEBUG 2017-11-07 14:22:49,297 [75   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 78dd9aee-a6ef-4a4e-af92-66317c209cc8
DEBUG 2017-11-07 14:24:55,435 [65   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 78dd9aee-a6ef-4a4e-af92-66317c209cc8
WARN  2017-11-07 14:25:47,988 [65   ] nHandling.AbpApiExceptionFilterAttribute - Method arguments are not valid! See ValidationErrors for details.
Abp.Runtime.Validation.AbpValidationException: Method arguments are not valid! See ValidationErrors for details.
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.ThrowValidationError()
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.Validate()
   在 Abp.Runtime.Validation.Interception.ValidationInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BannerAppServiceProxy.GetAll(PagedAndSortedResultRequestDto input)
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   在 Abp.WebApi.Controllers.Dynamic.Interceptors.AbpDynamicApiControllerInterceptor`1.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.DynamicApiController`1Proxy_5.GetAll(PagedAndSortedResultRequestDto input)
   在 lambda_method(Closure , Object , Object[] )
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.<>c__DisplayClass10.<GetExecutor>b__9(Object instance, Object[] methodParameters)
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.Execute(Object instance, Object[] arguments)
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(HttpControllerContext controllerContext, IDictionary`2 arguments, CancellationToken cancellationToken)
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ApiControllerActionInvoker.<InvokeActionAsyncCore>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Uow.AbpApiUowFilter.<ExecuteActionFilterAsync>d__6.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Validation.AbpApiValidationFilter.<ExecuteActionFilterAsync>d__5.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Auditing.AbpApiAuditFilter.<ExecuteActionFilterAsync>d__4.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ActionFilterResult.<ExecuteAsync>d__2.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Security.AntiForgery.AbpAntiForgeryApiFilter.<ExecuteAuthorizationFilterAsync>d__10.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Authorization.AbpApiAuthorizeFilter.<ExecuteAuthorizationFilterAsync>d__7.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.AuthenticationFilterResult.<ExecuteAsync>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ExceptionFilterResult.<ExecuteAsync>d__0.MoveNext()
WARN  2017-11-07 14:25:48,003 [65   ] nHandling.AbpApiExceptionFilterAttribute - There are 1 validation errors:
WARN  2017-11-07 14:25:48,003 [65   ] nHandling.AbpApiExceptionFilterAttribute - input is null! (input)
WARN  2017-11-07 14:26:35,238 [24   ] nHandling.AbpApiExceptionFilterAttribute - Method arguments are not valid! See ValidationErrors for details.
Abp.Runtime.Validation.AbpValidationException: Method arguments are not valid! See ValidationErrors for details.
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.ThrowValidationError()
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.Validate()
   在 Abp.Runtime.Validation.Interception.ValidationInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BannerAppServiceProxy.GetAll(PagedAndSortedResultRequestDto input)
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   在 Abp.WebApi.Controllers.Dynamic.Interceptors.AbpDynamicApiControllerInterceptor`1.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.DynamicApiController`1Proxy_5.GetAll(PagedAndSortedResultRequestDto input)
   在 lambda_method(Closure , Object , Object[] )
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.<>c__DisplayClass10.<GetExecutor>b__9(Object instance, Object[] methodParameters)
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.Execute(Object instance, Object[] arguments)
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(HttpControllerContext controllerContext, IDictionary`2 arguments, CancellationToken cancellationToken)
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ApiControllerActionInvoker.<InvokeActionAsyncCore>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Uow.AbpApiUowFilter.<ExecuteActionFilterAsync>d__6.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Validation.AbpApiValidationFilter.<ExecuteActionFilterAsync>d__5.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Auditing.AbpApiAuditFilter.<ExecuteActionFilterAsync>d__4.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ActionFilterResult.<ExecuteAsync>d__2.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Security.AntiForgery.AbpAntiForgeryApiFilter.<ExecuteAuthorizationFilterAsync>d__10.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Authorization.AbpApiAuthorizeFilter.<ExecuteAuthorizationFilterAsync>d__7.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.AuthenticationFilterResult.<ExecuteAsync>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ExceptionFilterResult.<ExecuteAsync>d__0.MoveNext()
WARN  2017-11-07 14:26:35,239 [24   ] nHandling.AbpApiExceptionFilterAttribute - There are 1 validation errors:
WARN  2017-11-07 14:26:35,239 [24   ] nHandling.AbpApiExceptionFilterAttribute - input is null! (input)
DEBUG 2017-11-07 14:29:27,631 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"9780a216-a112-4ccb-aa6b-9795ccd3e2b5","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:29:27.6318033Z","Properties":{}}
DEBUG 2017-11-07 14:29:27,661 [69   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 9780a216-a112-4ccb-aa6b-9795ccd3e2b5
DEBUG 2017-11-07 14:48:20,172 [72   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-07 14:48:20,173 [72   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 14:48:20,174 [72   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 14:48:20,174 [72   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-07 14:48:32,717 [41   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-07 14:48:32,727 [41   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-07 14:48:32,733 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,734 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,734 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,734 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,735 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,735 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,735 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,735 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,735 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,735 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,735 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,736 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,736 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,736 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,736 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,736 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,736 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,736 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,736 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,736 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,736 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:32,739 [41   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-07 14:48:32,915 [41   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:48:32,915 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:48:32,915 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:48:32,915 [41   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:48:33,236 [41   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:48:35,086 [41   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-07 14:48:35,107 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-07 14:48:35,109 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-07 14:48:35,113 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-07 14:48:35,122 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-07 14:48:35,157 [41   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 14:48:35,629 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 14:48:35,717 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 37 classes define auto mapping attributes
DEBUG 2017-11-07 14:48:35,717 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-07 14:48:35,720 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-07 14:48:35,721 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-07 14:48:35,722 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-07 14:48:35,723 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-07 14:48:36,079 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 14:48:36,091 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 14:48:36,100 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-07 14:48:36,101 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-07 14:48:36,102 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-07 14:48:36,103 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-07 14:48:36,103 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-07 14:48:36,104 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-07 14:48:36,105 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-07 14:48:36,105 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-07 14:48:36,106 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-07 14:48:36,107 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-07 14:48:36,108 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-07 14:48:36,108 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-07 14:48:36,109 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-07 14:48:36,110 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-07 14:48:36,111 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-07 14:48:36,111 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-07 14:48:36,112 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-07 14:48:36,113 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-07 14:48:36,114 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-07 14:48:36,114 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-07 14:48:36,115 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-07 14:48:36,116 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-07 14:48:36,117 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-07 14:48:36,117 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-07 14:48:39,496 [72   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"9780a216-a112-4ccb-aa6b-9795ccd3e2b5","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:48:39.3858033Z","Properties":{}}
DEBUG 2017-11-07 14:48:39,497 [64   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"9780a216-a112-4ccb-aa6b-9795ccd3e2b5","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:48:39.3858033Z","Properties":{}}
DEBUG 2017-11-07 14:48:39,500 [47   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"9780a216-a112-4ccb-aa6b-9795ccd3e2b5","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:48:39.3858033Z","Properties":{}}
DEBUG 2017-11-07 14:48:42,330 [75   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"9780a216-a112-4ccb-aa6b-9795ccd3e2b5","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:48:39.3858033Z","Properties":{}}
DEBUG 2017-11-07 14:49:30,793 [72   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-07 14:49:30,794 [72   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 14:49:30,794 [72   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 14:49:30,794 [72   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-07 14:49:37,246 [39   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-07 14:49:37,256 [39   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-07 14:49:37,262 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,263 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,263 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,264 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,264 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,264 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,264 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,264 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,264 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,264 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,264 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,264 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,265 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,265 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,265 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,265 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,265 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,265 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,265 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,265 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,265 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:37,268 [39   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-07 14:49:37,427 [39   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:49:37,427 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:49:37,427 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:49:37,428 [39   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 14:49:37,725 [39   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 14:49:39,302 [39   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-07 14:49:39,307 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-07 14:49:39,308 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-07 14:49:39,315 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-07 14:49:39,324 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-07 14:49:39,360 [39   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 14:49:39,918 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 14:49:40,006 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 37 classes define auto mapping attributes
DEBUG 2017-11-07 14:49:40,006 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-07 14:49:40,009 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-07 14:49:40,010 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-07 14:49:40,267 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 14:49:40,280 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 14:49:40,287 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-07 14:49:40,288 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-07 14:49:40,289 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-07 14:49:40,289 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-07 14:49:40,290 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-07 14:49:40,291 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-07 14:49:40,292 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-07 14:49:40,292 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-07 14:49:40,293 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-07 14:49:40,294 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-07 14:49:40,295 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-07 14:49:40,296 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-07 14:49:40,297 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-07 14:49:40,297 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-07 14:49:40,298 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-07 14:49:40,299 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-07 14:49:40,300 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-07 14:49:40,300 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-07 14:49:40,301 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-07 14:49:40,302 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-07 14:49:40,303 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-07 14:49:40,303 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-07 14:49:40,304 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-07 14:49:40,305 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-07 14:49:42,869 [65   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"9780a216-a112-4ccb-aa6b-9795ccd3e2b5","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:49:42.7428033Z","Properties":{}}
DEBUG 2017-11-07 14:49:42,871 [72   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"9780a216-a112-4ccb-aa6b-9795ccd3e2b5","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:49:42.7428033Z","Properties":{}}
DEBUG 2017-11-07 14:50:10,687 [18   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-07 14:50:10,689 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 14:50:10,690 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 14:50:10,690 [18   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-07 14:50:25,307 [23   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 9780a216-a112-4ccb-aa6b-9795ccd3e2b5
DEBUG 2017-11-07 14:53:27,625 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: d9142e65-9195-460e-ba22-6a3c15d13e9c
DEBUG 2017-11-07 14:53:28,522 [63   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"df3b4846-cd5a-4c56-97d9-ed21455e3642","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:53:28.5228033Z","Properties":{}}
DEBUG 2017-11-07 14:53:28,530 [60   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: df3b4846-cd5a-4c56-97d9-ed21455e3642
DEBUG 2017-11-07 14:55:27,693 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: df3b4846-cd5a-4c56-97d9-ed21455e3642
DEBUG 2017-11-07 14:55:28,738 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"8c3b15f8-e9a2-4829-9572-e5f23db0aa0e","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:55:28.7388033Z","Properties":{}}
DEBUG 2017-11-07 14:55:28,744 [60   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 8c3b15f8-e9a2-4829-9572-e5f23db0aa0e
DEBUG 2017-11-07 14:55:45,216 [23   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 8c3b15f8-e9a2-4829-9572-e5f23db0aa0e
DEBUG 2017-11-07 14:55:46,449 [30   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"d07fd97a-3008-4028-a334-dab9ff5ec82a","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:55:46.4498033Z","Properties":{}}
DEBUG 2017-11-07 14:55:46,458 [64   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: d07fd97a-3008-4028-a334-dab9ff5ec82a
DEBUG 2017-11-07 14:56:59,741 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: d07fd97a-3008-4028-a334-dab9ff5ec82a
WARN  2017-11-07 14:57:15,985 [75   ] nHandling.AbpApiExceptionFilterAttribute - Method arguments are not valid! See ValidationErrors for details.
Abp.Runtime.Validation.AbpValidationException: Method arguments are not valid! See ValidationErrors for details.
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.ThrowValidationError()
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.Validate()
   在 Abp.Runtime.Validation.Interception.ValidationInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BannerAppServiceProxy.GetAll(PagedAndSortedResultRequestDto input)
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   在 Abp.WebApi.Controllers.Dynamic.Interceptors.AbpDynamicApiControllerInterceptor`1.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.DynamicApiController`1Proxy_4.GetAll(PagedAndSortedResultRequestDto input)
   在 lambda_method(Closure , Object , Object[] )
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.<>c__DisplayClass10.<GetExecutor>b__9(Object instance, Object[] methodParameters)
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.Execute(Object instance, Object[] arguments)
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(HttpControllerContext controllerContext, IDictionary`2 arguments, CancellationToken cancellationToken)
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ApiControllerActionInvoker.<InvokeActionAsyncCore>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Uow.AbpApiUowFilter.<ExecuteActionFilterAsync>d__6.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Validation.AbpApiValidationFilter.<ExecuteActionFilterAsync>d__5.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Auditing.AbpApiAuditFilter.<ExecuteActionFilterAsync>d__4.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ActionFilterResult.<ExecuteAsync>d__2.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Security.AntiForgery.AbpAntiForgeryApiFilter.<ExecuteAuthorizationFilterAsync>d__10.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Authorization.AbpApiAuthorizeFilter.<ExecuteAuthorizationFilterAsync>d__7.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.AuthenticationFilterResult.<ExecuteAsync>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ExceptionFilterResult.<ExecuteAsync>d__0.MoveNext()
WARN  2017-11-07 14:57:16,012 [75   ] nHandling.AbpApiExceptionFilterAttribute - There are 1 validation errors:
WARN  2017-11-07 14:57:16,012 [75   ] nHandling.AbpApiExceptionFilterAttribute - input is null! (input)
WARN  2017-11-07 14:57:19,652 [47   ] nHandling.AbpApiExceptionFilterAttribute - Method arguments are not valid! See ValidationErrors for details.
Abp.Runtime.Validation.AbpValidationException: Method arguments are not valid! See ValidationErrors for details.
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.ThrowValidationError()
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.Validate()
   在 Abp.Runtime.Validation.Interception.ValidationInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BannerAppServiceProxy.GetAll(PagedAndSortedResultRequestDto input)
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   在 Abp.WebApi.Controllers.Dynamic.Interceptors.AbpDynamicApiControllerInterceptor`1.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.DynamicApiController`1Proxy_4.GetAll(PagedAndSortedResultRequestDto input)
   在 lambda_method(Closure , Object , Object[] )
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.<>c__DisplayClass10.<GetExecutor>b__9(Object instance, Object[] methodParameters)
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.Execute(Object instance, Object[] arguments)
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(HttpControllerContext controllerContext, IDictionary`2 arguments, CancellationToken cancellationToken)
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ApiControllerActionInvoker.<InvokeActionAsyncCore>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Uow.AbpApiUowFilter.<ExecuteActionFilterAsync>d__6.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Validation.AbpApiValidationFilter.<ExecuteActionFilterAsync>d__5.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Auditing.AbpApiAuditFilter.<ExecuteActionFilterAsync>d__4.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ActionFilterResult.<ExecuteAsync>d__2.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Security.AntiForgery.AbpAntiForgeryApiFilter.<ExecuteAuthorizationFilterAsync>d__10.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Authorization.AbpApiAuthorizeFilter.<ExecuteAuthorizationFilterAsync>d__7.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.AuthenticationFilterResult.<ExecuteAsync>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ExceptionFilterResult.<ExecuteAsync>d__0.MoveNext()
WARN  2017-11-07 14:57:19,653 [47   ] nHandling.AbpApiExceptionFilterAttribute - There are 1 validation errors:
WARN  2017-11-07 14:57:19,653 [47   ] nHandling.AbpApiExceptionFilterAttribute - input is null! (input)
DEBUG 2017-11-07 14:57:52,335 [60   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"62d78f55-5bff-4e58-817b-5c9ab3b037e2","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T06:57:52.3358033Z","Properties":{}}
DEBUG 2017-11-07 14:57:52,347 [18   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 62d78f55-5bff-4e58-817b-5c9ab3b037e2
ERROR 2017-11-07 14:58:50,913 [72   ] nHandling.AbpApiExceptionFilterAttribute - There is no such an entity. Entity type: TaiKang.Tk.Banner, id: 0
Abp.Domain.Entities.EntityNotFoundException: There is no such an entity. Entity type: TaiKang.Tk.Banner, id: 0
   在 Abp.Domain.Repositories.AbpRepositoryBase`2.Get(TPrimaryKey id)
   在 Castle.Proxies.Invocations.IRepository`2_Get_27.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`1Proxy_4.Get(Int32 id)
   在 Castle.Proxies.BannerAppServiceProxy.GetEntityById_callback(Int32 id)
   在 Castle.Proxies.Invocations.CrudAppService`8_GetEntityById.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Auditing.AuditingInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Runtime.Validation.Interception.ValidationInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BannerAppServiceProxy.GetEntityById(Int32 id)
   在 Abp.Application.Services.CrudAppService`8.Get(TGetInput input)
   在 Castle.Proxies.BannerAppServiceProxy.Get_callback(EntityDto`1 input)
   在 Castle.Proxies.Invocations.CrudAppService`8_Get.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Auditing.AuditingInterceptor.PerformSyncAuditing(IInvocation invocation, AuditInfo auditInfo)
   在 Abp.Auditing.AuditingInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Runtime.Validation.Interception.ValidationInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BannerAppServiceProxy.Get(EntityDto`1 input)
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   在 Abp.WebApi.Controllers.Dynamic.Interceptors.AbpDynamicApiControllerInterceptor`1.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.DynamicApiController`1Proxy_4.Get(EntityDto`1 input)
   在 lambda_method(Closure , Object , Object[] )
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.<>c__DisplayClass10.<GetExecutor>b__9(Object instance, Object[] methodParameters)
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.Execute(Object instance, Object[] arguments)
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(HttpControllerContext controllerContext, IDictionary`2 arguments, CancellationToken cancellationToken)
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ApiControllerActionInvoker.<InvokeActionAsyncCore>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Uow.AbpApiUowFilter.<ExecuteActionFilterAsync>d__6.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Validation.AbpApiValidationFilter.<ExecuteActionFilterAsync>d__5.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Auditing.AbpApiAuditFilter.<ExecuteActionFilterAsync>d__4.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ActionFilterResult.<ExecuteAsync>d__2.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Security.AntiForgery.AbpAntiForgeryApiFilter.<ExecuteAuthorizationFilterAsync>d__10.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Authorization.AbpApiAuthorizeFilter.<ExecuteAuthorizationFilterAsync>d__7.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.AuthenticationFilterResult.<ExecuteAsync>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ExceptionFilterResult.<ExecuteAsync>d__0.MoveNext()
WARN  2017-11-07 14:59:18,986 [11   ] nHandling.AbpApiExceptionFilterAttribute - Method arguments are not valid! See ValidationErrors for details.
Abp.Runtime.Validation.AbpValidationException: Method arguments are not valid! See ValidationErrors for details.
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.ThrowValidationError()
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.Validate()
   在 Abp.WebApi.Validation.AbpApiValidationFilter.<ExecuteActionFilterAsync>d__5.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Auditing.AbpApiAuditFilter.<ExecuteActionFilterAsync>d__4.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ActionFilterResult.<ExecuteAsync>d__2.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Security.AntiForgery.AbpAntiForgeryApiFilter.<ExecuteAuthorizationFilterAsync>d__10.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Authorization.AbpApiAuthorizeFilter.<ExecuteAuthorizationFilterAsync>d__7.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.AuthenticationFilterResult.<ExecuteAsync>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ExceptionFilterResult.<ExecuteAsync>d__0.MoveNext()
WARN  2017-11-07 14:59:18,986 [11   ] nHandling.AbpApiExceptionFilterAttribute - There are 1 validation errors:
WARN  2017-11-07 14:59:18,986 [11   ] nHandling.AbpApiExceptionFilterAttribute - 字段 MaxResultCount 必须在 1 和 2147483647 之间。 (input.MaxResultCount)
ERROR 2017-11-07 14:59:30,897 [64   ] nHandling.AbpApiExceptionFilterAttribute - '.' or '(' or string literal expected
'.' or '(' or string literal expected (at index 6)
DEBUG 2017-11-07 15:02:07,700 [80   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 62d78f55-5bff-4e58-817b-5c9ab3b037e2
DEBUG 2017-11-07 15:02:11,311 [65   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"bf57954c-47ad-4672-b79d-f356b8444d8a","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:02:11.3118033Z","Properties":{}}
DEBUG 2017-11-07 15:02:11,322 [72   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: bf57954c-47ad-4672-b79d-f356b8444d8a
DEBUG 2017-11-07 15:06:21,521 [63   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: bf57954c-47ad-4672-b79d-f356b8444d8a
DEBUG 2017-11-07 15:06:25,666 [9    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"17d2b7e4-074f-4032-8efd-fb74ee9c39a5","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:06:25.6668033Z","Properties":{}}
DEBUG 2017-11-07 15:06:25,679 [76   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 17d2b7e4-074f-4032-8efd-fb74ee9c39a5
DEBUG 2017-11-07 15:09:21,002 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 17d2b7e4-074f-4032-8efd-fb74ee9c39a5
DEBUG 2017-11-07 15:09:21,867 [46   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"fed404f4-46c7-487d-88f2-30bda9914249","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:09:21.8678033Z","Properties":{}}
DEBUG 2017-11-07 15:09:21,887 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: fed404f4-46c7-487d-88f2-30bda9914249
DEBUG 2017-11-07 15:10:27,344 [51   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: fed404f4-46c7-487d-88f2-30bda9914249
DEBUG 2017-11-07 15:10:30,665 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"9bacd870-7cb2-41c7-8218-7fdaba21d930","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:10:30.6658033Z","Properties":{}}
DEBUG 2017-11-07 15:10:30,681 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 9bacd870-7cb2-41c7-8218-7fdaba21d930
DEBUG 2017-11-07 15:13:24,225 [77   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 9bacd870-7cb2-41c7-8218-7fdaba21d930
DEBUG 2017-11-07 15:13:31,344 [34   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"7553404a-e274-4d7c-8ad3-f622a1d73617","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:13:31.3448033Z","Properties":{}}
DEBUG 2017-11-07 15:13:31,355 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 7553404a-e274-4d7c-8ad3-f622a1d73617
ERROR 2017-11-07 15:17:09,012 [57   ] Abp.Logging.LogHelper                    - Can not find file for: ~/Areas/Mpa/Views/CompanyIntroduce/Index.min.css! System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioningForEmbeddedFile(String path)
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioning(String path)
DEBUG 2017-11-07 15:17:09,179 [58   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 7553404a-e274-4d7c-8ad3-f622a1d73617
DEBUG 2017-11-07 15:17:11,086 [35   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"a2f59285-0710-4bbd-81b1-854a29fe3bf7","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:17:11.0868033Z","Properties":{}}
DEBUG 2017-11-07 15:17:11,097 [8    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: a2f59285-0710-4bbd-81b1-854a29fe3bf7
DEBUG 2017-11-07 15:17:18,238 [20   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: a2f59285-0710-4bbd-81b1-854a29fe3bf7
DEBUG 2017-11-07 15:17:21,148 [5    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"5486dfcb-36af-4301-bb99-a0647926be65","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:17:21.1488033Z","Properties":{}}
DEBUG 2017-11-07 15:17:21,158 [58   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 5486dfcb-36af-4301-bb99-a0647926be65
DEBUG 2017-11-07 15:19:38,739 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 5486dfcb-36af-4301-bb99-a0647926be65
DEBUG 2017-11-07 15:19:39,937 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"2405c767-c847-48af-bf20-d8d0e88ddf2c","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:19:39.9378033Z","Properties":{}}
DEBUG 2017-11-07 15:19:39,946 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 2405c767-c847-48af-bf20-d8d0e88ddf2c
DEBUG 2017-11-07 15:28:36,152 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 2405c767-c847-48af-bf20-d8d0e88ddf2c
DEBUG 2017-11-07 15:28:37,332 [48   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"8929a71c-de4c-4ee4-83db-658a7106ca2d","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:28:37.3328033Z","Properties":{}}
DEBUG 2017-11-07 15:28:37,343 [78   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 8929a71c-de4c-4ee4-83db-658a7106ca2d
DEBUG 2017-11-07 15:28:44,399 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 8929a71c-de4c-4ee4-83db-658a7106ca2d
DEBUG 2017-11-07 15:28:45,546 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"eb859193-d8f2-47d7-a5e0-b8b869e102d0","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:28:45.5468033Z","Properties":{}}
DEBUG 2017-11-07 15:28:45,559 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: eb859193-d8f2-47d7-a5e0-b8b869e102d0
DEBUG 2017-11-07 15:30:35,927 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: eb859193-d8f2-47d7-a5e0-b8b869e102d0
DEBUG 2017-11-07 15:30:36,655 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"249866ba-5eb5-48b2-ba4c-8a54a31a1cc7","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:30:36.6558033Z","Properties":{}}
DEBUG 2017-11-07 15:30:36,662 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 249866ba-5eb5-48b2-ba4c-8a54a31a1cc7
WARN  2017-11-07 15:35:41,146 [52   ] naries.DictionaryBasedLocalizationSource - Can not find 'Create' in localization source 'TaiKang'!
DEBUG 2017-11-07 15:35:41,263 [53   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 249866ba-5eb5-48b2-ba4c-8a54a31a1cc7
DEBUG 2017-11-07 15:35:42,344 [55   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"c948a08c-9ed7-47d4-aca7-0c648e270265","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:35:42.3448033Z","Properties":{}}
DEBUG 2017-11-07 15:35:42,352 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: c948a08c-9ed7-47d4-aca7-0c648e270265
WARN  2017-11-07 15:35:58,199 [5    ] naries.DictionaryBasedLocalizationSource - Can not find 'Create' in localization source 'TaiKang'!
DEBUG 2017-11-07 15:35:58,307 [81   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: c948a08c-9ed7-47d4-aca7-0c648e270265
DEBUG 2017-11-07 15:35:59,107 [53   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"04dd0b1a-a700-45ec-bbc1-5f3a30d49f9f","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:35:59.1078033Z","Properties":{}}
DEBUG 2017-11-07 15:35:59,116 [55   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 04dd0b1a-a700-45ec-bbc1-5f3a30d49f9f
DEBUG 2017-11-07 15:36:25,336 [81   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-07 15:36:25,338 [81   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 15:36:25,338 [81   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 15:36:25,338 [81   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-07 15:36:31,904 [39   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-07 15:36:31,915 [39   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-07 15:36:31,921 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,923 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,923 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,923 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,923 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,923 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,923 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,924 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,924 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,924 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,924 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,924 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,924 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,924 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,924 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,925 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,925 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,925 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,925 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,925 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,925 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:31,927 [39   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-07 15:36:32,018 [39   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 15:36:32,018 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 15:36:32,018 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 15:36:32,018 [39   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 15:36:32,297 [39   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:36:33,134 [39   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-07 15:36:33,138 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-07 15:36:33,139 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-07 15:36:33,143 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
FATAL 2017-11-07 15:36:33,173 [39   ] Abp.AbpBootstrapper                      - Abp.AbpException: A dictionary can not contain same key twice. There are some duplicated names: Delete, Edit
   在 Abp.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomXmlString(String xmlString)
   在 Abp.Localization.Dictionaries.Xml.XmlEmbeddedFileLocalizationDictionaryProvider.CreateXmlLocalizationDictionary(String xmlString)
   在 Abp.Localization.Dictionaries.Xml.XmlEmbeddedFileLocalizationDictionaryProvider.Initialize(String sourceName)
   在 Abp.Localization.MultiTenantLocalizationDictionaryProvider.Initialize(String sourceName)
   在 Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource.Initialize(ILocalizationConfiguration configuration, IIocResolver iocResolver)
   在 Abp.Localization.MultiTenantLocalizationSource.Initialize(ILocalizationConfiguration configuration, IIocResolver iocResolver)
   在 Abp.Localization.LocalizationManager.InitializeSources()
   在 Abp.AbpKernelModule.PostInitialize()
   在 Abp.Modules.AbpModuleManager.<>c.<StartModules>b__15_2(AbpModuleInfo module)
   在 System.Collections.Generic.List`1.ForEach(Action`1 action)
   在 Abp.Modules.AbpModuleManager.StartModules()
   在 Abp.AbpBootstrapper.Initialize()
Abp.AbpException: A dictionary can not contain same key twice. There are some duplicated names: Delete, Edit
   在 Abp.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomXmlString(String xmlString)
   在 Abp.Localization.Dictionaries.Xml.XmlEmbeddedFileLocalizationDictionaryProvider.CreateXmlLocalizationDictionary(String xmlString)
   在 Abp.Localization.Dictionaries.Xml.XmlEmbeddedFileLocalizationDictionaryProvider.Initialize(String sourceName)
   在 Abp.Localization.MultiTenantLocalizationDictionaryProvider.Initialize(String sourceName)
   在 Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource.Initialize(ILocalizationConfiguration configuration, IIocResolver iocResolver)
   在 Abp.Localization.MultiTenantLocalizationSource.Initialize(ILocalizationConfiguration configuration, IIocResolver iocResolver)
   在 Abp.Localization.LocalizationManager.InitializeSources()
   在 Abp.AbpKernelModule.PostInitialize()
   在 Abp.Modules.AbpModuleManager.<>c.<StartModules>b__15_2(AbpModuleInfo module)
   在 System.Collections.Generic.List`1.ForEach(Action`1 action)
   在 Abp.Modules.AbpModuleManager.StartModules()
   在 Abp.AbpBootstrapper.Initialize()
DEBUG 2017-11-07 15:36:43,179 [68   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-07 15:36:43,183 [68   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-07 15:37:48,951 [41   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-07 15:37:48,961 [41   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-07 15:37:48,967 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,968 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,969 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,969 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,969 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,969 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,969 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,969 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,969 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,969 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,970 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,971 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,971 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:48,973 [41   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-07 15:37:49,189 [41   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 15:37:49,190 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 15:37:49,190 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 15:37:49,190 [41   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 15:37:49,476 [41   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:37:50,437 [41   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-07 15:37:50,441 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-07 15:37:50,442 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-07 15:37:50,448 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-07 15:37:50,458 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-07 15:37:50,492 [41   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 15:37:50,951 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 15:37:51,037 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 37 classes define auto mapping attributes
DEBUG 2017-11-07 15:37:51,037 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-07 15:37:51,039 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-07 15:37:51,040 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-07 15:37:51,041 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-07 15:37:51,041 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-07 15:37:51,041 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-07 15:37:51,041 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-07 15:37:51,041 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-07 15:37:51,041 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-07 15:37:51,041 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-07 15:37:51,041 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-07 15:37:51,041 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-07 15:37:51,041 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-07 15:37:51,298 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 15:37:51,311 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 15:37:51,318 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-07 15:37:51,319 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-07 15:37:51,320 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-07 15:37:51,321 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-07 15:37:51,322 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-07 15:37:51,322 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-07 15:37:51,323 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-07 15:37:51,324 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-07 15:37:51,325 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-07 15:37:51,325 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-07 15:37:51,326 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-07 15:37:51,327 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-07 15:37:51,328 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-07 15:37:51,328 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-07 15:37:51,329 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-07 15:37:51,330 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-07 15:37:51,331 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-07 15:37:51,331 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-07 15:37:51,332 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-07 15:37:51,333 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-07 15:37:51,334 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-07 15:37:51,334 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-07 15:37:51,335 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-07 15:37:51,336 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-07 15:38:00,273 [20   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"ca27a255-7e53-492a-ae8b-17b562108949","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:38:00.2708033Z","Properties":{}}
DEBUG 2017-11-07 15:38:00,334 [66   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: ca27a255-7e53-492a-ae8b-17b562108949
DEBUG 2017-11-07 15:49:26,613 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: ca27a255-7e53-492a-ae8b-17b562108949
DEBUG 2017-11-07 15:49:27,457 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"9846749e-254c-4c65-b568-6d896e60aacd","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:49:27.4578033Z","Properties":{}}
DEBUG 2017-11-07 15:49:27,465 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 9846749e-254c-4c65-b568-6d896e60aacd
DEBUG 2017-11-07 15:49:41,247 [71   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 9846749e-254c-4c65-b568-6d896e60aacd
DEBUG 2017-11-07 15:49:42,453 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"bed1e3f1-c10f-4314-8c47-8592dfe85ca3","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:49:42.4538033Z","Properties":{}}
DEBUG 2017-11-07 15:49:42,463 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: bed1e3f1-c10f-4314-8c47-8592dfe85ca3
DEBUG 2017-11-07 15:51:01,771 [76   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-07 15:51:01,773 [76   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 15:51:01,775 [76   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 15:51:01,775 [76   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-07 15:51:10,160 [39   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-07 15:51:10,171 [39   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-07 15:51:10,177 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,179 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,179 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,179 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,179 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,179 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,179 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,179 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,179 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,179 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,180 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,180 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,180 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,180 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,180 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,180 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,180 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,180 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,180 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,181 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,181 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:10,183 [39   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-07 15:51:10,273 [39   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 15:51:10,273 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 15:51:10,273 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 15:51:10,273 [39   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 15:51:10,579 [39   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 15:51:11,381 [39   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-07 15:51:11,386 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-07 15:51:11,387 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-07 15:51:11,391 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-07 15:51:11,401 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-07 15:51:11,436 [39   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 15:51:11,907 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 15:51:11,996 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 37 classes define auto mapping attributes
DEBUG 2017-11-07 15:51:11,996 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-07 15:51:11,998 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-07 15:51:11,998 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-07 15:51:11,998 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-07 15:51:11,998 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-07 15:51:11,999 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-07 15:51:12,000 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-07 15:51:12,000 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-07 15:51:12,000 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-07 15:51:12,000 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-07 15:51:12,000 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-07 15:51:12,000 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-07 15:51:12,000 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-07 15:51:12,261 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 15:51:12,273 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 15:51:12,281 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-07 15:51:12,282 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-07 15:51:12,283 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-07 15:51:12,284 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-07 15:51:12,285 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-07 15:51:12,285 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-07 15:51:12,286 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-07 15:51:12,287 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-07 15:51:12,288 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-07 15:51:12,288 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-07 15:51:12,289 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-07 15:51:12,290 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-07 15:51:12,290 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-07 15:51:12,291 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-07 15:51:12,292 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-07 15:51:12,293 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-07 15:51:12,294 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-07 15:51:12,294 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-07 15:51:12,295 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-07 15:51:12,296 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-07 15:51:12,297 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-07 15:51:12,297 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-07 15:51:12,298 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-07 15:51:12,299 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-07 15:51:13,644 [46   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"bed1e3f1-c10f-4314-8c47-8592dfe85ca3","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:51:13.5828033Z","Properties":{}}
DEBUG 2017-11-07 15:51:13,645 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"bed1e3f1-c10f-4314-8c47-8592dfe85ca3","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:51:13.5828033Z","Properties":{}}
DEBUG 2017-11-07 15:51:15,667 [48   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"bed1e3f1-c10f-4314-8c47-8592dfe85ca3","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:51:13.5828033Z","Properties":{}}
DEBUG 2017-11-07 15:51:18,221 [76   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: bed1e3f1-c10f-4314-8c47-8592dfe85ca3
DEBUG 2017-11-07 15:51:19,521 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"771cadb3-24cf-4f22-b8a9-a2f172466610","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:51:19.5218033Z","Properties":{}}
DEBUG 2017-11-07 15:51:19,571 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 771cadb3-24cf-4f22-b8a9-a2f172466610
DEBUG 2017-11-07 15:59:26,135 [52   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 771cadb3-24cf-4f22-b8a9-a2f172466610
DEBUG 2017-11-07 15:59:27,203 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"0da5862a-f44c-4d71-b73b-ecf6294441e1","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T07:59:27.2028033Z","Properties":{}}
DEBUG 2017-11-07 15:59:27,212 [8    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 0da5862a-f44c-4d71-b73b-ecf6294441e1
DEBUG 2017-11-07 16:00:05,100 [8    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 0da5862a-f44c-4d71-b73b-ecf6294441e1
DEBUG 2017-11-07 16:00:05,740 [52   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"a48defb4-4c60-44a2-af03-d4ab240be993","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T08:00:05.7408033Z","Properties":{}}
DEBUG 2017-11-07 16:00:05,748 [8    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: a48defb4-4c60-44a2-af03-d4ab240be993
DEBUG 2017-11-07 16:06:14,027 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: a48defb4-4c60-44a2-af03-d4ab240be993
DEBUG 2017-11-07 16:06:17,749 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"33f04d91-65dc-4c46-8859-e35f36f9ed55","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T08:06:17.7498033Z","Properties":{}}
DEBUG 2017-11-07 16:06:17,760 [46   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 33f04d91-65dc-4c46-8859-e35f36f9ed55
DEBUG 2017-11-07 16:13:46,058 [47   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 33f04d91-65dc-4c46-8859-e35f36f9ed55
DEBUG 2017-11-07 16:13:47,124 [47   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"2c3a641b-4322-4da7-8d9a-973241b7d915","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T08:13:47.1248033Z","Properties":{}}
DEBUG 2017-11-07 16:13:47,133 [74   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 2c3a641b-4322-4da7-8d9a-973241b7d915
DEBUG 2017-11-07 16:14:00,551 [75   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 2c3a641b-4322-4da7-8d9a-973241b7d915
DEBUG 2017-11-07 16:14:06,390 [74   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"2e2fbf57-a979-4fff-98fa-2d36f6fc329c","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T08:14:06.3908033Z","Properties":{}}
DEBUG 2017-11-07 16:14:06,401 [81   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 2e2fbf57-a979-4fff-98fa-2d36f6fc329c
DEBUG 2017-11-07 16:16:04,638 [75   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 2e2fbf57-a979-4fff-98fa-2d36f6fc329c
DEBUG 2017-11-07 16:16:06,230 [46   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"e7a52cc9-5e0d-4bd5-862b-f452abdb68f3","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T08:16:06.2308033Z","Properties":{}}
DEBUG 2017-11-07 16:16:06,240 [18   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: e7a52cc9-5e0d-4bd5-862b-f452abdb68f3
DEBUG 2017-11-07 16:16:28,210 [46   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: e7a52cc9-5e0d-4bd5-862b-f452abdb68f3
DEBUG 2017-11-07 16:16:30,808 [30   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"fce42006-36ec-405e-8d8d-5d872e86e1ae","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T08:16:30.8088033Z","Properties":{}}
DEBUG 2017-11-07 16:16:30,818 [9    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: fce42006-36ec-405e-8d8d-5d872e86e1ae
DEBUG 2017-11-07 17:14:04,378 [32   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-07 17:14:04,379 [32   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 17:14:04,380 [32   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 17:14:04,380 [32   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-07 17:14:08,235 [39   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-07 17:14:08,246 [39   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-07 17:14:08,251 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,253 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,253 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,253 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,253 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,253 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,254 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,254 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,254 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,254 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,254 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,255 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,255 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,255 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,255 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,255 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,255 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,255 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,256 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,256 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,256 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:08,258 [39   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-07 17:14:08,704 [39   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 17:14:08,704 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 17:14:08,704 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 17:14:08,704 [39   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 17:14:09,029 [39   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:14:09,595 [39   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-07 17:14:09,600 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-07 17:14:09,601 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-07 17:14:09,625 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-07 17:14:09,654 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-07 17:14:09,688 [39   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 17:14:10,185 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 17:14:10,277 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 37 classes define auto mapping attributes
DEBUG 2017-11-07 17:14:10,277 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-07 17:14:10,280 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-07 17:14:10,281 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-07 17:14:10,282 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-07 17:14:10,282 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-07 17:14:10,282 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-07 17:14:10,282 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-07 17:14:10,282 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-07 17:14:10,282 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-07 17:14:10,282 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-07 17:14:10,282 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-07 17:14:10,282 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-07 17:14:10,282 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-07 17:14:10,569 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 17:14:10,582 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 17:14:10,590 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-07 17:14:10,591 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-07 17:14:10,591 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-07 17:14:10,592 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-07 17:14:10,593 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-07 17:14:10,594 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-07 17:14:10,595 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-07 17:14:10,595 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-07 17:14:10,596 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-07 17:14:10,597 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-07 17:14:10,598 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-07 17:14:10,598 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-07 17:14:10,599 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-07 17:14:10,600 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-07 17:14:10,601 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-07 17:14:10,601 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-07 17:14:10,602 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-07 17:14:10,603 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-07 17:14:10,604 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-07 17:14:10,605 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-07 17:14:10,605 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-07 17:14:10,606 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-07 17:14:10,607 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-07 17:14:10,608 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-07 17:14:14,458 [72   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"fce42006-36ec-405e-8d8d-5d872e86e1ae","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:14:14.1558033Z","Properties":{}}
DEBUG 2017-11-07 17:14:14,463 [47   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"fce42006-36ec-405e-8d8d-5d872e86e1ae","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:14:14.1558033Z","Properties":{}}
DEBUG 2017-11-07 17:14:16,641 [59   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"fce42006-36ec-405e-8d8d-5d872e86e1ae","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:14:14.1558033Z","Properties":{}}
DEBUG 2017-11-07 17:28:40,828 [46   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: fce42006-36ec-405e-8d8d-5d872e86e1ae
DEBUG 2017-11-07 17:28:42,050 [51   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"099a7ff2-c93a-41fb-af42-404b1799c565","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:28:42.0508033Z","Properties":{}}
DEBUG 2017-11-07 17:28:42,104 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 099a7ff2-c93a-41fb-af42-404b1799c565
DEBUG 2017-11-07 17:29:41,744 [51   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 099a7ff2-c93a-41fb-af42-404b1799c565
DEBUG 2017-11-07 17:29:43,032 [21   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"27afbe05-456e-44f4-9f0f-9e6963de43fc","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:29:43.0328033Z","Properties":{}}
DEBUG 2017-11-07 17:29:43,045 [60   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 27afbe05-456e-44f4-9f0f-9e6963de43fc
DEBUG 2017-11-07 17:31:07,397 [72   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 27afbe05-456e-44f4-9f0f-9e6963de43fc
DEBUG 2017-11-07 17:31:08,827 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"8be52b0e-d18a-407d-b666-d77e5b399985","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:31:08.8278033Z","Properties":{}}
DEBUG 2017-11-07 17:31:08,839 [30   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 8be52b0e-d18a-407d-b666-d77e5b399985
DEBUG 2017-11-07 17:32:41,924 [9    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 8be52b0e-d18a-407d-b666-d77e5b399985
DEBUG 2017-11-07 17:32:43,068 [47   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"3a215d98-77a2-44c7-b0ba-32f94ae3dcd3","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:32:43.0688033Z","Properties":{}}
DEBUG 2017-11-07 17:32:43,082 [81   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 3a215d98-77a2-44c7-b0ba-32f94ae3dcd3
DEBUG 2017-11-07 17:35:03,604 [60   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-07 17:35:03,605 [60   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 17:35:03,606 [60   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 17:35:03,606 [60   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-07 17:35:11,714 [41   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-07 17:35:11,725 [41   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-07 17:35:11,731 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,733 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,733 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,733 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,733 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,733 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,733 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,733 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,733 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,734 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,734 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,734 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,734 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,734 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,734 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,734 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,735 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,735 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,735 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,735 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,735 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:11,738 [41   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-07 17:35:11,839 [41   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 17:35:11,839 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 17:35:11,839 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 17:35:11,839 [41   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 17:35:12,232 [41   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:35:13,311 [41   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-07 17:35:13,317 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-07 17:35:13,318 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-07 17:35:13,322 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-07 17:35:13,332 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-07 17:35:13,368 [41   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 17:35:13,855 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 17:35:13,946 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 37 classes define auto mapping attributes
DEBUG 2017-11-07 17:35:13,946 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-07 17:35:13,948 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-07 17:35:13,949 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-07 17:35:13,950 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-07 17:35:13,950 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-07 17:35:13,950 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-07 17:35:13,950 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-07 17:35:13,950 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-07 17:35:13,950 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-07 17:35:13,950 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-07 17:35:13,950 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-07 17:35:13,950 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-07 17:35:13,950 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-07 17:35:13,950 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-07 17:35:13,950 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-07 17:35:13,950 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-07 17:35:14,289 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 17:35:14,325 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 17:35:14,334 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-07 17:35:14,335 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-07 17:35:14,336 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-07 17:35:14,338 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-07 17:35:14,338 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-07 17:35:14,339 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-07 17:35:14,340 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-07 17:35:14,341 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-07 17:35:14,342 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-07 17:35:14,343 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-07 17:35:14,343 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-07 17:35:14,344 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-07 17:35:14,345 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-07 17:35:14,345 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-07 17:35:14,346 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-07 17:35:14,347 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-07 17:35:14,348 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-07 17:35:14,349 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-07 17:35:14,349 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-07 17:35:14,350 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-07 17:35:14,351 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-07 17:35:14,352 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-07 17:35:14,353 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-07 17:35:14,353 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-07 17:35:17,428 [75   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"3a215d98-77a2-44c7-b0ba-32f94ae3dcd3","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:35:17.2828033Z","Properties":{}}
DEBUG 2017-11-07 17:35:17,429 [47   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"3a215d98-77a2-44c7-b0ba-32f94ae3dcd3","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:35:17.2828033Z","Properties":{}}
DEBUG 2017-11-07 17:35:17,433 [21   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"3a215d98-77a2-44c7-b0ba-32f94ae3dcd3","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:35:17.2828033Z","Properties":{}}
DEBUG 2017-11-07 17:35:19,472 [21   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"3a215d98-77a2-44c7-b0ba-32f94ae3dcd3","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:35:17.2828033Z","Properties":{}}
DEBUG 2017-11-07 17:35:22,281 [81   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 3a215d98-77a2-44c7-b0ba-32f94ae3dcd3
DEBUG 2017-11-07 17:35:23,499 [74   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"a74f1ffb-737e-4be7-a527-702e9a02a8b1","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:35:23.4998033Z","Properties":{}}
DEBUG 2017-11-07 17:35:23,528 [74   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: a74f1ffb-737e-4be7-a527-702e9a02a8b1
ERROR 2017-11-07 17:35:35,564 [51   ] .Mpa.Controllers.BannerManagerController - 未将对象引用设置到对象的实例。
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 TaiKang.Web.Areas.Mpa.Controllers.BannerManagerController.UploadBannerImage() 位置 E:\SVN\泰康生物\TaiKang.Web\Areas\Mpa\Controllers\BannerManagerController.cs:行号 78
   在 lambda_method(Closure , ControllerBase , Object[] )
   在 System.Web.Mvc.ActionMethodDispatcher.Execute(ControllerBase controller, Object[] parameters)
   在 System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<BeginInvokeSynchronousActionMethod>b__39(IAsyncResult asyncResult, ActionInvocation innerInvokeState)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`2.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass33.<BeginInvokeActionMethodWithFilters>b__32(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
DEBUG 2017-11-07 17:37:10,019 [30   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"a74f1ffb-737e-4be7-a527-702e9a02a8b1","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:35:23.4998033Z","Properties":{}}
DEBUG 2017-11-07 17:38:11,944 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: a74f1ffb-737e-4be7-a527-702e9a02a8b1
DEBUG 2017-11-07 17:38:11,946 [30   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"a74f1ffb-737e-4be7-a527-702e9a02a8b1","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:38:11.9468033Z","Properties":{}}
DEBUG 2017-11-07 17:38:11,946 [20   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"a74f1ffb-737e-4be7-a527-702e9a02a8b1","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:38:11.9468033Z","Properties":{}}
DEBUG 2017-11-07 17:38:11,950 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"a74f1ffb-737e-4be7-a527-702e9a02a8b1","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:38:11.9468033Z","Properties":{}}
DEBUG 2017-11-07 17:38:11,952 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"a74f1ffb-737e-4be7-a527-702e9a02a8b1","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:38:11.9468033Z","Properties":{}}
DEBUG 2017-11-07 17:38:11,954 [60   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"a74f1ffb-737e-4be7-a527-702e9a02a8b1","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:38:11.9468033Z","Properties":{}}
ERROR 2017-11-07 17:38:11,974 [75   ] .Mpa.Controllers.BannerManagerController - 未将对象引用设置到对象的实例。
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 TaiKang.Web.Areas.Mpa.Controllers.BannerManagerController.UploadBannerImage() 位置 E:\SVN\泰康生物\TaiKang.Web\Areas\Mpa\Controllers\BannerManagerController.cs:行号 78
   在 lambda_method(Closure , ControllerBase , Object[] )
   在 System.Web.Mvc.ActionMethodDispatcher.Execute(ControllerBase controller, Object[] parameters)
   在 System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<BeginInvokeSynchronousActionMethod>b__39(IAsyncResult asyncResult, ActionInvocation innerInvokeState)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`2.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass33.<BeginInvokeActionMethodWithFilters>b__32(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
DEBUG 2017-11-07 17:38:13,976 [66   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"a74f1ffb-737e-4be7-a527-702e9a02a8b1","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:38:11.9468033Z","Properties":{}}
DEBUG 2017-11-07 17:39:14,296 [57   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-07 17:39:14,299 [57   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 17:39:14,300 [57   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 17:39:14,300 [57   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-07 17:39:19,794 [41   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-07 17:39:19,806 [41   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-07 17:39:19,815 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,818 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,818 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,818 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,819 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,819 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,819 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,819 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,819 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,819 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,820 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,820 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,820 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,821 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,821 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,821 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,821 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,821 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,821 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,822 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,822 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:19,825 [41   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-07 17:39:20,006 [41   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 17:39:20,007 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 17:39:20,007 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 17:39:20,007 [41   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-07 17:39:20,301 [41   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-07 17:39:21,290 [41   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-07 17:39:21,296 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-07 17:39:21,296 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-07 17:39:21,302 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-07 17:39:21,315 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-07 17:39:21,352 [41   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-07 17:39:21,807 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 17:39:21,894 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 37 classes define auto mapping attributes
DEBUG 2017-11-07 17:39:21,894 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-07 17:39:21,897 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-07 17:39:21,897 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-07 17:39:21,897 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-07 17:39:21,897 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-07 17:39:21,897 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-07 17:39:21,897 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-07 17:39:21,897 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-07 17:39:21,897 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-07 17:39:21,897 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-07 17:39:21,897 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-07 17:39:21,897 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-07 17:39:21,897 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-07 17:39:21,898 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-07 17:39:22,154 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 17:39:22,167 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-07 17:39:22,175 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-07 17:39:22,175 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-07 17:39:22,176 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-07 17:39:22,177 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-07 17:39:22,178 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-07 17:39:22,178 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-07 17:39:22,179 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-07 17:39:22,180 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-07 17:39:22,181 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-07 17:39:22,181 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-07 17:39:22,182 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-07 17:39:22,183 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-07 17:39:22,184 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-07 17:39:22,185 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-07 17:39:22,186 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-07 17:39:22,187 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-07 17:39:22,187 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-07 17:39:22,188 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-07 17:39:22,189 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-07 17:39:22,190 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-07 17:39:22,190 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-07 17:39:22,191 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-07 17:39:22,192 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-07 17:39:22,193 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-07 17:39:24,664 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"a74f1ffb-737e-4be7-a527-702e9a02a8b1","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:39:24.5698033Z","Properties":{}}
DEBUG 2017-11-07 17:39:24,664 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"a74f1ffb-737e-4be7-a527-702e9a02a8b1","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:39:24.5698033Z","Properties":{}}
DEBUG 2017-11-07 17:39:26,686 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"a74f1ffb-737e-4be7-a527-702e9a02a8b1","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:39:24.5698033Z","Properties":{}}
DEBUG 2017-11-07 17:39:29,523 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: a74f1ffb-737e-4be7-a527-702e9a02a8b1
DEBUG 2017-11-07 17:39:30,597 [21   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"4f115c7e-ccc3-4b16-84a9-938ed759dba0","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T09:39:30.5978033Z","Properties":{}}
DEBUG 2017-11-07 17:39:30,627 [20   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 4f115c7e-ccc3-4b16-84a9-938ed759dba0
WARN  2017-11-07 21:58:03,252 [23   ] nHandling.AbpApiExceptionFilterAttribute - Method arguments are not valid! See ValidationErrors for details.
Abp.Runtime.Validation.AbpValidationException: Method arguments are not valid! See ValidationErrors for details.
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.ThrowValidationError()
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.Validate()
   在 Abp.WebApi.Validation.AbpApiValidationFilter.<ExecuteActionFilterAsync>d__5.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Auditing.AbpApiAuditFilter.<ExecuteActionFilterAsync>d__4.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ActionFilterResult.<ExecuteAsync>d__2.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Security.AntiForgery.AbpAntiForgeryApiFilter.<ExecuteAuthorizationFilterAsync>d__10.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Authorization.AbpApiAuthorizeFilter.<ExecuteAuthorizationFilterAsync>d__7.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.AuthenticationFilterResult.<ExecuteAsync>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ExceptionFilterResult.<ExecuteAsync>d__0.MoveNext()
WARN  2017-11-07 21:58:03,501 [23   ] nHandling.AbpApiExceptionFilterAttribute - There are 1 validation errors:
WARN  2017-11-07 21:58:03,501 [23   ] nHandling.AbpApiExceptionFilterAttribute -  (input.Enabled)
WARN  2017-11-07 22:00:19,032 [64   ] nHandling.AbpApiExceptionFilterAttribute - Method arguments are not valid! See ValidationErrors for details.
Abp.Runtime.Validation.AbpValidationException: Method arguments are not valid! See ValidationErrors for details.
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.ThrowValidationError()
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.Validate()
   在 Abp.WebApi.Validation.AbpApiValidationFilter.<ExecuteActionFilterAsync>d__5.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Auditing.AbpApiAuditFilter.<ExecuteActionFilterAsync>d__4.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ActionFilterResult.<ExecuteAsync>d__2.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Security.AntiForgery.AbpAntiForgeryApiFilter.<ExecuteAuthorizationFilterAsync>d__10.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Authorization.AbpApiAuthorizeFilter.<ExecuteAuthorizationFilterAsync>d__7.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.AuthenticationFilterResult.<ExecuteAsync>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ExceptionFilterResult.<ExecuteAsync>d__0.MoveNext()
WARN  2017-11-07 22:00:19,032 [64   ] nHandling.AbpApiExceptionFilterAttribute - There are 1 validation errors:
WARN  2017-11-07 22:00:19,032 [64   ] nHandling.AbpApiExceptionFilterAttribute -  (input.Enabled)
DEBUG 2017-11-07 22:23:41,702 [42   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 4f115c7e-ccc3-4b16-84a9-938ed759dba0
DEBUG 2017-11-07 22:23:43,206 [35   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"859eedff-efa5-4a2f-b3e5-a6754969f02d","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T14:23:43.2068033Z","Properties":{}}
DEBUG 2017-11-07 22:23:43,215 [65   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 859eedff-efa5-4a2f-b3e5-a6754969f02d
DEBUG 2017-11-07 22:24:30,497 [35   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 859eedff-efa5-4a2f-b3e5-a6754969f02d
DEBUG 2017-11-07 22:24:31,805 [68   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"031a59d2-8199-4dc6-b0ff-bfeb72156fdc","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T14:24:31.8058033Z","Properties":{}}
DEBUG 2017-11-07 22:24:31,819 [38   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 031a59d2-8199-4dc6-b0ff-bfeb72156fdc
DEBUG 2017-11-07 22:27:02,130 [64   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 031a59d2-8199-4dc6-b0ff-bfeb72156fdc
DEBUG 2017-11-07 22:27:08,083 [42   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"55dca748-db26-4f1f-9f5a-c5b0998e68d8","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T14:27:08.0838033Z","Properties":{}}
DEBUG 2017-11-07 22:27:08,093 [35   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 55dca748-db26-4f1f-9f5a-c5b0998e68d8
DEBUG 2017-11-07 22:30:47,896 [78   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 55dca748-db26-4f1f-9f5a-c5b0998e68d8
DEBUG 2017-11-07 22:30:48,965 [38   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"d41c4bb4-73e5-40cf-8394-43ba5d845f4c","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T14:30:48.9658033Z","Properties":{}}
DEBUG 2017-11-07 22:30:48,985 [59   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: d41c4bb4-73e5-40cf-8394-43ba5d845f4c
DEBUG 2017-11-07 22:34:45,867 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: d41c4bb4-73e5-40cf-8394-43ba5d845f4c
DEBUG 2017-11-07 22:34:46,787 [38   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"c3ccfdc8-79a2-4561-b9ae-8d69fc9897ba","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T14:34:46.7878033Z","Properties":{}}
DEBUG 2017-11-07 22:34:46,798 [64   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: c3ccfdc8-79a2-4561-b9ae-8d69fc9897ba
DEBUG 2017-11-07 22:40:05,266 [77   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: c3ccfdc8-79a2-4561-b9ae-8d69fc9897ba
DEBUG 2017-11-07 22:40:06,418 [65   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"588d96c8-9a2c-45c6-88ac-84d9a01db422","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T14:40:06.4188033Z","Properties":{}}
DEBUG 2017-11-07 22:40:06,428 [23   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 588d96c8-9a2c-45c6-88ac-84d9a01db422
DEBUG 2017-11-07 22:42:38,224 [64   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 588d96c8-9a2c-45c6-88ac-84d9a01db422
DEBUG 2017-11-07 22:42:39,054 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"700cba13-8c0d-4f1e-ade1-12c012cde74b","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T14:42:39.0548033Z","Properties":{}}
DEBUG 2017-11-07 22:42:39,062 [77   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 700cba13-8c0d-4f1e-ade1-12c012cde74b
DEBUG 2017-11-07 22:48:20,811 [85   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"586f8133-324b-469e-97ff-7e9be97750b9","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T14:48:20.8118033Z","Properties":{}}
DEBUG 2017-11-07 22:48:31,870 [78   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 586f8133-324b-469e-97ff-7e9be97750b9
DEBUG 2017-11-07 22:48:33,217 [23   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"89102ced-ea64-4d60-a701-ae87370c9b99","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T14:48:33.2178033Z","Properties":{}}
DEBUG 2017-11-07 22:48:33,238 [65   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 89102ced-ea64-4d60-a701-ae87370c9b99
DEBUG 2017-11-07 22:48:44,562 [42   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 89102ced-ea64-4d60-a701-ae87370c9b99
DEBUG 2017-11-07 22:48:45,987 [85   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"62477363-5913-4f17-a701-3864c0ad6d32","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-07T14:48:45.9878033Z","Properties":{}}
DEBUG 2017-11-07 22:48:45,999 [78   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 62477363-5913-4f17-a701-3864c0ad6d32
DEBUG 2017-11-07 22:48:47,734 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 700cba13-8c0d-4f1e-ade1-12c012cde74b
DEBUG 2017-11-08 09:09:29,242 [72   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 62477363-5913-4f17-a701-3864c0ad6d32
DEBUG 2017-11-08 09:09:30,173 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"db4efc8b-8500-4bae-a961-d4218d8fc552","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:09:30.1738033Z","Properties":{}}
DEBUG 2017-11-08 09:09:30,182 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: db4efc8b-8500-4bae-a961-d4218d8fc552
DEBUG 2017-11-08 09:12:24,032 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: db4efc8b-8500-4bae-a961-d4218d8fc552
DEBUG 2017-11-08 09:12:24,878 [75   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"7248b68f-b69c-4c43-ba83-18019dedcbc6","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:12:24.8788033Z","Properties":{}}
DEBUG 2017-11-08 09:12:24,886 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 7248b68f-b69c-4c43-ba83-18019dedcbc6
DEBUG 2017-11-08 09:13:39,121 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 7248b68f-b69c-4c43-ba83-18019dedcbc6
DEBUG 2017-11-08 09:13:40,451 [43   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"0f416c87-6d4e-404b-ae8b-8510c37d75d3","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:13:40.4518033Z","Properties":{}}
DEBUG 2017-11-08 09:13:40,461 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 0f416c87-6d4e-404b-ae8b-8510c37d75d3
DEBUG 2017-11-08 09:22:59,524 [75   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 0f416c87-6d4e-404b-ae8b-8510c37d75d3
DEBUG 2017-11-08 09:23:00,905 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"c7e3d19d-5a18-479a-9f44-fcc49e70c592","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:23:00.9058033Z","Properties":{}}
DEBUG 2017-11-08 09:23:00,916 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: c7e3d19d-5a18-479a-9f44-fcc49e70c592
DEBUG 2017-11-08 09:30:20,381 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: c7e3d19d-5a18-479a-9f44-fcc49e70c592
DEBUG 2017-11-08 09:30:22,071 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"43233417-c33e-40e8-80c1-3ce4d3156816","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:30:22.0718033Z","Properties":{}}
DEBUG 2017-11-08 09:30:22,085 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 43233417-c33e-40e8-80c1-3ce4d3156816
DEBUG 2017-11-08 09:33:00,559 [75   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 43233417-c33e-40e8-80c1-3ce4d3156816
DEBUG 2017-11-08 09:33:01,658 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"83a8ac03-d5d0-43ad-b0f8-e27c9077152c","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:33:01.6588033Z","Properties":{}}
DEBUG 2017-11-08 09:33:01,673 [43   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 83a8ac03-d5d0-43ad-b0f8-e27c9077152c
DEBUG 2017-11-08 09:33:33,469 [7    ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 09:33:33,472 [7    ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 09:33:33,473 [7    ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 09:33:33,473 [7    ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 09:33:40,520 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 09:33:40,533 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 09:33:40,540 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,542 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,542 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,542 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,542 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,543 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,543 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,543 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,543 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,543 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,543 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,543 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,543 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,544 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,544 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,544 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,544 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,544 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,544 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,544 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,544 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:40,547 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 09:33:40,729 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 09:33:40,729 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 09:33:40,729 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 09:33:40,729 [1    ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 09:33:41,036 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 09:33:41,918 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 09:33:41,924 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 09:33:41,945 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 09:33:41,949 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 09:33:41,959 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 09:33:41,995 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 09:33:42,466 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 09:33:42,556 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 37 classes define auto mapping attributes
DEBUG 2017-11-08 09:33:42,556 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 09:33:42,559 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 09:33:42,559 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 09:33:42,559 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 09:33:42,559 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 09:33:42,559 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 09:33:42,559 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 09:33:42,559 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 09:33:42,559 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 09:33:42,559 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 09:33:42,559 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 09:33:42,559 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 09:33:42,559 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 09:33:42,559 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 09:33:42,559 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 09:33:42,560 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 09:33:42,839 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 09:33:42,852 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 09:33:42,860 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 09:33:42,861 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 09:33:42,862 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 09:33:42,862 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 09:33:42,863 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 09:33:42,864 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 09:33:42,865 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 09:33:42,865 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 09:33:42,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 09:33:42,867 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 09:33:42,868 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 09:33:42,868 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 09:33:42,869 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 09:33:42,870 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 09:33:42,871 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 09:33:42,872 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 09:33:42,872 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 09:33:42,873 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 09:33:42,874 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 09:33:42,875 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 09:33:42,875 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 09:33:42,876 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 09:33:42,877 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 09:33:42,878 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 09:33:44,400 [75   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"83a8ac03-d5d0-43ad-b0f8-e27c9077152c","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:33:44.3448033Z","Properties":{}}
DEBUG 2017-11-08 09:33:44,405 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"83a8ac03-d5d0-43ad-b0f8-e27c9077152c","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:33:44.3448033Z","Properties":{}}
DEBUG 2017-11-08 09:33:46,426 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"83a8ac03-d5d0-43ad-b0f8-e27c9077152c","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:33:44.3448033Z","Properties":{}}
DEBUG 2017-11-08 09:33:49,811 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 83a8ac03-d5d0-43ad-b0f8-e27c9077152c
DEBUG 2017-11-08 09:33:51,288 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"9f735ed9-1ba1-45ba-bccf-48ad4f6794dc","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:33:51.2888033Z","Properties":{}}
DEBUG 2017-11-08 09:33:51,336 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 9f735ed9-1ba1-45ba-bccf-48ad4f6794dc
DEBUG 2017-11-08 09:34:14,141 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 9f735ed9-1ba1-45ba-bccf-48ad4f6794dc
DEBUG 2017-11-08 09:34:15,734 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"c2c4f00a-5228-4567-83bf-e0a3bc5b65db","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:34:15.7348033Z","Properties":{}}
DEBUG 2017-11-08 09:34:15,748 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: c2c4f00a-5228-4567-83bf-e0a3bc5b65db
WARN  2017-11-08 09:36:48,126 [49   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannerCreate' in localization source 'TaiKang'!
WARN  2017-11-08 09:36:48,127 [49   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannderEdit' in localization source 'TaiKang'!
WARN  2017-11-08 09:36:48,127 [49   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannderDelete' in localization source 'TaiKang'!
DEBUG 2017-11-08 09:36:49,092 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: c2c4f00a-5228-4567-83bf-e0a3bc5b65db
DEBUG 2017-11-08 09:36:49,867 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"6797962a-9a8a-4b48-8fa0-5eabdbf70d54","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:36:49.8678033Z","Properties":{}}
DEBUG 2017-11-08 09:36:49,874 [43   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 6797962a-9a8a-4b48-8fa0-5eabdbf70d54
WARN  2017-11-08 09:37:06,166 [49   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannerCreate' in localization source 'TaiKang'!
WARN  2017-11-08 09:37:06,166 [49   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannderEdit' in localization source 'TaiKang'!
WARN  2017-11-08 09:37:06,167 [49   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannderDelete' in localization source 'TaiKang'!
WARN  2017-11-08 09:37:17,388 [25   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannerCreate' in localization source 'TaiKang'!
WARN  2017-11-08 09:37:17,388 [25   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannderEdit' in localization source 'TaiKang'!
WARN  2017-11-08 09:37:17,388 [25   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannderDelete' in localization source 'TaiKang'!
DEBUG 2017-11-08 09:37:18,312 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 6797962a-9a8a-4b48-8fa0-5eabdbf70d54
DEBUG 2017-11-08 09:37:19,039 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"798f724e-c495-4fe7-99d3-c98358b42a55","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:37:19.0398033Z","Properties":{}}
DEBUG 2017-11-08 09:37:19,047 [72   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 798f724e-c495-4fe7-99d3-c98358b42a55
WARN  2017-11-08 09:47:27,802 [72   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannerCreate' in localization source 'TaiKang'!
WARN  2017-11-08 09:47:27,802 [72   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannderEdit' in localization source 'TaiKang'!
WARN  2017-11-08 09:47:27,802 [72   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannderDelete' in localization source 'TaiKang'!
DEBUG 2017-11-08 09:47:27,936 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 798f724e-c495-4fe7-99d3-c98358b42a55
DEBUG 2017-11-08 09:47:29,066 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"6c866533-1a36-49e9-a9ed-2a746412b0c8","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:47:29.0668033Z","Properties":{}}
DEBUG 2017-11-08 09:47:29,074 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 6c866533-1a36-49e9-a9ed-2a746412b0c8
DEBUG 2017-11-08 09:47:30,710 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 6c866533-1a36-49e9-a9ed-2a746412b0c8
DEBUG 2017-11-08 09:47:31,621 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"17899240-058f-4c12-8926-a794a25fdbd5","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:47:31.6218033Z","Properties":{}}
DEBUG 2017-11-08 09:47:31,627 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 17899240-058f-4c12-8926-a794a25fdbd5
DEBUG 2017-11-08 09:47:54,304 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 17899240-058f-4c12-8926-a794a25fdbd5
DEBUG 2017-11-08 09:47:55,168 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"690aed91-70ec-4034-abff-13cb74621681","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:47:55.1688033Z","Properties":{}}
DEBUG 2017-11-08 09:47:55,183 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 690aed91-70ec-4034-abff-13cb74621681
DEBUG 2017-11-08 09:48:05,971 [72   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 690aed91-70ec-4034-abff-13cb74621681
DEBUG 2017-11-08 09:48:07,336 [50   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"459885c2-f75c-44b8-8f7b-0b1ff6bd970d","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:48:07.3368033Z","Properties":{}}
DEBUG 2017-11-08 09:48:07,349 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 459885c2-f75c-44b8-8f7b-0b1ff6bd970d
DEBUG 2017-11-08 09:50:39,002 [72   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 459885c2-f75c-44b8-8f7b-0b1ff6bd970d
DEBUG 2017-11-08 09:50:39,907 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"a926c806-dea2-4b34-a80a-5aad436395d1","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:50:39.9078033Z","Properties":{}}
DEBUG 2017-11-08 09:50:39,916 [75   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: a926c806-dea2-4b34-a80a-5aad436395d1
WARN  2017-11-08 09:50:47,274 [75   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannerCreate' in localization source 'TaiKang'!
WARN  2017-11-08 09:50:47,274 [75   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannderEdit' in localization source 'TaiKang'!
WARN  2017-11-08 09:50:47,274 [75   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannderDelete' in localization source 'TaiKang'!
DEBUG 2017-11-08 09:50:47,469 [75   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: a926c806-dea2-4b34-a80a-5aad436395d1
DEBUG 2017-11-08 09:50:48,424 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"2bb713c2-626f-4f08-a08b-06cfcb5a27fe","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:50:48.4248033Z","Properties":{}}
DEBUG 2017-11-08 09:50:48,432 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 2bb713c2-626f-4f08-a08b-06cfcb5a27fe
WARN  2017-11-08 09:51:58,832 [57   ] nHandling.AbpApiExceptionFilterAttribute - Method arguments are not valid! See ValidationErrors for details.
Abp.Runtime.Validation.AbpValidationException: Method arguments are not valid! See ValidationErrors for details.
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.ThrowValidationError()
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.Validate()
   在 Abp.WebApi.Validation.AbpApiValidationFilter.<ExecuteActionFilterAsync>d__5.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Auditing.AbpApiAuditFilter.<ExecuteActionFilterAsync>d__4.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ActionFilterResult.<ExecuteAsync>d__2.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Security.AntiForgery.AbpAntiForgeryApiFilter.<ExecuteAuthorizationFilterAsync>d__10.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Authorization.AbpApiAuthorizeFilter.<ExecuteAuthorizationFilterAsync>d__7.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.AuthenticationFilterResult.<ExecuteAsync>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ExceptionFilterResult.<ExecuteAsync>d__0.MoveNext()
WARN  2017-11-08 09:51:58,858 [57   ] nHandling.AbpApiExceptionFilterAttribute - There are 2 validation errors:
WARN  2017-11-08 09:51:58,858 [57   ] nHandling.AbpApiExceptionFilterAttribute - EmailAddress 字段是必需的。 (input.User.EmailAddress)
WARN  2017-11-08 09:51:58,858 [57   ] nHandling.AbpApiExceptionFilterAttribute - EmailAddress 字段不是有效的电子邮件地址。 (input.User.EmailAddress)
DEBUG 2017-11-08 09:52:53,282 [43   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 2bb713c2-626f-4f08-a08b-06cfcb5a27fe
DEBUG 2017-11-08 09:52:54,158 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"7eee2dab-b0a3-4996-8278-bdc20b4d5d5f","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T01:52:54.1588033Z","Properties":{}}
DEBUG 2017-11-08 09:52:54,165 [72   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 7eee2dab-b0a3-4996-8278-bdc20b4d5d5f
DEBUG 2017-11-08 10:15:43,998 [67   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 10:15:43,999 [67   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 10:15:43,999 [67   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 10:15:43,999 [67   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 10:15:46,796 [20   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 10:15:46,806 [20   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 10:15:46,811 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,813 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,813 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,813 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,813 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,813 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,814 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,814 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,814 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,814 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,814 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,814 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,815 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,815 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,815 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,815 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,815 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,815 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,815 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,815 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,816 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:46,818 [20   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 10:15:46,965 [20   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 10:15:46,965 [20   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 10:15:46,965 [20   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 10:15:46,965 [20   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 10:15:47,285 [20   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:15:47,781 [20   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 10:15:47,785 [20   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 10:15:47,786 [20   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 10:15:47,792 [20   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 10:15:47,802 [20   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 10:15:47,836 [20   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 10:15:48,305 [20   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 10:15:48,435 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 37 classes define auto mapping attributes
DEBUG 2017-11-08 10:15:48,435 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 10:15:48,438 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 10:15:48,438 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 10:15:48,438 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 10:15:48,438 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 10:15:48,438 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 10:15:48,438 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 10:15:48,438 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 10:15:48,438 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 10:15:48,438 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 10:15:48,439 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 10:15:48,699 [20   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 10:15:48,712 [20   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 10:15:48,719 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 10:15:48,720 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 10:15:48,721 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 10:15:48,722 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 10:15:48,722 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 10:15:48,723 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 10:15:48,724 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 10:15:48,725 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 10:15:48,725 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 10:15:48,726 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 10:15:48,727 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 10:15:48,728 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 10:15:48,728 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 10:15:48,729 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 10:15:48,730 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 10:15:48,731 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 10:15:48,731 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 10:15:48,732 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 10:15:48,733 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 10:15:48,734 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 10:15:48,734 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 10:15:48,735 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 10:15:48,736 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 10:15:48,737 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 10:15:51,837 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"7eee2dab-b0a3-4996-8278-bdc20b4d5d5f","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:15:51.6368033Z","Properties":{}}
WARN  2017-11-08 10:31:21,189 [29   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannerCreate' in localization source 'TaiKang'!
WARN  2017-11-08 10:31:21,190 [29   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannderEdit' in localization source 'TaiKang'!
WARN  2017-11-08 10:31:21,190 [29   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannderDelete' in localization source 'TaiKang'!
DEBUG 2017-11-08 10:31:23,039 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 7eee2dab-b0a3-4996-8278-bdc20b4d5d5f
DEBUG 2017-11-08 10:31:24,045 [43   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"e2080c25-bfcf-4047-bf55-23c15c6dccdd","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:31:24.0458033Z","Properties":{}}
DEBUG 2017-11-08 10:31:24,074 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: e2080c25-bfcf-4047-bf55-23c15c6dccdd
DEBUG 2017-11-08 10:32:59,263 [57   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 10:32:59,264 [57   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 10:32:59,265 [57   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 10:32:59,265 [57   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 10:33:04,321 [39   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 10:33:04,332 [39   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 10:33:04,337 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,339 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,339 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,339 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,339 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,340 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,340 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,340 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,340 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,340 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,340 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,340 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,340 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,341 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,341 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,341 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,341 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,341 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,341 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,341 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,341 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:04,344 [39   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 10:33:04,435 [39   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 10:33:04,435 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 10:33:04,435 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 10:33:04,435 [39   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 10:33:04,730 [39   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:33:05,531 [39   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 10:33:05,536 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 10:33:05,538 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 10:33:05,542 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 10:33:05,553 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 10:33:05,588 [39   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 10:33:06,157 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 10:33:06,247 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 38 classes define auto mapping attributes
DEBUG 2017-11-08 10:33:06,247 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 10:33:06,249 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 10:33:06,250 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 10:33:06,251 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 10:33:06,251 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 10:33:06,251 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 10:33:06,251 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 10:33:06,251 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 10:33:06,251 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 10:33:06,251 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 10:33:06,251 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 10:33:06,251 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 10:33:06,251 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 10:33:06,251 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 10:33:06,515 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 10:33:06,528 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 10:33:06,536 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 10:33:06,537 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 10:33:06,537 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 10:33:06,538 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 10:33:06,539 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 10:33:06,540 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 10:33:06,541 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 10:33:06,541 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 10:33:06,542 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 10:33:06,543 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 10:33:06,544 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 10:33:06,545 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 10:33:06,545 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 10:33:06,546 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 10:33:06,547 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 10:33:06,547 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 10:33:06,548 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 10:33:06,549 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 10:33:06,550 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 10:33:06,551 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 10:33:06,551 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 10:33:06,552 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 10:33:06,553 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 10:33:06,554 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 10:33:07,536 [72   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"e2080c25-bfcf-4047-bf55-23c15c6dccdd","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:33:07.4288033Z","Properties":{}}
DEBUG 2017-11-08 10:33:07,537 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"e2080c25-bfcf-4047-bf55-23c15c6dccdd","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:33:07.4288033Z","Properties":{}}
DEBUG 2017-11-08 10:33:09,558 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"e2080c25-bfcf-4047-bf55-23c15c6dccdd","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:33:07.4288033Z","Properties":{}}
DEBUG 2017-11-08 10:33:17,558 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: e2080c25-bfcf-4047-bf55-23c15c6dccdd
ERROR 2017-11-08 10:33:23,973 [79   ] .Mpa.Controllers.BannerManagerController - The partial view '_CreateOrEditModal' was not found or no view engine supports the searched locations. The following locations were searched:
~/Areas/Mpa/Views/BannerManager/_CreateOrEditModal.aspx
~/Areas/Mpa/Views/BannerManager/_CreateOrEditModal.ascx
~/Areas/Mpa/Views/Shared/_CreateOrEditModal.aspx
~/Areas/Mpa/Views/Shared/_CreateOrEditModal.ascx
~/Views/BannerManager/_CreateOrEditModal.aspx
~/Views/BannerManager/_CreateOrEditModal.ascx
~/Views/Shared/_CreateOrEditModal.aspx
~/Views/Shared/_CreateOrEditModal.ascx
~/Areas/Mpa/Views/BannerManager/_CreateOrEditModal.cshtml
~/Areas/Mpa/Views/BannerManager/_CreateOrEditModal.vbhtml
~/Areas/Mpa/Views/Shared/_CreateOrEditModal.cshtml
~/Areas/Mpa/Views/Shared/_CreateOrEditModal.vbhtml
~/Views/BannerManager/_CreateOrEditModal.cshtml
~/Views/BannerManager/_CreateOrEditModal.vbhtml
~/Views/Shared/_CreateOrEditModal.cshtml
~/Views/Shared/_CreateOrEditModal.vbhtml
System.InvalidOperationException: The partial view '_CreateOrEditModal' was not found or no view engine supports the searched locations. The following locations were searched:
~/Areas/Mpa/Views/BannerManager/_CreateOrEditModal.aspx
~/Areas/Mpa/Views/BannerManager/_CreateOrEditModal.ascx
~/Areas/Mpa/Views/Shared/_CreateOrEditModal.aspx
~/Areas/Mpa/Views/Shared/_CreateOrEditModal.ascx
~/Views/BannerManager/_CreateOrEditModal.aspx
~/Views/BannerManager/_CreateOrEditModal.ascx
~/Views/Shared/_CreateOrEditModal.aspx
~/Views/Shared/_CreateOrEditModal.ascx
~/Areas/Mpa/Views/BannerManager/_CreateOrEditModal.cshtml
~/Areas/Mpa/Views/BannerManager/_CreateOrEditModal.vbhtml
~/Areas/Mpa/Views/Shared/_CreateOrEditModal.cshtml
~/Areas/Mpa/Views/Shared/_CreateOrEditModal.vbhtml
~/Views/BannerManager/_CreateOrEditModal.cshtml
~/Views/BannerManager/_CreateOrEditModal.vbhtml
~/Views/Shared/_CreateOrEditModal.cshtml
~/Views/Shared/_CreateOrEditModal.vbhtml
   在 System.Web.Mvc.PartialViewResult.FindView(ControllerContext context)
   在 System.Web.Mvc.ViewResultBase.ExecuteResult(ControllerContext context)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResult(ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(ControllerContext controllerContext, IList`1 filters, ActionResult actionResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
DEBUG 2017-11-08 10:33:39,064 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"b3768f95-de0c-4923-9745-d370f0bbd2c9","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:33:39.0648033Z","Properties":{}}
DEBUG 2017-11-08 10:33:39,104 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: b3768f95-de0c-4923-9745-d370f0bbd2c9
DEBUG 2017-11-08 10:34:21,274 [75   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 10:34:21,276 [75   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 10:34:21,277 [75   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 10:34:21,277 [75   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 10:34:26,669 [41   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 10:34:26,679 [41   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 10:34:26,685 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,686 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,686 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,686 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,686 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,687 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,687 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,687 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,687 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,687 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,687 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,687 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,687 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,688 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,688 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,688 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,688 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,688 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,688 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,688 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,688 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:26,691 [41   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 10:34:26,830 [41   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 10:34:26,830 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 10:34:26,830 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 10:34:26,831 [41   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 10:34:27,114 [41   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 10:34:28,042 [41   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 10:34:28,047 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 10:34:28,048 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 10:34:28,054 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 10:34:28,064 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 10:34:28,099 [41   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 10:34:28,563 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 10:34:28,648 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 38 classes define auto mapping attributes
DEBUG 2017-11-08 10:34:28,648 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 10:34:28,650 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 10:34:28,651 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 10:34:28,652 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 10:34:28,652 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 10:34:28,652 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 10:34:28,652 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 10:34:28,652 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 10:34:28,652 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 10:34:28,652 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 10:34:28,652 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 10:34:28,652 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 10:34:28,906 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 10:34:28,918 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 10:34:28,926 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 10:34:28,927 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 10:34:28,928 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 10:34:28,929 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 10:34:28,930 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 10:34:28,930 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 10:34:28,931 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 10:34:28,932 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 10:34:28,933 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 10:34:28,933 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 10:34:28,934 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 10:34:28,935 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 10:34:28,936 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 10:34:28,937 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 10:34:28,937 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 10:34:28,938 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 10:34:28,939 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 10:34:28,940 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 10:34:28,940 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 10:34:28,941 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 10:34:28,942 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 10:34:28,943 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 10:34:28,944 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 10:34:28,944 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 10:34:31,474 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"b3768f95-de0c-4923-9745-d370f0bbd2c9","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:34:31.3148033Z","Properties":{}}
DEBUG 2017-11-08 10:34:31,475 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"b3768f95-de0c-4923-9745-d370f0bbd2c9","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:34:31.3148033Z","Properties":{}}
DEBUG 2017-11-08 10:34:33,493 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"b3768f95-de0c-4923-9745-d370f0bbd2c9","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:34:31.3148033Z","Properties":{}}
DEBUG 2017-11-08 10:34:36,753 [50   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: b3768f95-de0c-4923-9745-d370f0bbd2c9
DEBUG 2017-11-08 10:34:58,501 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"3ff054e3-a844-4c92-9240-c15e214ac396","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:34:58.5018033Z","Properties":{}}
DEBUG 2017-11-08 10:34:58,537 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 3ff054e3-a844-4c92-9240-c15e214ac396
DEBUG 2017-11-08 10:36:26,475 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 3ff054e3-a844-4c92-9240-c15e214ac396
DEBUG 2017-11-08 10:36:47,906 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"a1976109-11b4-4e0d-82cd-274034aae3de","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:36:47.9068033Z","Properties":{}}
DEBUG 2017-11-08 10:36:47,940 [43   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: a1976109-11b4-4e0d-82cd-274034aae3de
DEBUG 2017-11-08 10:37:16,602 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: a1976109-11b4-4e0d-82cd-274034aae3de
DEBUG 2017-11-08 10:37:38,242 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"fd5c810f-eabd-45cb-8ec2-98d401bdcf48","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:37:38.2428033Z","Properties":{}}
DEBUG 2017-11-08 10:37:38,253 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: fd5c810f-eabd-45cb-8ec2-98d401bdcf48
DEBUG 2017-11-08 10:37:42,745 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: fd5c810f-eabd-45cb-8ec2-98d401bdcf48
DEBUG 2017-11-08 10:38:04,131 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"2d892979-09f8-440c-b27b-c24e9c7871d1","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:38:04.1318033Z","Properties":{}}
DEBUG 2017-11-08 10:38:04,159 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 2d892979-09f8-440c-b27b-c24e9c7871d1
DEBUG 2017-11-08 10:38:07,385 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 2d892979-09f8-440c-b27b-c24e9c7871d1
DEBUG 2017-11-08 10:38:28,810 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"76997118-5d16-4289-ad26-c0da5d11f70f","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:38:28.8108033Z","Properties":{}}
DEBUG 2017-11-08 10:38:28,829 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 76997118-5d16-4289-ad26-c0da5d11f70f
DEBUG 2017-11-08 10:52:47,297 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 76997118-5d16-4289-ad26-c0da5d11f70f
DEBUG 2017-11-08 10:53:08,668 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"4451f72c-7e85-4215-83a6-eaccd9aec1ac","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:53:08.6688033Z","Properties":{}}
DEBUG 2017-11-08 10:53:08,676 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 4451f72c-7e85-4215-83a6-eaccd9aec1ac
DEBUG 2017-11-08 10:54:29,492 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 4451f72c-7e85-4215-83a6-eaccd9aec1ac
DEBUG 2017-11-08 10:54:50,835 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"c1710b76-20bb-4ca1-bd25-53515e3aaa63","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:54:50.8358033Z","Properties":{}}
DEBUG 2017-11-08 10:54:50,843 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: c1710b76-20bb-4ca1-bd25-53515e3aaa63
DEBUG 2017-11-08 10:55:16,409 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: c1710b76-20bb-4ca1-bd25-53515e3aaa63
DEBUG 2017-11-08 10:55:37,739 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f8174487-21eb-4992-b7bc-d0cfb4028d3b","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:55:37.7398033Z","Properties":{}}
DEBUG 2017-11-08 10:55:37,748 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: f8174487-21eb-4992-b7bc-d0cfb4028d3b
DEBUG 2017-11-08 10:55:39,647 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: f8174487-21eb-4992-b7bc-d0cfb4028d3b
DEBUG 2017-11-08 10:56:00,951 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"0c7dd933-9a3a-4031-be2c-a76ddb3a9bf6","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T02:56:00.9518033Z","Properties":{}}
DEBUG 2017-11-08 10:56:00,964 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 0c7dd933-9a3a-4031-be2c-a76ddb3a9bf6
DEBUG 2017-11-08 11:00:34,881 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 0c7dd933-9a3a-4031-be2c-a76ddb3a9bf6
DEBUG 2017-11-08 11:00:56,226 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"5262db12-6b59-4214-bab0-52efacc7df93","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:00:56.2268033Z","Properties":{}}
DEBUG 2017-11-08 11:00:56,234 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 5262db12-6b59-4214-bab0-52efacc7df93
DEBUG 2017-11-08 11:01:18,667 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 5262db12-6b59-4214-bab0-52efacc7df93
DEBUG 2017-11-08 11:01:39,929 [72   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"c9884417-efc2-4a03-b7e4-aff1cb2484bb","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:01:39.9298033Z","Properties":{}}
DEBUG 2017-11-08 11:01:39,940 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: c9884417-efc2-4a03-b7e4-aff1cb2484bb
DEBUG 2017-11-08 11:10:51,650 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: c9884417-efc2-4a03-b7e4-aff1cb2484bb
DEBUG 2017-11-08 11:11:13,019 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f9eb0167-d558-4390-9803-40041f46ae4a","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:11:13.0198033Z","Properties":{}}
DEBUG 2017-11-08 11:11:13,030 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: f9eb0167-d558-4390-9803-40041f46ae4a
DEBUG 2017-11-08 11:11:34,059 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: f9eb0167-d558-4390-9803-40041f46ae4a
DEBUG 2017-11-08 11:11:55,626 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"2d2def49-0e50-49e0-b60c-94b33a60919c","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:11:55.6268033Z","Properties":{}}
DEBUG 2017-11-08 11:11:55,635 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 2d2def49-0e50-49e0-b60c-94b33a60919c
DEBUG 2017-11-08 11:13:04,199 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 2d2def49-0e50-49e0-b60c-94b33a60919c
DEBUG 2017-11-08 11:13:25,778 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"5bcb0703-55df-4f61-ab7d-f20753f71edf","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:13:25.7788033Z","Properties":{}}
DEBUG 2017-11-08 11:13:25,789 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 5bcb0703-55df-4f61-ab7d-f20753f71edf
DEBUG 2017-11-08 11:13:42,626 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 5bcb0703-55df-4f61-ab7d-f20753f71edf
DEBUG 2017-11-08 11:14:03,976 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"a58b0de1-313f-4def-ac9b-1bcedf950228","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:14:03.9768033Z","Properties":{}}
DEBUG 2017-11-08 11:14:03,983 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: a58b0de1-313f-4def-ac9b-1bcedf950228
DEBUG 2017-11-08 11:42:10,972 [79   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 11:42:10,973 [79   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 11:42:10,973 [79   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 11:42:10,973 [79   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 11:42:19,387 [39   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 11:42:19,397 [39   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 11:42:19,403 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,404 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,404 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,404 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,405 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,405 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,405 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,405 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,405 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,405 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,405 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,405 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,405 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,406 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,406 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,406 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,406 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,406 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,406 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,406 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,406 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:19,409 [39   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 11:42:20,156 [39   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 11:42:20,156 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 11:42:20,156 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 11:42:20,156 [39   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 11:42:20,456 [39   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:42:21,270 [39   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 11:42:21,275 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 11:42:21,276 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 11:42:21,280 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 11:42:21,290 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 11:42:21,325 [39   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 11:42:21,819 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 11:42:21,906 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 38 classes define auto mapping attributes
DEBUG 2017-11-08 11:42:21,906 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 11:42:21,909 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 11:42:21,909 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 11:42:21,909 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 11:42:21,909 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 11:42:21,909 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 11:42:21,909 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 11:42:21,909 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 11:42:21,909 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 11:42:21,909 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 11:42:21,909 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 11:42:21,909 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 11:42:21,910 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 11:42:22,198 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 11:42:22,211 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 11:42:22,219 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 11:42:22,220 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 11:42:22,221 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 11:42:22,221 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 11:42:22,222 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 11:42:22,223 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 11:42:22,224 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 11:42:22,224 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 11:42:22,225 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 11:42:22,226 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 11:42:22,226 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 11:42:22,227 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 11:42:22,228 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 11:42:22,229 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 11:42:22,229 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 11:42:22,230 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 11:42:22,231 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 11:42:22,232 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 11:42:22,232 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 11:42:22,233 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 11:42:22,234 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 11:42:22,235 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 11:42:22,236 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 11:42:22,237 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 11:42:23,668 [43   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"a58b0de1-313f-4def-ac9b-1bcedf950228","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:42:23.6108033Z","Properties":{}}
DEBUG 2017-11-08 11:42:23,669 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"a58b0de1-313f-4def-ac9b-1bcedf950228","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:42:23.6108033Z","Properties":{}}
DEBUG 2017-11-08 11:42:23,670 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"a58b0de1-313f-4def-ac9b-1bcedf950228","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:42:23.6108033Z","Properties":{}}
DEBUG 2017-11-08 11:42:25,689 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"a58b0de1-313f-4def-ac9b-1bcedf950228","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:42:23.6108033Z","Properties":{}}
DEBUG 2017-11-08 11:42:28,422 [74   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: a58b0de1-313f-4def-ac9b-1bcedf950228
DEBUG 2017-11-08 11:42:31,614 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"a7cdab86-143f-41fa-9b7f-451192108a5d","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:42:31.6148033Z","Properties":{}}
DEBUG 2017-11-08 11:42:31,643 [61   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: a7cdab86-143f-41fa-9b7f-451192108a5d
ERROR 2017-11-08 11:42:39,343 [5    ] .Mpa.Controllers.BannerManagerController - 可为空的对象必须具有一个值。
System.InvalidOperationException: 可为空的对象必须具有一个值。
   在 System.ThrowHelper.ThrowInvalidOperationException(ExceptionResource resource)
   在 System.Nullable`1.get_Value()
   在 TaiKang.Web.Areas.Mpa.Controllers.BannerManagerController.<CreateBannerModal>d__5.MoveNext() 位置 E:\SVN\泰康生物\TaiKang.Web\Areas\Mpa\Controllers\BannerManagerController.cs:行号 109
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass37.<BeginInvokeAsynchronousActionMethod>b__36(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass33.<BeginInvokeActionMethodWithFilters>b__32(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
DEBUG 2017-11-08 11:44:47,306 [54   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 11:44:47,307 [54   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 11:44:47,307 [54   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 11:44:47,307 [54   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 11:44:53,171 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 11:44:53,181 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 11:44:53,187 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,188 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,189 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,189 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,189 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,189 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,189 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,189 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,189 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,189 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,190 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,190 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,190 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,190 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,190 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,190 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,190 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,190 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,190 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,190 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,191 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:53,194 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 11:44:53,339 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 11:44:53,339 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 11:44:53,339 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 11:44:53,339 [1    ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 11:44:53,625 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:44:54,630 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 11:44:54,636 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 11:44:54,637 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 11:44:54,643 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 11:44:54,653 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 11:44:54,689 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 11:44:55,155 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 11:44:55,242 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 38 classes define auto mapping attributes
DEBUG 2017-11-08 11:44:55,242 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 11:44:55,244 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 11:44:55,244 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 11:44:55,244 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 11:44:55,244 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 11:44:55,244 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 11:44:55,244 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 11:44:55,244 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 11:44:55,245 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 11:44:55,246 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 11:44:55,246 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 11:44:55,246 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 11:44:55,501 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 11:44:55,514 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 11:44:55,522 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 11:44:55,523 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 11:44:55,524 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 11:44:55,524 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 11:44:55,525 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 11:44:55,526 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 11:44:55,527 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 11:44:55,527 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 11:44:55,528 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 11:44:55,529 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 11:44:55,529 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 11:44:55,530 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 11:44:55,531 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 11:44:55,532 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 11:44:55,532 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 11:44:55,533 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 11:44:55,534 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 11:44:55,535 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 11:44:55,535 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 11:44:55,536 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 11:44:55,537 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 11:44:55,538 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 11:44:55,539 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 11:44:55,540 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 11:44:58,046 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"a7cdab86-143f-41fa-9b7f-451192108a5d","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:44:57.9528033Z","Properties":{}}
DEBUG 2017-11-08 11:44:58,048 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"a7cdab86-143f-41fa-9b7f-451192108a5d","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:44:57.9528033Z","Properties":{}}
DEBUG 2017-11-08 11:45:00,066 [61   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"a7cdab86-143f-41fa-9b7f-451192108a5d","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:44:57.9528033Z","Properties":{}}
DEBUG 2017-11-08 11:45:02,964 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: a7cdab86-143f-41fa-9b7f-451192108a5d
DEBUG 2017-11-08 11:45:04,041 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"da6b0df8-4865-4d5c-9942-103b569d58ab","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:45:04.0418033Z","Properties":{}}
DEBUG 2017-11-08 11:45:04,070 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: da6b0df8-4865-4d5c-9942-103b569d58ab
ERROR 2017-11-08 11:45:06,018 [61   ] .Mpa.Controllers.BannerManagerController - There is no such an entity. Entity type: TaiKang.Tk.Banner, id: 0
Abp.Domain.Entities.EntityNotFoundException: There is no such an entity. Entity type: TaiKang.Tk.Banner, id: 0
   在 Abp.Domain.Repositories.AbpRepositoryBase`2.<GetAsync>d__21.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithPostActionAndFinallyAndGetResult>d__5`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithPostActionAndFinallyAndGetResult>d__5`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Application.Services.AsyncCrudAppService`8.<Get>d__5.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithPostActionAndFinallyAndGetResult>d__5`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithFinallyAndGetResult>d__3`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   在 TaiKang.Web.Areas.Mpa.Controllers.BannerManagerController.<CreateBannerModal>d__5.MoveNext() 位置 E:\SVN\泰康生物\TaiKang.Web\Areas\Mpa\Controllers\BannerManagerController.cs:行号 109
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass37.<BeginInvokeAsynchronousActionMethod>b__36(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass33.<BeginInvokeActionMethodWithFilters>b__32(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
DEBUG 2017-11-08 11:48:50,568 [58   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 11:48:50,569 [58   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 11:48:50,569 [58   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 11:48:50,569 [58   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 11:48:56,377 [20   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 11:48:56,387 [20   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 11:48:56,393 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,394 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,394 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,395 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,395 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,395 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,395 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,395 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,395 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,395 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,395 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,396 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,396 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,396 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,396 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,396 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,396 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,396 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,396 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,396 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,397 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:56,399 [20   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 11:48:56,490 [20   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 11:48:56,490 [20   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 11:48:56,490 [20   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 11:48:56,490 [20   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 11:48:56,760 [20   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 11:48:57,576 [20   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 11:48:57,581 [20   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 11:48:57,582 [20   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 11:48:57,586 [20   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 11:48:57,595 [20   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 11:48:57,631 [20   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 11:48:58,095 [20   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 11:48:58,183 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 38 classes define auto mapping attributes
DEBUG 2017-11-08 11:48:58,183 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 11:48:58,185 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 11:48:58,185 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 11:48:58,185 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 11:48:58,185 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 11:48:58,186 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 11:48:58,187 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 11:48:58,187 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 11:48:58,187 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 11:48:58,187 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 11:48:58,451 [20   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 11:48:58,464 [20   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 11:48:58,472 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 11:48:58,472 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 11:48:58,473 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 11:48:58,474 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 11:48:58,475 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 11:48:58,476 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 11:48:58,477 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 11:48:58,478 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 11:48:58,478 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 11:48:58,479 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 11:48:58,480 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 11:48:58,480 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 11:48:58,481 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 11:48:58,482 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 11:48:58,483 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 11:48:58,483 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 11:48:58,484 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 11:48:58,485 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 11:48:58,486 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 11:48:58,486 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 11:48:58,487 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 11:48:58,488 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 11:48:58,489 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 11:48:58,490 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 11:48:59,495 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"da6b0df8-4865-4d5c-9942-103b569d58ab","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:48:59.4398033Z","Properties":{}}
DEBUG 2017-11-08 11:48:59,495 [84   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"da6b0df8-4865-4d5c-9942-103b569d58ab","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:48:59.4398033Z","Properties":{}}
DEBUG 2017-11-08 11:49:01,517 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"da6b0df8-4865-4d5c-9942-103b569d58ab","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:48:59.4398033Z","Properties":{}}
DEBUG 2017-11-08 11:49:04,266 [74   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: da6b0df8-4865-4d5c-9942-103b569d58ab
DEBUG 2017-11-08 11:49:05,309 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"40899780-d726-45aa-b425-2478bf80f48b","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T03:49:05.3098033Z","Properties":{}}
DEBUG 2017-11-08 11:49:05,359 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 40899780-d726-45aa-b425-2478bf80f48b
DEBUG 2017-11-08 13:03:06,230 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 40899780-d726-45aa-b425-2478bf80f48b
DEBUG 2017-11-08 13:03:07,301 [74   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"1cdc4cec-c8d8-448f-a284-9eebfba0c868","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T05:03:07.3018033Z","Properties":{}}
DEBUG 2017-11-08 13:03:07,312 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 1cdc4cec-c8d8-448f-a284-9eebfba0c868
DEBUG 2017-11-08 13:43:37,633 [32   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 13:43:37,634 [32   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:43:37,634 [32   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:43:37,634 [32   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 13:43:44,367 [41   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 13:43:44,377 [41   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 13:43:44,382 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,384 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,384 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,384 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,384 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,384 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,384 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,384 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,384 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,384 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,385 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,385 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,385 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,385 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,385 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,385 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,385 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,385 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,385 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,386 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,386 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:44,388 [41   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 13:43:44,525 [41   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:43:44,525 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:43:44,526 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:43:44,526 [41   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:43:44,808 [41   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:43:45,746 [41   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 13:43:45,763 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 13:43:45,764 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 13:43:45,769 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 13:43:45,779 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 13:43:45,813 [41   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:43:46,263 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:43:46,349 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 13:43:46,349 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 13:43:46,351 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 13:43:46,351 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 13:43:46,351 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 13:43:46,351 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 13:43:46,352 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 13:43:46,353 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 13:43:46,353 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 13:43:46,353 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 13:43:46,353 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 13:43:46,353 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 13:43:46,353 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 13:43:46,604 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:43:46,616 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:43:46,624 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 13:43:46,624 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 13:43:46,625 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 13:43:46,626 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 13:43:46,627 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 13:43:46,627 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 13:43:46,628 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 13:43:46,629 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 13:43:46,630 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 13:43:46,630 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 13:43:46,631 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 13:43:46,632 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 13:43:46,633 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 13:43:46,633 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 13:43:46,634 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 13:43:46,635 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 13:43:46,635 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 13:43:46,636 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 13:43:46,637 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 13:43:46,638 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 13:43:46,638 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 13:43:46,639 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 13:43:46,640 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 13:43:46,641 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2017-11-08 13:43:50,969 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:43:56,073 [57   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:44:01,208 [7    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:44:06,319 [67   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:44:11,415 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:44:16,518 [61   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:44:21,617 [54   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:44:26,716 [54   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:44:31,830 [57   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:44:36,946 [13   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:44:42,056 [7    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:44:47,168 [74   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:44:52,286 [54   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:44:57,400 [67   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:45:02,522 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:45:07,667 [32   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:45:12,793 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:45:17,919 [67   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:45:23,028 [74   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:45:28,162 [74   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:45:33,293 [74   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:45:38,411 [84   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2017-11-08 13:45:41,515 [16   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 13:45:41,517 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:45:41,518 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:45:41,519 [16   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 13:45:51,691 [41   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 13:45:51,701 [41   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 13:45:51,707 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,708 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,709 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,709 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,709 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,709 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,709 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,709 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,709 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,709 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,710 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,710 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,710 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,710 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,710 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,710 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,710 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,710 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,710 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,711 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,711 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:51,713 [41   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 13:45:51,803 [41   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:45:51,803 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:45:51,803 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:45:51,803 [41   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:45:52,072 [41   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:45:52,906 [41   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 13:45:52,911 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 13:45:52,912 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 13:45:52,916 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 13:45:52,925 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 13:45:52,962 [41   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:45:53,435 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:45:53,522 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 13:45:53,522 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 13:45:53,524 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 13:45:53,524 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 13:45:53,524 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 13:45:53,524 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 13:45:53,524 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 13:45:53,525 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 13:45:53,526 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 13:45:53,526 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 13:45:53,526 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 13:45:53,526 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 13:45:53,526 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 13:45:53,526 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 13:45:53,805 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:45:53,818 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:45:53,825 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 13:45:53,826 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 13:45:53,827 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 13:45:53,828 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 13:45:53,828 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 13:45:53,829 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 13:45:53,830 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 13:45:53,830 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 13:45:53,831 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 13:45:53,832 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 13:45:53,833 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 13:45:53,833 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 13:45:53,834 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 13:45:53,835 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 13:45:53,836 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 13:45:53,836 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 13:45:53,837 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 13:45:53,838 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 13:45:53,838 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 13:45:53,839 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 13:45:53,840 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 13:45:53,841 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 13:45:53,842 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 13:45:53,842 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2017-11-08 13:45:58,099 [58   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:46:03,258 [74   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:46:08,401 [58   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-08 13:46:13,501 [84   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 51
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2017-11-08 13:46:16,745 [57   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 13:46:16,746 [57   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:46:16,746 [57   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:46:16,746 [57   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 13:46:23,473 [41   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 13:46:23,483 [41   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 13:46:23,488 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,490 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,490 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,490 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,490 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,490 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,490 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,490 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,490 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,490 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,491 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,491 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,491 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,491 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,491 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,491 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,491 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,491 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,492 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,492 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,492 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:23,494 [41   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 13:46:23,641 [41   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:46:23,641 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:46:23,641 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:46:23,641 [41   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:46:23,926 [41   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:46:24,904 [41   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 13:46:24,909 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 13:46:24,910 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 13:46:24,916 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 13:46:24,925 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 13:46:24,960 [41   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:46:25,411 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:46:25,590 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 13:46:25,590 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 13:46:25,593 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 13:46:25,594 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 13:46:25,868 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:46:25,881 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:46:25,889 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 13:46:25,890 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 13:46:25,891 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 13:46:25,891 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 13:46:25,892 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 13:46:25,893 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 13:46:25,893 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 13:46:25,894 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 13:46:25,895 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 13:46:25,896 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 13:46:25,896 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 13:46:25,897 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 13:46:25,898 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 13:46:25,899 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 13:46:25,899 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 13:46:25,900 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 13:46:25,901 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 13:46:25,902 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 13:46:25,902 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 13:46:25,903 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 13:46:25,904 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 13:46:25,905 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 13:46:25,906 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 13:46:25,906 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 13:46:28,310 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f0051563-40c4-4d76-bd5d-5d9fe72db5d0","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T05:46:28.2998033Z","Properties":{}}
DEBUG 2017-11-08 13:48:54,908 [20   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 13:48:54,910 [20   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:48:54,912 [20   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:48:54,912 [20   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 13:49:00,067 [41   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 13:49:00,077 [41   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 13:49:00,082 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,084 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,084 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,084 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,084 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,084 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,084 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,084 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,085 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,085 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,085 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,085 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,085 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,085 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,085 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,085 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,086 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,086 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,086 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,086 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,086 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:00,089 [41   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 13:49:00,180 [41   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:49:00,180 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:49:00,180 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:49:00,180 [41   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:49:00,457 [41   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:49:01,288 [41   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 13:49:01,293 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 13:49:01,294 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 13:49:01,298 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 13:49:01,307 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 13:49:01,342 [41   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:49:01,800 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:49:01,885 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 13:49:01,886 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 13:49:01,888 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 13:49:01,889 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 13:49:01,890 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 13:49:01,890 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 13:49:01,890 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 13:49:01,890 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 13:49:01,890 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 13:49:01,890 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 13:49:01,890 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 13:49:01,890 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 13:49:01,890 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 13:49:02,152 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:49:02,164 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:49:02,172 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 13:49:02,173 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 13:49:02,174 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceService' with service name 'app/jobChanceService'.
DEBUG 2017-11-08 13:49:02,175 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 13:49:02,176 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 13:49:02,177 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 13:49:02,178 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 13:49:02,179 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 13:49:02,179 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 13:49:02,180 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 13:49:02,181 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 13:49:02,182 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 13:49:02,182 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 13:49:02,183 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 13:49:02,184 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 13:49:02,185 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 13:49:02,186 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 13:49:02,186 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 13:49:02,187 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 13:49:02,188 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 13:49:02,189 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 13:49:02,190 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 13:49:02,190 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 13:49:02,191 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 13:49:02,192 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 13:49:03,159 [84   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"f0051563-40c4-4d76-bd5d-5d9fe72db5d0","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T05:49:03.0608033Z","Properties":{}}
DEBUG 2017-11-08 13:50:32,246 [74   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 13:50:32,248 [74   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:50:32,249 [74   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:50:32,249 [74   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 13:50:36,780 [39   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 13:50:36,791 [39   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 13:50:36,796 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,798 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,798 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,798 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,798 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,798 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,799 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,799 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,799 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,799 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,799 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,799 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,799 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,799 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,800 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,800 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,800 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,800 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,800 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,800 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,800 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:36,802 [39   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 13:50:36,941 [39   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:50:36,941 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:50:36,941 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:50:36,941 [39   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:50:37,222 [39   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:50:38,147 [39   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 13:50:38,174 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 13:50:38,175 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 13:50:38,183 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 13:50:38,195 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 13:50:38,231 [39   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:50:38,686 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:50:38,771 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 13:50:38,771 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 13:50:38,774 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 13:50:38,774 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 13:50:38,774 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 13:50:38,774 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 13:50:38,774 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 13:50:38,774 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 13:50:38,774 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 13:50:38,774 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 13:50:38,774 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 13:50:38,774 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 13:50:38,775 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 13:50:38,776 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 13:50:38,776 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 13:50:39,033 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:50:39,045 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:50:39,053 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 13:50:39,054 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 13:50:39,054 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceService' with service name 'app/jobChanceService'.
DEBUG 2017-11-08 13:50:39,055 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 13:50:39,056 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 13:50:39,056 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 13:50:39,057 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 13:50:39,058 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 13:50:39,059 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 13:50:39,060 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 13:50:39,060 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 13:50:39,061 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 13:50:39,062 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 13:50:39,063 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 13:50:39,063 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 13:50:39,064 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 13:50:39,065 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 13:50:39,066 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 13:50:39,066 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 13:50:39,067 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 13:50:39,068 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 13:50:39,069 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 13:50:39,069 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 13:50:39,070 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 13:50:39,071 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 13:50:41,357 [62   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"f0051563-40c4-4d76-bd5d-5d9fe72db5d0","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T05:50:41.2088033Z","Properties":{}}
DEBUG 2017-11-08 13:55:41,194 [54   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 13:55:41,195 [54   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:55:41,195 [54   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:55:41,195 [54   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 13:55:43,946 [41   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 13:55:43,957 [41   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 13:55:43,962 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,963 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,964 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,964 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,964 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,964 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,964 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,964 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,965 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,965 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,965 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,965 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,965 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,966 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,966 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,966 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,966 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,966 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,966 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,966 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,967 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:43,969 [41   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 13:55:44,062 [41   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:55:44,062 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:55:44,062 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:55:44,062 [41   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 13:55:44,340 [41   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 13:55:44,826 [41   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 13:55:44,831 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 13:55:44,832 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 13:55:44,836 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 13:55:44,846 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 13:55:44,882 [41   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 13:55:45,397 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:55:45,489 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 13:55:45,489 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 13:55:45,492 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 13:55:45,492 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 13:55:45,492 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 13:55:45,492 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 13:55:45,492 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 13:55:45,492 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 13:55:45,492 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 13:55:45,492 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 13:55:45,492 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 13:55:45,492 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 13:55:45,492 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 13:55:45,492 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 13:55:45,492 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 13:55:45,493 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 13:55:45,494 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 13:55:45,756 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:55:45,769 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 13:55:45,777 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 13:55:45,778 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 13:55:45,779 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceService' with service name 'app/jobChanceService'.
DEBUG 2017-11-08 13:55:45,779 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 13:55:45,780 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 13:55:45,781 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 13:55:45,782 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 13:55:45,782 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 13:55:45,783 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 13:55:45,784 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 13:55:45,785 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 13:55:45,785 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 13:55:45,786 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 13:55:45,787 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 13:55:45,788 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 13:55:45,789 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 13:55:45,789 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 13:55:45,790 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 13:55:45,791 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 13:55:45,792 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 13:55:45,792 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 13:55:45,793 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 13:55:45,794 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 13:55:45,795 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 13:55:45,795 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 13:55:47,037 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"f0051563-40c4-4d76-bd5d-5d9fe72db5d0","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T05:55:46.9208033Z","Properties":{}}
DEBUG 2017-11-08 14:00:46,589 [22   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 14:00:46,589 [22   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 14:00:46,590 [22   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 14:00:46,590 [22   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 14:00:49,945 [50   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 14:00:49,956 [50   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 14:00:49,962 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,963 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,963 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,963 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,963 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,964 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,964 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,964 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,964 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,964 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,964 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,965 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,965 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,965 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,965 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,965 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,965 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,965 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,965 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,966 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,966 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:49,968 [50   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 14:00:50,114 [50   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:00:50,114 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:00:50,114 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:00:50,114 [50   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:00:50,393 [50   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:00:50,862 [50   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 14:00:50,867 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 14:00:50,867 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 14:00:50,873 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 14:00:50,882 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 14:00:50,918 [50   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 14:00:51,406 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 14:00:51,498 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 14:00:51,498 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 14:00:51,501 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 14:00:51,501 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 14:00:51,501 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 14:00:51,502 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 14:00:51,503 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 14:00:51,503 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 14:00:51,503 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 14:00:51,503 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 14:00:51,503 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 14:00:51,503 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 14:00:51,503 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 14:00:51,763 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 14:00:51,776 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 14:00:51,784 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 14:00:51,784 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 14:00:51,785 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceService' with service name 'app/jobChanceService'.
DEBUG 2017-11-08 14:00:51,786 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 14:00:51,787 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 14:00:51,787 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 14:00:51,788 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 14:00:51,789 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 14:00:51,790 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 14:00:51,790 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 14:00:51,791 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 14:00:51,792 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 14:00:51,793 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 14:00:51,793 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 14:00:51,794 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 14:00:51,795 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 14:00:51,796 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 14:00:51,796 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 14:00:51,797 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 14:00:51,798 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 14:00:51,799 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 14:00:51,800 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 14:00:51,800 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 14:00:51,801 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 14:00:51,802 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 14:00:54,785 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"f0051563-40c4-4d76-bd5d-5d9fe72db5d0","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:00:54.6258033Z","Properties":{}}
DEBUG 2017-11-08 14:00:58,143 [54   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 14:00:58,143 [54   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 14:00:58,144 [54   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 14:00:58,144 [54   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 14:01:00,925 [41   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 14:01:00,934 [41   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 14:01:00,938 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,938 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,938 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,938 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,938 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,938 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,939 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,939 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,939 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,939 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,939 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,939 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,940 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,940 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,940 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,940 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,940 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,940 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,940 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,941 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,941 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:00,943 [41   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 14:01:01,054 [41   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:01:01,054 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:01:01,054 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:01:01,054 [41   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:01:01,307 [41   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:01:01,738 [41   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 14:01:01,740 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 14:01:01,740 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 14:01:01,743 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 14:01:01,753 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 14:01:01,781 [41   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 14:01:02,236 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 14:01:02,329 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 14:01:02,329 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 14:01:02,331 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 14:01:02,332 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 14:01:02,332 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 14:01:02,332 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 14:01:02,332 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 14:01:02,332 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 14:01:02,332 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 14:01:02,332 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 14:01:02,332 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 14:01:02,332 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 14:01:02,332 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 14:01:02,332 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 14:01:02,332 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 14:01:02,332 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 14:01:02,332 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 14:01:02,507 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 14:01:02,518 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 14:01:02,524 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 14:01:02,526 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 14:01:02,527 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceService' with service name 'app/jobChanceService'.
DEBUG 2017-11-08 14:01:02,528 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 14:01:02,529 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 14:01:02,531 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 14:01:02,533 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 14:01:02,534 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 14:01:02,535 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 14:01:02,537 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 14:01:02,538 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 14:01:02,539 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 14:01:02,540 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 14:01:02,540 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 14:01:02,541 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 14:01:02,542 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 14:01:02,543 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 14:01:02,544 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 14:01:02,545 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 14:01:02,546 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 14:01:02,546 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 14:01:02,547 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 14:01:02,548 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 14:01:02,549 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 14:01:02,550 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 14:01:04,409 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"f0051563-40c4-4d76-bd5d-5d9fe72db5d0","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:01:04.3238033Z","Properties":{}}
WARN  2017-11-08 14:05:04,702 [20   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannerCreate' in localization source 'TaiKang'!
WARN  2017-11-08 14:05:04,703 [20   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannderEdit' in localization source 'TaiKang'!
WARN  2017-11-08 14:05:04,703 [20   ] naries.DictionaryBasedLocalizationSource - Can not find 'BannderDelete' in localization source 'TaiKang'!
DEBUG 2017-11-08 14:05:09,135 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: f0051563-40c4-4d76-bd5d-5d9fe72db5d0
DEBUG 2017-11-08 14:05:13,225 [31   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"7c4ade7f-241e-450f-b38b-929eddf6f366","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:05:13.2258033Z","Properties":{}}
DEBUG 2017-11-08 14:05:13,253 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 7c4ade7f-241e-450f-b38b-929eddf6f366
DEBUG 2017-11-08 14:17:42,965 [25   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 14:17:42,965 [25   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 14:17:42,965 [25   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 14:17:42,965 [25   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 14:17:47,529 [50   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 14:17:47,540 [50   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 14:17:47,545 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,546 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,547 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,547 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,547 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,547 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,547 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,547 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,547 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,547 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,547 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,548 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,548 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,548 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,548 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,548 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,548 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,548 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,548 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,548 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,548 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:47,551 [50   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 14:17:47,642 [50   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:17:47,642 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:17:47,642 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:17:47,642 [50   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:17:47,915 [50   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:17:48,747 [50   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 14:17:48,752 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 14:17:48,753 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 14:17:48,757 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 14:17:48,767 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 14:17:48,801 [50   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 14:17:49,306 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 14:17:49,406 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 14:17:49,406 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 14:17:49,408 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 14:17:49,408 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 14:17:49,408 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 14:17:49,408 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 14:17:49,408 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 14:17:49,408 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 14:17:49,408 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 14:17:49,408 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 14:17:49,409 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 14:17:49,410 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 14:17:49,410 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 14:17:49,410 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 14:17:49,410 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 14:17:49,410 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 14:17:49,410 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 14:17:49,410 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 14:17:49,671 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 14:17:49,684 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 14:17:49,692 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 14:17:49,692 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 14:17:49,693 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceService' with service name 'app/jobChanceService'.
DEBUG 2017-11-08 14:17:49,694 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 14:17:49,695 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 14:17:49,696 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 14:17:49,696 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 14:17:49,697 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 14:17:49,698 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 14:17:49,699 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 14:17:49,699 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 14:17:49,700 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 14:17:49,701 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 14:17:49,702 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 14:17:49,703 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 14:17:49,703 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 14:17:49,704 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 14:17:49,705 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 14:17:49,706 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 14:17:49,707 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 14:17:49,707 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 14:17:49,708 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 14:17:49,709 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 14:17:49,710 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 14:17:49,710 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 14:17:50,894 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"7c4ade7f-241e-450f-b38b-929eddf6f366","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:17:50.7768033Z","Properties":{}}
DEBUG 2017-11-08 14:17:50,896 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"7c4ade7f-241e-450f-b38b-929eddf6f366","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:17:50.7768033Z","Properties":{}}
WARN  2017-11-08 14:17:51,532 [13   ] naries.DictionaryBasedLocalizationSource - Can not find 'TaiKang_JobChance' in localization source 'TaiKang'!
DEBUG 2017-11-08 14:17:52,912 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"7c4ade7f-241e-450f-b38b-929eddf6f366","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:17:50.7768033Z","Properties":{}}
DEBUG 2017-11-08 14:17:55,806 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 7c4ade7f-241e-450f-b38b-929eddf6f366
DEBUG 2017-11-08 14:17:58,538 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"beb50755-006a-4822-aa70-69ecf144c173","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:17:58.5388033Z","Properties":{}}
DEBUG 2017-11-08 14:17:58,565 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: beb50755-006a-4822-aa70-69ecf144c173
WARN  2017-11-08 14:18:01,985 [54   ] naries.DictionaryBasedLocalizationSource - Can not find 'TaiKang_JobChance' in localization source 'TaiKang'!
DEBUG 2017-11-08 14:19:11,331 [31   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 14:19:11,334 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 14:19:11,335 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 14:19:11,335 [31   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 14:19:15,811 [39   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 14:19:15,822 [39   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 14:19:15,827 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,829 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,829 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,829 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,829 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,829 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,829 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,830 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,830 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,830 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,830 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,830 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,830 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,830 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,831 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,831 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,831 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,831 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,831 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,831 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,831 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:15,834 [39   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 14:19:15,975 [39   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:19:15,975 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:19:15,975 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:19:15,975 [39   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:19:16,273 [39   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:19:17,204 [39   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 14:19:17,209 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 14:19:17,210 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 14:19:17,216 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 14:19:17,225 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 14:19:17,261 [39   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 14:19:17,723 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 14:19:17,828 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 14:19:17,828 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 14:19:17,831 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 14:19:17,832 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 14:19:18,085 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 14:19:18,098 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 14:19:18,105 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 14:19:18,106 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 14:19:18,107 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceService' with service name 'app/jobChanceService'.
DEBUG 2017-11-08 14:19:18,108 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 14:19:18,109 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 14:19:18,110 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 14:19:18,110 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 14:19:18,111 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 14:19:18,112 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 14:19:18,113 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 14:19:18,114 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 14:19:18,115 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 14:19:18,115 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 14:19:18,116 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 14:19:18,117 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 14:19:18,118 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 14:19:18,119 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 14:19:18,120 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 14:19:18,120 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 14:19:18,121 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 14:19:18,122 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 14:19:18,123 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 14:19:18,124 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 14:19:18,125 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 14:19:18,126 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 14:19:20,860 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"beb50755-006a-4822-aa70-69ecf144c173","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:19:20.6618033Z","Properties":{}}
DEBUG 2017-11-08 14:19:20,860 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"beb50755-006a-4822-aa70-69ecf144c173","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:19:20.6618033Z","Properties":{}}
DEBUG 2017-11-08 14:19:22,882 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"beb50755-006a-4822-aa70-69ecf144c173","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:19:20.6618033Z","Properties":{}}
DEBUG 2017-11-08 14:19:27,271 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: beb50755-006a-4822-aa70-69ecf144c173
DEBUG 2017-11-08 14:19:28,703 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"c6ddcb2d-cf8d-4d17-a655-679d47534c16","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:19:28.7038033Z","Properties":{}}
DEBUG 2017-11-08 14:19:28,733 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: c6ddcb2d-cf8d-4d17-a655-679d47534c16
DEBUG 2017-11-08 14:37:04,074 [79   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 14:37:04,074 [79   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 14:37:04,075 [79   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 14:37:04,075 [79   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 14:37:08,749 [50   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 14:37:08,759 [50   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 14:37:08,764 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,766 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,766 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,766 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,766 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,766 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,766 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,766 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,766 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,767 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,767 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,767 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,767 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,767 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,767 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,767 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,767 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,768 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,768 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,768 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,768 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:08,770 [50   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 14:37:08,861 [50   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:37:08,861 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:37:08,861 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:37:08,861 [50   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 14:37:09,136 [50   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 14:37:09,936 [50   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 14:37:09,941 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 14:37:09,942 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 14:37:09,946 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 14:37:09,956 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 14:37:09,991 [50   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 14:37:10,454 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 14:37:10,541 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 14:37:10,541 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 14:37:10,543 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 14:37:10,544 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 14:37:10,545 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 14:37:10,545 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 14:37:10,545 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 14:37:10,545 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 14:37:10,545 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 14:37:10,545 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 14:37:10,545 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 14:37:10,545 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 14:37:10,545 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 14:37:10,545 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 14:37:10,545 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 14:37:10,806 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 14:37:10,818 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 14:37:10,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 14:37:10,828 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 14:37:10,829 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceService' with service name 'app/jobChanceService'.
DEBUG 2017-11-08 14:37:10,829 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 14:37:10,830 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 14:37:10,831 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 14:37:10,831 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 14:37:10,832 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 14:37:10,833 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 14:37:10,834 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 14:37:10,835 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 14:37:10,835 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 14:37:10,836 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 14:37:10,837 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 14:37:10,838 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 14:37:10,839 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 14:37:10,840 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 14:37:10,840 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 14:37:10,841 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 14:37:10,842 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 14:37:10,843 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 14:37:10,844 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 14:37:10,844 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 14:37:10,845 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 14:37:10,846 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 14:37:11,960 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"c6ddcb2d-cf8d-4d17-a655-679d47534c16","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:37:11.8408033Z","Properties":{}}
DEBUG 2017-11-08 14:37:11,961 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"c6ddcb2d-cf8d-4d17-a655-679d47534c16","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:37:11.8408033Z","Properties":{}}
DEBUG 2017-11-08 14:37:13,978 [20   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"c6ddcb2d-cf8d-4d17-a655-679d47534c16","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:37:11.8408033Z","Properties":{}}
DEBUG 2017-11-08 14:37:16,888 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: c6ddcb2d-cf8d-4d17-a655-679d47534c16
DEBUG 2017-11-08 14:37:19,673 [74   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"101375fd-f5a3-4109-95dc-7a7b280286ba","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:37:19.6738033Z","Properties":{}}
DEBUG 2017-11-08 14:37:19,732 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 101375fd-f5a3-4109-95dc-7a7b280286ba
DEBUG 2017-11-08 14:37:29,491 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 101375fd-f5a3-4109-95dc-7a7b280286ba
DEBUG 2017-11-08 14:37:31,721 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"a598721a-51d7-43a1-9a0d-f67ff28b0765","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:37:31.7218033Z","Properties":{}}
DEBUG 2017-11-08 14:37:31,731 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: a598721a-51d7-43a1-9a0d-f67ff28b0765
DEBUG 2017-11-08 14:37:43,984 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: a598721a-51d7-43a1-9a0d-f67ff28b0765
DEBUG 2017-11-08 14:37:45,373 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"fde36478-35de-4b67-93ba-07d1846d7821","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:37:45.3738033Z","Properties":{}}
DEBUG 2017-11-08 14:37:45,383 [31   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: fde36478-35de-4b67-93ba-07d1846d7821
ERROR 2017-11-08 14:37:47,760 [57   ] Abp.Logging.LogHelper                    - Can not find file for: ~/Areas/Mpa/Views/Job/_CreateOrEditModal.js! System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioningForEmbeddedFile(String path)
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioning(String path)
DEBUG 2017-11-08 14:37:47,771 [62   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: fde36478-35de-4b67-93ba-07d1846d7821
DEBUG 2017-11-08 14:37:49,140 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"fdd857da-d1f8-42e5-9ae7-e3fb6dd83f08","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:37:49.1408033Z","Properties":{}}
DEBUG 2017-11-08 14:37:49,150 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: fdd857da-d1f8-42e5-9ae7-e3fb6dd83f08
DEBUG 2017-11-08 14:38:27,837 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: fdd857da-d1f8-42e5-9ae7-e3fb6dd83f08
DEBUG 2017-11-08 14:38:31,679 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"7475e4fc-4312-4ca0-aa64-ab23e9b43641","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:38:31.6798033Z","Properties":{}}
DEBUG 2017-11-08 14:38:31,690 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 7475e4fc-4312-4ca0-aa64-ab23e9b43641
ERROR 2017-11-08 14:38:35,107 [5    ] Abp.Logging.LogHelper                    - Can not find file for: ~/Areas/Mpa/Views/CompanyIntroduce/Index.min.css! System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioningForEmbeddedFile(String path)
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioning(String path)
DEBUG 2017-11-08 14:38:35,213 [74   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 7475e4fc-4312-4ca0-aa64-ab23e9b43641
DEBUG 2017-11-08 14:38:52,409 [31   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"e3352bfd-71cf-4edc-ad1c-0b28cc926c95","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:38:52.4098033Z","Properties":{}}
DEBUG 2017-11-08 14:38:52,421 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: e3352bfd-71cf-4edc-ad1c-0b28cc926c95
DEBUG 2017-11-08 14:55:00,620 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: e3352bfd-71cf-4edc-ad1c-0b28cc926c95
DEBUG 2017-11-08 14:55:02,050 [74   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"b773a0fb-2e73-490d-82ad-dd01b1d57bc5","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:55:02.0508033Z","Properties":{}}
DEBUG 2017-11-08 14:55:02,060 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: b773a0fb-2e73-490d-82ad-dd01b1d57bc5
DEBUG 2017-11-08 14:55:33,587 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: b773a0fb-2e73-490d-82ad-dd01b1d57bc5
DEBUG 2017-11-08 14:55:34,949 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"6a33eeaf-40ab-4f45-bb5a-95048dbcaaec","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:55:34.9498033Z","Properties":{}}
DEBUG 2017-11-08 14:55:34,960 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 6a33eeaf-40ab-4f45-bb5a-95048dbcaaec
DEBUG 2017-11-08 14:56:23,378 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 6a33eeaf-40ab-4f45-bb5a-95048dbcaaec
DEBUG 2017-11-08 14:56:24,005 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"d667c9d6-f0cc-426b-a05f-64464753aabe","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:56:24.0058033Z","Properties":{}}
DEBUG 2017-11-08 14:56:24,014 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: d667c9d6-f0cc-426b-a05f-64464753aabe
DEBUG 2017-11-08 14:56:29,939 [5    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: d667c9d6-f0cc-426b-a05f-64464753aabe
DEBUG 2017-11-08 14:56:31,354 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"1b9374af-03ae-4a59-90dd-8ea8366c20d7","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:56:31.3548033Z","Properties":{}}
DEBUG 2017-11-08 14:56:31,365 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 1b9374af-03ae-4a59-90dd-8ea8366c20d7
DEBUG 2017-11-08 14:58:03,681 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 1b9374af-03ae-4a59-90dd-8ea8366c20d7
DEBUG 2017-11-08 14:58:04,543 [20   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"0be8735c-0407-4bd0-9127-a3434a8c3e5c","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:58:04.5438033Z","Properties":{}}
DEBUG 2017-11-08 14:58:04,551 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 0be8735c-0407-4bd0-9127-a3434a8c3e5c
DEBUG 2017-11-08 14:58:10,118 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 0be8735c-0407-4bd0-9127-a3434a8c3e5c
DEBUG 2017-11-08 14:58:11,144 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"e21ca271-7645-4b5f-aa63-cbd41b862de6","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:58:11.1448033Z","Properties":{}}
DEBUG 2017-11-08 14:58:11,156 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: e21ca271-7645-4b5f-aa63-cbd41b862de6
DEBUG 2017-11-08 14:59:16,244 [20   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: e21ca271-7645-4b5f-aa63-cbd41b862de6
DEBUG 2017-11-08 14:59:16,891 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"a70fce79-0b07-4225-acbf-6c4f9a8eeede","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T06:59:16.8918033Z","Properties":{}}
DEBUG 2017-11-08 14:59:16,902 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: a70fce79-0b07-4225-acbf-6c4f9a8eeede
DEBUG 2017-11-08 15:00:04,517 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: a70fce79-0b07-4225-acbf-6c4f9a8eeede
DEBUG 2017-11-08 15:00:05,498 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"5fdb60d9-b8bf-47c8-9cb9-7aae5ebe7e48","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:00:05.4988033Z","Properties":{}}
DEBUG 2017-11-08 15:00:05,512 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 5fdb60d9-b8bf-47c8-9cb9-7aae5ebe7e48
DEBUG 2017-11-08 15:01:33,163 [60   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 5fdb60d9-b8bf-47c8-9cb9-7aae5ebe7e48
DEBUG 2017-11-08 15:01:46,311 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"21a11793-342f-483b-b075-f5cc24ceaf3e","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:01:46.3118033Z","Properties":{}}
DEBUG 2017-11-08 15:01:46,331 [60   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 21a11793-342f-483b-b075-f5cc24ceaf3e
DEBUG 2017-11-08 15:04:18,392 [54   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 15:04:18,393 [54   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:04:18,393 [54   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:04:18,393 [54   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 15:04:23,909 [30   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 15:04:23,920 [30   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 15:04:23,925 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,927 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,927 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,927 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,927 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,927 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,927 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,927 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,927 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,927 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,928 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,928 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,928 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,928 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,928 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,928 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,928 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,928 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,929 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,929 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,929 [30   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:23,931 [30   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 15:04:24,077 [30   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:04:24,077 [30   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:04:24,077 [30   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:04:24,077 [30   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:04:24,361 [30   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:04:25,306 [30   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 15:04:25,311 [30   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 15:04:25,312 [30   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 15:04:25,317 [30   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 15:04:25,327 [30   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 15:04:25,362 [30   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:04:25,822 [30   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:04:25,908 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 15:04:25,908 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 15:04:25,910 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 15:04:25,911 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 15:04:25,912 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 15:04:25,912 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 15:04:25,912 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 15:04:25,912 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 15:04:25,912 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 15:04:25,912 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 15:04:25,912 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 15:04:25,912 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 15:04:25,912 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 15:04:25,912 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 15:04:25,912 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 15:04:25,912 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 15:04:25,912 [30   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 15:04:26,186 [30   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:04:26,198 [30   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:04:26,206 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 15:04:26,207 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 15:04:26,208 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-08 15:04:26,209 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 15:04:26,209 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 15:04:26,210 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 15:04:26,211 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 15:04:26,212 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 15:04:26,212 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 15:04:26,213 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 15:04:26,214 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 15:04:26,215 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 15:04:26,215 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 15:04:26,216 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 15:04:26,217 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 15:04:26,218 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 15:04:26,218 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 15:04:26,219 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 15:04:26,220 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 15:04:26,221 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 15:04:26,221 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 15:04:26,222 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 15:04:26,223 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 15:04:26,224 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 15:04:26,225 [30   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 15:04:28,892 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"21a11793-342f-483b-b075-f5cc24ceaf3e","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:04:28.7038033Z","Properties":{}}
DEBUG 2017-11-08 15:04:28,892 [74   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"21a11793-342f-483b-b075-f5cc24ceaf3e","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:04:28.7038033Z","Properties":{}}
DEBUG 2017-11-08 15:04:30,911 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"21a11793-342f-483b-b075-f5cc24ceaf3e","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:04:28.7038033Z","Properties":{}}
DEBUG 2017-11-08 15:04:33,646 [60   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 21a11793-342f-483b-b075-f5cc24ceaf3e
DEBUG 2017-11-08 15:04:34,635 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"3522a051-6191-4adf-b6a6-5ad5c1ce6962","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:04:34.6358033Z","Properties":{}}
DEBUG 2017-11-08 15:04:34,668 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 3522a051-6191-4adf-b6a6-5ad5c1ce6962
DEBUG 2017-11-08 15:05:49,603 [60   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 3522a051-6191-4adf-b6a6-5ad5c1ce6962
DEBUG 2017-11-08 15:05:50,484 [58   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"0382fe9b-2223-452c-a208-d9ad032dd869","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:05:50.4848033Z","Properties":{}}
DEBUG 2017-11-08 15:05:50,494 [5    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 0382fe9b-2223-452c-a208-d9ad032dd869
DEBUG 2017-11-08 15:07:10,297 [61   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 0382fe9b-2223-452c-a208-d9ad032dd869
DEBUG 2017-11-08 15:07:11,141 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"ff7fd22d-7ee6-43e2-ada6-d3eacc528240","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:07:11.1418033Z","Properties":{}}
DEBUG 2017-11-08 15:07:11,148 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: ff7fd22d-7ee6-43e2-ada6-d3eacc528240
DEBUG 2017-11-08 15:15:17,413 [19   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 15:15:17,414 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:15:17,414 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:15:17,414 [19   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 15:15:19,886 [55   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 15:15:19,896 [55   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 15:15:19,901 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,903 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,903 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,903 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,904 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,904 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,904 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,904 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,904 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,904 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,905 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,905 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,905 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,905 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,905 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,905 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,905 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,906 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,906 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,906 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,906 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:19,908 [55   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 15:15:20,013 [55   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:15:20,013 [55   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:15:20,013 [55   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:15:20,013 [55   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:15:20,285 [55   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:20,771 [55   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 15:15:20,776 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 15:15:20,777 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 15:15:20,781 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 15:15:20,791 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 15:15:20,825 [55   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:15:21,307 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:15:21,398 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 15:15:21,398 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 15:15:21,401 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 15:15:21,401 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 15:15:21,401 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 15:15:21,401 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 15:15:21,401 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 15:15:21,401 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 15:15:21,401 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 15:15:21,401 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 15:15:21,401 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 15:15:21,402 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 15:15:21,666 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:15:21,680 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:15:21,687 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 15:15:21,688 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 15:15:21,689 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-08 15:15:21,689 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 15:15:21,690 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 15:15:21,691 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 15:15:21,692 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 15:15:21,692 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 15:15:21,693 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 15:15:21,717 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 15:15:21,718 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 15:15:21,719 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 15:15:21,720 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 15:15:21,720 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 15:15:21,721 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 15:15:21,722 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 15:15:21,723 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 15:15:21,723 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 15:15:21,724 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 15:15:21,725 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 15:15:21,726 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 15:15:21,726 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 15:15:21,727 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 15:15:21,728 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 15:15:21,729 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 15:15:23,394 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"ff7fd22d-7ee6-43e2-ada6-d3eacc528240","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:15:23.2148033Z","Properties":{}}
DEBUG 2017-11-08 15:15:43,314 [61   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 15:15:43,315 [61   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:15:43,315 [61   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:15:43,315 [61   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 15:15:45,755 [41   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 15:15:45,765 [41   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 15:15:45,770 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,772 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,772 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,772 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,772 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,772 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,773 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,773 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,773 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,773 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,773 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,773 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,774 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,774 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,774 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,774 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,774 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,774 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,774 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,774 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,775 [41   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:45,777 [41   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 15:15:45,923 [41   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:15:45,923 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:15:45,923 [41   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:15:45,923 [41   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:15:46,215 [41   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:15:46,697 [41   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 15:15:46,730 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 15:15:46,731 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 15:15:46,736 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 15:15:46,745 [41   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 15:15:46,784 [41   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:15:47,280 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:15:47,370 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 15:15:47,370 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 15:15:47,373 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 15:15:47,373 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 15:15:47,373 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 15:15:47,373 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 15:15:47,373 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 15:15:47,373 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 15:15:47,373 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 15:15:47,373 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 15:15:47,373 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 15:15:47,373 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 15:15:47,373 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 15:15:47,374 [41   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 15:15:47,627 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:15:47,640 [41   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:15:47,647 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 15:15:47,648 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 15:15:47,649 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-08 15:15:47,649 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 15:15:47,650 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 15:15:47,651 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 15:15:47,652 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 15:15:47,652 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 15:15:47,653 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 15:15:47,654 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 15:15:47,655 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 15:15:47,655 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 15:15:47,656 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 15:15:47,657 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 15:15:47,658 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 15:15:47,658 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 15:15:47,659 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 15:15:47,660 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 15:15:47,661 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 15:15:47,661 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 15:15:47,662 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 15:15:47,663 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 15:15:47,664 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 15:15:47,664 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 15:15:47,665 [41   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 15:15:50,597 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"ff7fd22d-7ee6-43e2-ada6-d3eacc528240","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:15:50.3828033Z","Properties":{}}
DEBUG 2017-11-08 15:15:50,598 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"ff7fd22d-7ee6-43e2-ada6-d3eacc528240","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:15:50.3828033Z","Properties":{}}
DEBUG 2017-11-08 15:15:52,617 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"ff7fd22d-7ee6-43e2-ada6-d3eacc528240","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:15:50.3828033Z","Properties":{}}
DEBUG 2017-11-08 15:16:31,621 [19   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 15:16:31,622 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:16:31,622 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:16:31,622 [19   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 15:16:34,116 [55   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 15:16:34,125 [55   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 15:16:34,129 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,129 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,129 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,129 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,129 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,129 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,130 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,130 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,130 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,130 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,130 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,130 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,131 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,131 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,131 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,131 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,131 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,131 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,131 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,131 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,132 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,134 [55   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 15:16:34,250 [55   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:16:34,250 [55   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:16:34,250 [55   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:16:34,250 [55   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:16:34,503 [55   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:16:34,849 [55   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 15:16:34,850 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 15:16:34,851 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 15:16:34,854 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 15:16:34,864 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 15:16:34,894 [55   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:16:35,352 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:16:35,442 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 15:16:35,442 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 15:16:35,444 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 15:16:35,445 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 15:16:35,445 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 15:16:35,445 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 15:16:35,445 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 15:16:35,445 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 15:16:35,445 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 15:16:35,445 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 15:16:35,445 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 15:16:35,445 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 15:16:35,445 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 15:16:35,445 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 15:16:35,623 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:16:35,633 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:16:35,637 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 15:16:35,638 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 15:16:35,639 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-08 15:16:35,639 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 15:16:35,640 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 15:16:35,641 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 15:16:35,642 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 15:16:35,642 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 15:16:35,643 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 15:16:35,644 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 15:16:35,645 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 15:16:35,645 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 15:16:35,646 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 15:16:35,647 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 15:16:35,648 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 15:16:35,648 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 15:16:35,649 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 15:16:35,650 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 15:16:35,651 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 15:16:35,651 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 15:16:35,652 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 15:16:35,653 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 15:16:35,654 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 15:16:35,655 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 15:16:35,655 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 15:16:37,535 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"ff7fd22d-7ee6-43e2-ada6-d3eacc528240","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:16:37.4448033Z","Properties":{}}
DEBUG 2017-11-08 15:17:00,659 [61   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 15:17:00,659 [61   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:17:00,659 [61   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:17:00,659 [61   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 15:17:03,147 [50   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 15:17:03,158 [50   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 15:17:03,163 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,165 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,165 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,165 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,165 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,165 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,165 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,166 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,166 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,166 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,166 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,166 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,166 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,167 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,167 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,167 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,167 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,167 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,167 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,167 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,167 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:03,170 [50   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 15:17:03,263 [50   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:17:03,263 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:17:03,263 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:17:03,263 [50   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:17:03,546 [50   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:17:04,024 [50   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 15:17:04,029 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 15:17:04,030 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 15:17:04,034 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 15:17:04,043 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 15:17:04,077 [50   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:17:04,539 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:17:04,648 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 15:17:04,648 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 15:17:04,651 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 15:17:04,652 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 15:17:04,653 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 15:17:04,653 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 15:17:04,653 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 15:17:04,653 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 15:17:04,653 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 15:17:04,653 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 15:17:04,653 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 15:17:04,653 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 15:17:04,653 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 15:17:04,653 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 15:17:04,653 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 15:17:04,653 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 15:17:04,922 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:17:04,935 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:17:04,943 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 15:17:04,944 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 15:17:04,945 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-08 15:17:04,945 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 15:17:04,946 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 15:17:04,947 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 15:17:04,948 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 15:17:04,948 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 15:17:04,949 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 15:17:04,950 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 15:17:04,951 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 15:17:04,952 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 15:17:04,953 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 15:17:04,953 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 15:17:04,954 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 15:17:04,955 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 15:17:04,957 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 15:17:04,958 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 15:17:04,958 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 15:17:04,959 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 15:17:04,960 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 15:17:04,961 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 15:17:04,962 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 15:17:04,963 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 15:17:04,963 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 15:17:06,710 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"ff7fd22d-7ee6-43e2-ada6-d3eacc528240","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:17:06.5058033Z","Properties":{}}
DEBUG 2017-11-08 15:22:12,086 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: ff7fd22d-7ee6-43e2-ada6-d3eacc528240
DEBUG 2017-11-08 15:22:13,150 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"73a4fb99-bc92-4f90-92c4-c1ad4adc0093","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:22:13.1508033Z","Properties":{}}
DEBUG 2017-11-08 15:22:13,176 [58   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 73a4fb99-bc92-4f90-92c4-c1ad4adc0093
DEBUG 2017-11-08 15:22:32,297 [84   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 73a4fb99-bc92-4f90-92c4-c1ad4adc0093
DEBUG 2017-11-08 15:22:33,200 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"ed38bb45-ec62-4375-b857-7b6c256d899a","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:22:33.1998033Z","Properties":{}}
DEBUG 2017-11-08 15:22:33,208 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: ed38bb45-ec62-4375-b857-7b6c256d899a
DEBUG 2017-11-08 15:22:44,724 [84   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: ed38bb45-ec62-4375-b857-7b6c256d899a
DEBUG 2017-11-08 15:22:45,720 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f86d1cd2-b6c6-4d6d-a67e-d0686f92dbde","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:22:45.7208033Z","Properties":{}}
DEBUG 2017-11-08 15:22:45,730 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: f86d1cd2-b6c6-4d6d-a67e-d0686f92dbde
DEBUG 2017-11-08 15:36:03,949 [84   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 15:36:03,951 [84   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:36:03,953 [84   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:36:03,953 [84   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 15:36:06,414 [55   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 15:36:06,425 [55   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 15:36:06,430 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,432 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,432 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,432 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,432 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,432 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,432 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,432 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,433 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,433 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,433 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,433 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,433 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,433 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,434 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,434 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,434 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,434 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,434 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,434 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,434 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:06,437 [55   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 15:36:06,583 [55   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:36:06,583 [55   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:36:06,583 [55   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:36:06,583 [55   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:36:06,865 [55   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:07,339 [55   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 15:36:07,344 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 15:36:07,345 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 15:36:07,351 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 15:36:07,360 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 15:36:07,395 [55   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:36:07,883 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:36:07,975 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 15:36:07,975 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 15:36:07,978 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 15:36:07,978 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 15:36:07,978 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 15:36:07,978 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 15:36:07,978 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 15:36:07,978 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 15:36:07,978 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 15:36:07,979 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 15:36:07,980 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 15:36:08,234 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:36:08,246 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:36:08,254 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 15:36:08,255 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 15:36:08,256 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-08 15:36:08,257 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 15:36:08,258 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 15:36:08,258 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 15:36:08,259 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 15:36:08,260 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 15:36:08,261 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 15:36:08,261 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 15:36:08,262 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 15:36:08,263 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 15:36:08,264 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 15:36:08,265 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 15:36:08,265 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 15:36:08,266 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 15:36:08,267 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 15:36:08,268 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 15:36:08,269 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 15:36:08,270 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 15:36:08,270 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 15:36:08,271 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 15:36:08,272 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 15:36:08,273 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 15:36:08,273 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 15:36:11,268 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"f86d1cd2-b6c6-4d6d-a67e-d0686f92dbde","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:36:11.1118033Z","Properties":{}}
DEBUG 2017-11-08 15:36:11,270 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"f86d1cd2-b6c6-4d6d-a67e-d0686f92dbde","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:36:11.1118033Z","Properties":{}}
DEBUG 2017-11-08 15:36:13,302 [60   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"f86d1cd2-b6c6-4d6d-a67e-d0686f92dbde","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:36:11.1118033Z","Properties":{}}
DEBUG 2017-11-08 15:36:31,031 [56   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 15:36:31,032 [56   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:36:31,033 [56   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:36:31,033 [56   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 15:36:33,713 [55   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 15:36:33,720 [55   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 15:36:33,723 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,723 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,723 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,723 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,724 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,724 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,724 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,724 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,724 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,724 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,725 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,725 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,725 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,725 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,725 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,725 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,725 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,725 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,726 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,726 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,726 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:33,728 [55   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 15:36:33,836 [55   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:36:33,836 [55   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:36:33,836 [55   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:36:33,836 [55   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 15:36:34,106 [55   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 15:36:34,452 [55   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 15:36:34,453 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 15:36:34,453 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 15:36:34,456 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 15:36:34,492 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 15:36:34,521 [55   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 15:36:34,983 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:36:35,074 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 39 classes define auto mapping attributes
DEBUG 2017-11-08 15:36:35,074 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 15:36:35,075 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 15:36:35,076 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 15:36:35,077 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 15:36:35,077 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 15:36:35,077 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 15:36:35,077 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 15:36:35,077 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 15:36:35,077 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 15:36:35,077 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 15:36:35,077 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 15:36:35,077 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 15:36:35,077 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 15:36:35,252 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:36:35,261 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 15:36:35,265 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 15:36:35,266 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 15:36:35,266 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-08 15:36:35,267 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 15:36:35,268 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 15:36:35,269 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 15:36:35,269 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 15:36:35,270 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 15:36:35,271 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 15:36:35,272 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 15:36:35,273 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 15:36:35,273 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 15:36:35,274 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 15:36:35,275 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 15:36:35,276 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 15:36:35,276 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 15:36:35,277 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 15:36:35,278 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 15:36:35,279 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 15:36:35,279 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 15:36:35,280 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 15:36:35,281 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 15:36:35,282 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 15:36:35,282 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 15:36:35,283 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 15:36:37,024 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"f86d1cd2-b6c6-4d6d-a67e-d0686f92dbde","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T07:36:36.9208033Z","Properties":{}}
DEBUG 2017-11-08 16:15:06,403 [74   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: f86d1cd2-b6c6-4d6d-a67e-d0686f92dbde
DEBUG 2017-11-08 16:15:07,731 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"c2fb77fe-44d1-4ed4-b9ee-98acca2102e6","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T08:15:07.7318033Z","Properties":{}}
DEBUG 2017-11-08 16:15:07,767 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: c2fb77fe-44d1-4ed4-b9ee-98acca2102e6
DEBUG 2017-11-08 16:15:11,126 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: c2fb77fe-44d1-4ed4-b9ee-98acca2102e6
DEBUG 2017-11-08 16:15:11,594 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"881ddfdd-64bb-4c00-82bf-1a209fbcc5dd","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T08:15:11.5948033Z","Properties":{}}
DEBUG 2017-11-08 16:15:11,621 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 881ddfdd-64bb-4c00-82bf-1a209fbcc5dd
DEBUG 2017-11-08 16:15:29,939 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 881ddfdd-64bb-4c00-82bf-1a209fbcc5dd
DEBUG 2017-11-08 16:15:30,622 [61   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"cd358c83-7ea3-406e-bbea-49e64173ece3","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T08:15:30.6228033Z","Properties":{}}
DEBUG 2017-11-08 16:15:30,630 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: cd358c83-7ea3-406e-bbea-49e64173ece3
DEBUG 2017-11-08 16:16:21,857 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: cd358c83-7ea3-406e-bbea-49e64173ece3
DEBUG 2017-11-08 16:16:22,932 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"bbb4c2f1-5b7e-4779-9912-fa53c62c7e2e","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T08:16:22.9328033Z","Properties":{}}
DEBUG 2017-11-08 16:16:22,941 [5    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: bbb4c2f1-5b7e-4779-9912-fa53c62c7e2e
DEBUG 2017-11-08 16:19:26,550 [22   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 16:19:26,551 [22   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 16:19:26,551 [22   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 16:19:26,551 [22   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 16:19:30,883 [55   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 16:19:30,893 [55   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 16:19:30,899 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,901 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,901 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,901 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,901 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,901 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,901 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,901 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,901 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,902 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,902 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,902 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,902 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,902 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,902 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,902 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,902 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,903 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,903 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,903 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,903 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:30,905 [55   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 16:19:30,999 [55   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 16:19:30,999 [55   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 16:19:30,999 [55   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 16:19:30,999 [55   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 16:19:31,276 [55   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:19:32,087 [55   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 16:19:32,092 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 16:19:32,093 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 16:19:32,097 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 16:19:32,107 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 16:19:32,142 [55   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 16:19:32,626 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 16:19:32,714 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 40 classes define auto mapping attributes
DEBUG 2017-11-08 16:19:32,714 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 16:19:32,716 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 16:19:32,716 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 16:19:32,716 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 16:19:32,716 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 16:19:32,716 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 16:19:32,716 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 16:19:32,716 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 16:19:32,716 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 16:19:32,716 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-08 16:19:32,717 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 16:19:32,718 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 16:19:32,718 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 16:19:32,981 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 16:19:32,995 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 16:19:33,003 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 16:19:33,004 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 16:19:33,005 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-08 16:19:33,005 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 16:19:33,006 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 16:19:33,007 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 16:19:33,008 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 16:19:33,008 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 16:19:33,009 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 16:19:33,010 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 16:19:33,011 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 16:19:33,011 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 16:19:33,012 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 16:19:33,013 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 16:19:33,014 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 16:19:33,015 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 16:19:33,016 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 16:19:33,017 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 16:19:33,018 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 16:19:33,018 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 16:19:33,019 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 16:19:33,020 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 16:19:33,021 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 16:19:33,021 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 16:19:33,022 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 16:19:34,068 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"bbb4c2f1-5b7e-4779-9912-fa53c62c7e2e","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T08:19:33.9628033Z","Properties":{}}
DEBUG 2017-11-08 16:19:34,068 [62   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"bbb4c2f1-5b7e-4779-9912-fa53c62c7e2e","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T08:19:33.9628033Z","Properties":{}}
DEBUG 2017-11-08 16:19:36,090 [58   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"bbb4c2f1-5b7e-4779-9912-fa53c62c7e2e","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T08:19:33.9628033Z","Properties":{}}
DEBUG 2017-11-08 16:19:39,023 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: bbb4c2f1-5b7e-4779-9912-fa53c62c7e2e
DEBUG 2017-11-08 16:19:40,346 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"d350d6a3-0c5f-42c1-a270-3330ce18f370","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T08:19:40.3468033Z","Properties":{}}
DEBUG 2017-11-08 16:19:40,375 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: d350d6a3-0c5f-42c1-a270-3330ce18f370
ERROR 2017-11-08 16:19:51,493 [54   ] .Web.Areas.Mpa.Controllers.JobController - Missing type map configuration or unsupported mapping.

Mapping types:
JobChance -> GetJobForEditOutput
TaiKang.Tk.JobChance -> TaiKang.Tk.Dto.GetJobForEditOutput
AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.

Mapping types:
JobChance -> GetJobForEditOutput
TaiKang.Tk.JobChance -> TaiKang.Tk.Dto.GetJobForEditOutput
   在 lambda_method(Closure , Object , Object , ResolutionContext )
   在 AutoMapper.Mapper.AutoMapper.IMapper.Map[TDestination](Object source)
   在 AutoMapper.Mapper.Map[TDestination](Object source)
   在 Abp.AutoMapper.AutoMapExtensions.MapTo[TDestination](Object source)
   在 TaiKang.Tk.JobChanceAppService.<GetJobForEdit>d__2.MoveNext() 位置 E:\SVN\泰康生物\TaiKang.Application\Tk\JobChanceService.cs:行号 31
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithPostActionAndFinallyAndGetResult>d__5`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithFinallyAndGetResult>d__3`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   在 TaiKang.Web.Areas.Mpa.Controllers.JobController.<CreateOrEditModal>d__3.MoveNext() 位置 E:\SVN\泰康生物\TaiKang.Web\Areas\Mpa\Controllers\JobController.cs:行号 33
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass37.<BeginInvokeAsynchronousActionMethod>b__36(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass33.<BeginInvokeActionMethodWithFilters>b__32(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
DEBUG 2017-11-08 16:25:17,133 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: d350d6a3-0c5f-42c1-a270-3330ce18f370
DEBUG 2017-11-08 16:25:18,211 [84   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"2016fe63-3141-4653-88f2-0834e9605187","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T08:25:18.2118033Z","Properties":{}}
DEBUG 2017-11-08 16:25:18,219 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 2016fe63-3141-4653-88f2-0834e9605187
ERROR 2017-11-08 16:28:37,643 [61   ] .Web.Areas.Mpa.Controllers.JobController - Missing type map configuration or unsupported mapping.

Mapping types:
JobChance -> GetJobForEditOutput
TaiKang.Tk.JobChance -> TaiKang.Tk.Dto.GetJobForEditOutput
AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.

Mapping types:
JobChance -> GetJobForEditOutput
TaiKang.Tk.JobChance -> TaiKang.Tk.Dto.GetJobForEditOutput
   在 lambda_method(Closure , Object , Object , ResolutionContext )
   在 AutoMapper.Mapper.AutoMapper.IMapper.Map[TDestination](Object source)
   在 AutoMapper.Mapper.Map[TDestination](Object source)
   在 Abp.AutoMapper.AutoMapExtensions.MapTo[TDestination](Object source)
   在 TaiKang.Tk.JobChanceAppService.<GetJobForEdit>d__2.MoveNext() 位置 E:\SVN\泰康生物\TaiKang.Application\Tk\JobChanceService.cs:行号 31
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithPostActionAndFinallyAndGetResult>d__5`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithFinallyAndGetResult>d__3`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   在 TaiKang.Web.Areas.Mpa.Controllers.JobController.<CreateOrEditModal>d__3.MoveNext() 位置 E:\SVN\泰康生物\TaiKang.Web\Areas\Mpa\Controllers\JobController.cs:行号 33
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass37.<BeginInvokeAsynchronousActionMethod>b__36(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass33.<BeginInvokeActionMethodWithFilters>b__32(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
DEBUG 2017-11-08 16:32:08,900 [31   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 16:32:08,901 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 16:32:08,901 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 16:32:08,901 [31   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 16:32:14,149 [83   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 16:32:14,159 [83   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 16:32:14,165 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,166 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,166 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,166 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,166 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,166 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,166 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,167 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,167 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,167 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,167 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,167 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,167 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,167 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,167 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,168 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,168 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,168 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,168 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,168 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,168 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:14,170 [83   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 16:32:14,309 [83   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 16:32:14,309 [83   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 16:32:14,309 [83   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 16:32:14,309 [83   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 16:32:14,590 [83   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 16:32:15,529 [83   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 16:32:15,534 [83   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 16:32:15,535 [83   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 16:32:15,541 [83   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 16:32:15,551 [83   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 16:32:15,586 [83   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 16:32:16,043 [83   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 16:32:16,130 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 42 classes define auto mapping attributes
DEBUG 2017-11-08 16:32:16,130 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 16:32:16,132 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 16:32:16,133 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 16:32:16,389 [83   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 16:32:16,402 [83   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 16:32:16,410 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 16:32:16,411 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 16:32:16,411 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-08 16:32:16,412 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 16:32:16,413 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 16:32:16,413 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 16:32:16,414 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 16:32:16,415 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 16:32:16,416 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 16:32:16,416 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 16:32:16,417 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 16:32:16,418 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 16:32:16,419 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 16:32:16,420 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 16:32:16,420 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 16:32:16,421 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 16:32:16,422 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 16:32:16,423 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 16:32:16,423 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 16:32:16,424 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 16:32:16,425 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 16:32:16,426 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 16:32:16,427 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 16:32:16,428 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 16:32:16,429 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 16:32:19,310 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"2016fe63-3141-4653-88f2-0834e9605187","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T08:32:19.1168033Z","Properties":{}}
DEBUG 2017-11-08 16:32:19,311 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"2016fe63-3141-4653-88f2-0834e9605187","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T08:32:19.1168033Z","Properties":{}}
DEBUG 2017-11-08 16:32:21,329 [5    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"2016fe63-3141-4653-88f2-0834e9605187","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T08:32:19.1168033Z","Properties":{}}
DEBUG 2017-11-08 16:32:24,189 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 2016fe63-3141-4653-88f2-0834e9605187
DEBUG 2017-11-08 16:32:25,422 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"accdd575-7909-441a-b745-ac127fbda7e9","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T08:32:25.4228033Z","Properties":{}}
DEBUG 2017-11-08 16:32:25,463 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: accdd575-7909-441a-b745-ac127fbda7e9
DEBUG 2017-11-08 16:44:52,168 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"accdd575-7909-441a-b745-ac127fbda7e9","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T08:32:25.4228033Z","Properties":{}}
DEBUG 2017-11-08 17:02:04,337 [20   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 17:02:04,338 [20   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 17:02:04,338 [20   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 17:02:04,338 [20   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 17:02:08,706 [83   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 17:02:08,716 [83   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 17:02:08,722 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,723 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,723 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,723 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,723 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,723 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,723 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,724 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,724 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,724 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,724 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,724 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,724 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,724 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,724 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,725 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,725 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,725 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,725 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,725 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,725 [83   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:08,727 [83   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 17:02:08,817 [83   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:02:08,817 [83   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:02:08,817 [83   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:02:08,817 [83   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:02:09,096 [83   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:02:09,898 [83   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 17:02:09,903 [83   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 17:02:09,904 [83   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 17:02:09,908 [83   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 17:02:09,918 [83   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 17:02:09,952 [83   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 17:02:10,409 [83   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 17:02:10,496 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 43 classes define auto mapping attributes
DEBUG 2017-11-08 17:02:10,496 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 17:02:10,499 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 17:02:10,500 [83   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 17:02:10,763 [83   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 17:02:10,776 [83   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 17:02:10,784 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 17:02:10,785 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 17:02:10,786 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-08 17:02:10,787 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 17:02:10,787 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 17:02:10,788 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 17:02:10,789 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 17:02:10,789 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 17:02:10,790 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 17:02:10,791 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 17:02:10,792 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 17:02:10,793 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 17:02:10,793 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 17:02:10,794 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 17:02:10,795 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 17:02:10,796 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 17:02:10,796 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 17:02:10,797 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 17:02:10,798 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 17:02:10,799 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 17:02:10,799 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 17:02:10,800 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 17:02:10,801 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 17:02:10,802 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 17:02:10,803 [83   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 17:02:11,802 [60   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"accdd575-7909-441a-b745-ac127fbda7e9","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:02:11.6928033Z","Properties":{}}
DEBUG 2017-11-08 17:02:11,804 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"accdd575-7909-441a-b745-ac127fbda7e9","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:02:11.6928033Z","Properties":{}}
DEBUG 2017-11-08 17:02:13,822 [62   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"accdd575-7909-441a-b745-ac127fbda7e9","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:02:11.6928033Z","Properties":{}}
DEBUG 2017-11-08 17:02:18,056 [62   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: accdd575-7909-441a-b745-ac127fbda7e9
DEBUG 2017-11-08 17:02:19,256 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"c1d3a2ee-ee98-4f9a-830d-6f0f46c9604e","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:02:19.2568033Z","Properties":{}}
DEBUG 2017-11-08 17:02:19,303 [62   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: c1d3a2ee-ee98-4f9a-830d-6f0f46c9604e
DEBUG 2017-11-08 17:03:21,369 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: c1d3a2ee-ee98-4f9a-830d-6f0f46c9604e
DEBUG 2017-11-08 17:03:22,478 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"88a99fe3-bba5-4928-ba01-17609e6de374","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:03:22.4788033Z","Properties":{}}
DEBUG 2017-11-08 17:03:22,494 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 88a99fe3-bba5-4928-ba01-17609e6de374
DEBUG 2017-11-08 17:04:26,654 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 88a99fe3-bba5-4928-ba01-17609e6de374
DEBUG 2017-11-08 17:04:27,280 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"b7333bff-9fd9-4bea-bf26-820e1563164a","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:04:27.2808033Z","Properties":{}}
DEBUG 2017-11-08 17:04:27,288 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: b7333bff-9fd9-4bea-bf26-820e1563164a
DEBUG 2017-11-08 17:04:30,564 [74   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: b7333bff-9fd9-4bea-bf26-820e1563164a
DEBUG 2017-11-08 17:04:31,354 [84   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"cebaf922-d9f4-45ba-b87f-af097a2da51b","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:04:31.3548033Z","Properties":{}}
DEBUG 2017-11-08 17:04:31,360 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: cebaf922-d9f4-45ba-b87f-af097a2da51b
DEBUG 2017-11-08 17:05:28,204 [19   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 17:05:28,205 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 17:05:28,205 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 17:05:28,205 [19   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 17:05:32,648 [55   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 17:05:32,658 [55   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 17:05:32,663 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,665 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,665 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,665 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,665 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,665 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,665 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,665 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,666 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,666 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,666 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,666 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,666 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,666 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,666 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,666 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,666 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,667 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,667 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,667 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,667 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:32,669 [55   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 17:05:32,809 [55   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:05:32,809 [55   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:05:32,809 [55   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:05:32,809 [55   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:05:33,096 [55   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:05:34,052 [55   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 17:05:34,057 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 17:05:34,058 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 17:05:34,083 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 17:05:34,093 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 17:05:34,130 [55   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 17:05:34,632 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 17:05:34,720 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 43 classes define auto mapping attributes
DEBUG 2017-11-08 17:05:34,721 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 17:05:34,723 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 17:05:34,724 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 17:05:35,003 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 17:05:35,016 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 17:05:35,023 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 17:05:35,024 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 17:05:35,025 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-08 17:05:35,025 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 17:05:35,026 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 17:05:35,027 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 17:05:35,028 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 17:05:35,028 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 17:05:35,029 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 17:05:35,030 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 17:05:35,031 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 17:05:35,031 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 17:05:35,032 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 17:05:35,033 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 17:05:35,034 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 17:05:35,035 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 17:05:35,035 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 17:05:35,036 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 17:05:35,037 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 17:05:35,038 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 17:05:35,038 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 17:05:35,039 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 17:05:35,040 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 17:05:35,041 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 17:05:35,041 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 17:05:37,812 [5    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"cebaf922-d9f4-45ba-b87f-af097a2da51b","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:05:37.6378033Z","Properties":{}}
DEBUG 2017-11-08 17:05:37,812 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"cebaf922-d9f4-45ba-b87f-af097a2da51b","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:05:37.6378033Z","Properties":{}}
DEBUG 2017-11-08 17:05:39,835 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"cebaf922-d9f4-45ba-b87f-af097a2da51b","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:05:37.6378033Z","Properties":{}}
DEBUG 2017-11-08 17:05:43,252 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: cebaf922-d9f4-45ba-b87f-af097a2da51b
DEBUG 2017-11-08 17:05:44,725 [5    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"3b63dcff-3b35-42f6-94d3-61a5a73230b8","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:05:44.7258033Z","Properties":{}}
DEBUG 2017-11-08 17:05:44,770 [20   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 3b63dcff-3b35-42f6-94d3-61a5a73230b8
DEBUG 2017-11-08 17:06:06,985 [62   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 17:06:06,987 [62   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 17:06:06,988 [62   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 17:06:06,988 [62   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 17:06:11,414 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 17:06:11,424 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 17:06:11,430 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,431 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,432 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,432 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,432 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,432 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,432 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,432 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,432 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,432 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,433 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,433 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,433 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,433 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,433 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,433 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,433 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,433 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,433 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,433 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,434 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:11,436 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 17:06:11,526 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:06:11,526 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:06:11,526 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:06:11,526 [1    ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:06:11,804 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:06:12,609 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 17:06:12,614 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 17:06:12,615 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 17:06:12,619 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 17:06:12,629 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 17:06:12,664 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 17:06:13,166 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 17:06:13,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 43 classes define auto mapping attributes
DEBUG 2017-11-08 17:06:13,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 17:06:13,256 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 17:06:13,257 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 17:06:13,258 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 17:06:13,258 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 17:06:13,258 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 17:06:13,258 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 17:06:13,258 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 17:06:13,258 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 17:06:13,258 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 17:06:13,258 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 17:06:13,258 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 17:06:13,258 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-08 17:06:13,258 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 17:06:13,258 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 17:06:13,258 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 17:06:13,526 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 17:06:13,539 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 17:06:13,547 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 17:06:13,548 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 17:06:13,549 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-08 17:06:13,550 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 17:06:13,550 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 17:06:13,551 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 17:06:13,552 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 17:06:13,553 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 17:06:13,553 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 17:06:13,554 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 17:06:13,555 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 17:06:13,556 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 17:06:13,556 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 17:06:13,557 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 17:06:13,558 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 17:06:13,559 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 17:06:13,560 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 17:06:13,561 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 17:06:13,562 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 17:06:13,562 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 17:06:13,563 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 17:06:13,564 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 17:06:13,565 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 17:06:13,565 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 17:06:13,566 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 17:06:14,926 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"3b63dcff-3b35-42f6-94d3-61a5a73230b8","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:06:14.7928033Z","Properties":{}}
DEBUG 2017-11-08 17:06:14,927 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"3b63dcff-3b35-42f6-94d3-61a5a73230b8","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:06:14.7928033Z","Properties":{}}
DEBUG 2017-11-08 17:06:16,945 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"3b63dcff-3b35-42f6-94d3-61a5a73230b8","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:06:14.7928033Z","Properties":{}}
DEBUG 2017-11-08 17:06:19,546 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 3b63dcff-3b35-42f6-94d3-61a5a73230b8
DEBUG 2017-11-08 17:06:20,804 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"3e2323ba-46f8-41df-b8d6-689baafabcab","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:06:20.8048033Z","Properties":{}}
DEBUG 2017-11-08 17:06:20,862 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 3e2323ba-46f8-41df-b8d6-689baafabcab
DEBUG 2017-11-08 17:11:08,350 [32   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 17:11:08,351 [32   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 17:11:08,352 [32   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 17:11:08,352 [32   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 17:11:13,322 [39   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 17:11:13,333 [39   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 17:11:13,339 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,340 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,340 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,340 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,340 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,340 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,341 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,341 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,341 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,341 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,341 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,341 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,341 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,342 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,342 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,342 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,342 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,342 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,342 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,342 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,342 [39   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:13,345 [39   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 17:11:13,489 [39   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:11:13,489 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:11:13,489 [39   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:11:13,489 [39   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:11:13,770 [39   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:11:14,735 [39   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 17:11:14,739 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 17:11:14,740 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 17:11:14,747 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 17:11:14,758 [39   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 17:11:14,793 [39   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 17:11:15,254 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 17:11:15,338 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 43 classes define auto mapping attributes
DEBUG 2017-11-08 17:11:15,338 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 17:11:15,340 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 17:11:15,341 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 17:11:15,342 [39   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 17:11:15,639 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 17:11:15,652 [39   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 17:11:15,659 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 17:11:15,660 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 17:11:15,661 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-08 17:11:15,662 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 17:11:15,663 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 17:11:15,664 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 17:11:15,664 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 17:11:15,665 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 17:11:15,666 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 17:11:15,666 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 17:11:15,667 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 17:11:15,668 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 17:11:15,669 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 17:11:15,670 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 17:11:15,670 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 17:11:15,671 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 17:11:15,672 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 17:11:15,673 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 17:11:15,674 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 17:11:15,674 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 17:11:15,675 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 17:11:15,676 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 17:11:15,677 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 17:11:15,677 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 17:11:15,678 [39   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 17:11:18,468 [67   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"3e2323ba-46f8-41df-b8d6-689baafabcab","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:11:18.1888033Z","Properties":{}}
DEBUG 2017-11-08 17:11:18,469 [61   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"3e2323ba-46f8-41df-b8d6-689baafabcab","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:11:18.1888033Z","Properties":{}}
DEBUG 2017-11-08 17:11:20,666 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"3e2323ba-46f8-41df-b8d6-689baafabcab","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:11:18.1888033Z","Properties":{}}
DEBUG 2017-11-08 17:15:37,770 [72   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-08 17:15:37,772 [72   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 17:15:37,773 [72   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 17:15:37,773 [72   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-08 17:15:42,368 [55   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-08 17:15:42,379 [55   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-08 17:15:42,384 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,386 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,386 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,386 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,386 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,386 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,386 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,387 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,387 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,387 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,387 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,387 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,387 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,387 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,387 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,388 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,388 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,388 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,388 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,388 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,388 [55   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:42,391 [55   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-08 17:15:42,530 [55   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:15:42,531 [55   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:15:42,531 [55   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:15:42,531 [55   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-08 17:15:42,818 [55   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-08 17:15:43,762 [55   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-08 17:15:43,766 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-08 17:15:43,767 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-08 17:15:43,773 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-08 17:15:43,783 [55   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-08 17:15:43,817 [55   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-08 17:15:44,322 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 17:15:44,408 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 43 classes define auto mapping attributes
DEBUG 2017-11-08 17:15:44,408 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-08 17:15:44,410 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-08 17:15:44,411 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-08 17:15:44,412 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-08 17:15:44,412 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-08 17:15:44,412 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-08 17:15:44,412 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-08 17:15:44,412 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-08 17:15:44,412 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-08 17:15:44,412 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-08 17:15:44,412 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-08 17:15:44,412 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-08 17:15:44,412 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-08 17:15:44,412 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-08 17:15:44,412 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-08 17:15:44,412 [55   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-08 17:15:44,672 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 17:15:44,684 [55   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-08 17:15:44,692 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-08 17:15:44,692 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-08 17:15:44,693 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-08 17:15:44,694 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-08 17:15:44,695 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-08 17:15:44,695 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-08 17:15:44,696 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-08 17:15:44,697 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-08 17:15:44,698 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-08 17:15:44,698 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-08 17:15:44,699 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-08 17:15:44,700 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-08 17:15:44,701 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-08 17:15:44,701 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-08 17:15:44,702 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-08 17:15:44,703 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-08 17:15:44,704 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-08 17:15:44,704 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-08 17:15:44,705 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-08 17:15:44,706 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-08 17:15:44,707 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-08 17:15:44,707 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-08 17:15:44,708 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-08 17:15:44,709 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-08 17:15:44,710 [55   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-08 17:15:47,131 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"3e2323ba-46f8-41df-b8d6-689baafabcab","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:15:46.9778033Z","Properties":{}}
DEBUG 2017-11-08 17:15:47,131 [5    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"3e2323ba-46f8-41df-b8d6-689baafabcab","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:15:46.9778033Z","Properties":{}}
DEBUG 2017-11-08 17:15:49,165 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"3e2323ba-46f8-41df-b8d6-689baafabcab","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:15:46.9778033Z","Properties":{}}
DEBUG 2017-11-08 17:15:58,202 [75   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 3e2323ba-46f8-41df-b8d6-689baafabcab
DEBUG 2017-11-08 17:15:59,227 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"ea538b3d-38f8-4880-8a7a-335a8152606a","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T09:15:59.2278033Z","Properties":{}}
DEBUG 2017-11-08 17:15:59,260 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: ea538b3d-38f8-4880-8a7a-335a8152606a
DEBUG 2017-11-08 21:30:01,138 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: ea538b3d-38f8-4880-8a7a-335a8152606a
DEBUG 2017-11-08 21:30:02,108 [58   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"ea5c23e9-0048-473f-a280-81b3d37f3b5f","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T13:30:02.1088033Z","Properties":{}}
DEBUG 2017-11-08 21:30:02,116 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: ea5c23e9-0048-473f-a280-81b3d37f3b5f
DEBUG 2017-11-08 21:30:09,593 [58   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: ea5c23e9-0048-473f-a280-81b3d37f3b5f
DEBUG 2017-11-08 21:30:10,588 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"da6f1cc5-6cae-42dc-b088-0eb4cccb8701","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T13:30:10.5888033Z","Properties":{}}
DEBUG 2017-11-08 21:30:10,594 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: da6f1cc5-6cae-42dc-b088-0eb4cccb8701
DEBUG 2017-11-08 21:30:39,738 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: da6f1cc5-6cae-42dc-b088-0eb4cccb8701
DEBUG 2017-11-08 21:30:40,524 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"1fd2e547-234e-4a3a-bb69-370754176a6e","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T13:30:40.5248033Z","Properties":{}}
DEBUG 2017-11-08 21:30:40,533 [20   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 1fd2e547-234e-4a3a-bb69-370754176a6e
DEBUG 2017-11-08 21:30:44,358 [30   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 1fd2e547-234e-4a3a-bb69-370754176a6e
DEBUG 2017-11-08 21:30:45,312 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"2539fac2-8e0a-4be8-b822-3a284edb06cf","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T13:30:45.3128033Z","Properties":{}}
DEBUG 2017-11-08 21:30:45,319 [58   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 2539fac2-8e0a-4be8-b822-3a284edb06cf
ERROR 2017-11-08 22:26:10,569 [60   ] Abp.Logging.LogHelper                    - Can not find file for: ~/Areas/Mpa/Views/CompanyIntroduce/Index.min.css! System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioningForEmbeddedFile(String path)
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioning(String path)
DEBUG 2017-11-08 22:26:10,702 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 2539fac2-8e0a-4be8-b822-3a284edb06cf
DEBUG 2017-11-08 22:26:11,597 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"6aa3850a-f884-4b97-a08d-63286ffe09b3","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T14:26:11.5978033Z","Properties":{}}
DEBUG 2017-11-08 22:26:11,607 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 6aa3850a-f884-4b97-a08d-63286ffe09b3
DEBUG 2017-11-08 22:26:28,356 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 6aa3850a-f884-4b97-a08d-63286ffe09b3
DEBUG 2017-11-08 22:26:29,255 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"538eb935-ffb6-4b2c-98de-5c72e0a0bcb5","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T14:26:29.2558033Z","Properties":{}}
DEBUG 2017-11-08 22:26:29,269 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 538eb935-ffb6-4b2c-98de-5c72e0a0bcb5
DEBUG 2017-11-08 22:26:31,309 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 538eb935-ffb6-4b2c-98de-5c72e0a0bcb5
DEBUG 2017-11-08 22:26:32,080 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"a9607cbd-bf28-4679-8216-d309d70e11f8","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-08T14:26:32.0808033Z","Properties":{}}
DEBUG 2017-11-08 22:26:32,086 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: a9607cbd-bf28-4679-8216-d309d70e11f8
DEBUG 2017-11-09 08:55:00,019 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 08:55:00,029 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 08:55:00,034 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,036 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,036 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,036 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,036 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,036 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,036 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,036 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,036 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,037 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,037 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,037 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,038 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,038 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,038 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,038 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,038 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,039 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,039 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,039 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,039 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,041 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 08:55:00,134 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 08:55:00,134 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 08:55:00,134 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 08:55:00,134 [1    ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 08:55:00,394 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 08:55:00,875 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 08:55:00,881 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 08:55:00,882 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 08:55:00,886 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 08:55:00,897 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 08:55:00,932 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 08:55:01,394 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 08:55:01,493 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 43 classes define auto mapping attributes
DEBUG 2017-11-09 08:55:01,493 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 08:55:01,496 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 08:55:01,497 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 08:55:01,498 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 08:55:01,498 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 08:55:01,498 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 08:55:01,498 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 08:55:01,498 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 08:55:01,498 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 08:55:01,498 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 08:55:01,498 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 08:55:01,498 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 08:55:01,498 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 08:55:01,498 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 08:55:01,498 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 08:55:01,498 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 08:55:01,498 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 08:55:01,498 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 08:55:01,769 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 08:55:01,781 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 08:55:01,788 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 08:55:01,789 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 08:55:01,790 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 08:55:01,791 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 08:55:01,791 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 08:55:01,792 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 08:55:01,793 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 08:55:01,793 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 08:55:01,794 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 08:55:01,795 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 08:55:01,796 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 08:55:01,797 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 08:55:01,797 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 08:55:01,798 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 08:55:01,799 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 08:55:01,799 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 08:55:01,800 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 08:55:01,801 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 08:55:01,801 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 08:55:01,802 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 08:55:01,803 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 08:55:01,804 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 08:55:01,804 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 08:55:01,805 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 08:55:01,806 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2017-11-09 08:56:45,862 [24   ] aiKang.Web.Controllers.AccountController - 登录失败!
Abp.UI.UserFriendlyException: 登录失败!
   在 TaiKang.Web.Controllers.AccountController.<GetLoginResultAsync>d__23.MoveNext() 位置 E:\SVN\泰康生物\TaiKang.Web\Controllers\AccountController.cs:行号 216
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   在 TaiKang.Web.Controllers.AccountController.<Login>d__20.MoveNext() 位置 E:\SVN\泰康生物\TaiKang.Web\Controllers\AccountController.cs:行号 144
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithPostActionAndFinallyAndGetResult>d__5`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass37.<BeginInvokeAsynchronousActionMethod>b__36(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass33.<BeginInvokeActionMethodWithFilters>b__32(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
WARN  2017-11-09 08:56:59,136 [34   ] aiKang.Web.Controllers.AccountController - 登录失败!
Abp.UI.UserFriendlyException: 登录失败!
   在 TaiKang.Web.Controllers.AccountController.<GetLoginResultAsync>d__23.MoveNext() 位置 E:\SVN\泰康生物\TaiKang.Web\Controllers\AccountController.cs:行号 216
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   在 TaiKang.Web.Controllers.AccountController.<Login>d__20.MoveNext() 位置 E:\SVN\泰康生物\TaiKang.Web\Controllers\AccountController.cs:行号 144
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithPostActionAndFinallyAndGetResult>d__5`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass37.<BeginInvokeAsynchronousActionMethod>b__36(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass33.<BeginInvokeActionMethodWithFilters>b__32(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
DEBUG 2017-11-09 08:57:07,300 [36   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"8946193b-4d8e-4a6b-aa61-010a8db17404","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T00:57:07.2950178Z","Properties":{}}
DEBUG 2017-11-09 08:57:07,360 [41   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 8946193b-4d8e-4a6b-aa61-010a8db17404
DEBUG 2017-11-09 08:57:52,578 [38   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 8946193b-4d8e-4a6b-aa61-010a8db17404
DEBUG 2017-11-09 08:57:53,401 [36   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"af90f5f9-2094-4fc7-af1c-42deb87a1fec","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T00:57:53.401018Z","Properties":{}}
DEBUG 2017-11-09 08:57:53,407 [38   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: af90f5f9-2094-4fc7-af1c-42deb87a1fec
DEBUG 2017-11-09 08:57:56,393 [41   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: af90f5f9-2094-4fc7-af1c-42deb87a1fec
DEBUG 2017-11-09 08:57:57,080 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"4354b0aa-fa62-4d72-9249-79a6b37887a0","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T00:57:57.080018Z","Properties":{}}
DEBUG 2017-11-09 08:57:57,087 [37   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 4354b0aa-fa62-4d72-9249-79a6b37887a0
DEBUG 2017-11-09 09:13:49,433 [116  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 4354b0aa-fa62-4d72-9249-79a6b37887a0
DEBUG 2017-11-09 09:13:50,176 [111  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"0cdbf479-53c0-45d1-a232-81205bdceeb1","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T01:13:50.176723Z","Properties":{}}
DEBUG 2017-11-09 09:13:50,184 [122  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 0cdbf479-53c0-45d1-a232-81205bdceeb1
DEBUG 2017-11-09 09:13:58,930 [126  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 0cdbf479-53c0-45d1-a232-81205bdceeb1
DEBUG 2017-11-09 09:13:59,711 [124  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"2cefec48-dd2a-4a30-99cb-76ea0deb2bd5","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T01:13:59.711923Z","Properties":{}}
DEBUG 2017-11-09 09:13:59,718 [118  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 2cefec48-dd2a-4a30-99cb-76ea0deb2bd5
DEBUG 2017-11-09 09:33:21,989 [112  ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 09:33:21,990 [112  ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 09:33:21,990 [112  ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 09:33:21,990 [112  ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 09:33:27,629 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 09:33:27,644 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 09:33:27,644 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,644 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,644 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,644 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,644 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,644 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,644 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,644 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,644 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,644 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,644 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,644 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,660 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,660 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,660 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,660 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,660 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,660 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,660 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,660 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,660 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:27,660 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 09:33:27,787 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:33:27,787 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:33:27,787 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:33:27,787 [1    ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:33:28,053 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:33:29,011 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 09:33:29,011 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 09:33:29,011 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 09:33:29,027 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 09:33:29,027 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 09:33:29,073 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 09:33:29,496 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 44 classes define auto mapping attributes
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 09:33:29,574 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 09:33:29,835 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 09:33:29,851 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 09:33:29,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 09:33:29,882 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 09:33:29,882 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 09:33:29,882 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 09:33:29,882 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 09:33:29,882 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 09:33:29,882 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 09:33:29,882 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 09:33:32,297 [124  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"2cefec48-dd2a-4a30-99cb-76ea0deb2bd5","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T01:33:32.1477297Z","Properties":{}}
DEBUG 2017-11-09 09:33:32,297 [122  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"2cefec48-dd2a-4a30-99cb-76ea0deb2bd5","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T01:33:32.1477297Z","Properties":{}}
DEBUG 2017-11-09 09:33:34,728 [80   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"2cefec48-dd2a-4a30-99cb-76ea0deb2bd5","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T01:33:32.1477297Z","Properties":{}}
DEBUG 2017-11-09 09:35:41,639 [88   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 09:35:41,639 [88   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 09:35:41,639 [88   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 09:35:41,639 [88   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 09:35:44,391 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 09:35:44,391 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:44,406 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 09:35:44,547 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:35:44,547 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:35:44,547 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:35:44,547 [1    ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:35:44,812 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:35:45,334 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 09:35:45,350 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 09:35:45,350 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 09:35:45,350 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 09:35:45,365 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 09:35:45,397 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 09:35:45,849 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 09:35:45,927 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 44 classes define auto mapping attributes
DEBUG 2017-11-09 09:35:45,927 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 09:35:45,943 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 09:35:46,195 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 09:35:46,210 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 09:35:46,210 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 09:35:46,210 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 09:35:46,210 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 09:35:46,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 09:35:46,241 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 09:35:46,241 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 09:35:46,241 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 09:35:46,241 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 09:35:49,106 [108  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"2cefec48-dd2a-4a30-99cb-76ea0deb2bd5","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T01:35:48.9821304Z","Properties":{}}
DEBUG 2017-11-09 09:36:56,356 [124  ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 09:36:56,356 [124  ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 09:36:56,356 [124  ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 09:36:56,356 [124  ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 09:37:01,138 [117  ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:01,153 [117  ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 09:37:01,285 [117  ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:37:01,285 [117  ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:37:01,285 [117  ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:37:01,285 [117  ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:37:03,137 [117  ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:03,543 [117  ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 09:37:03,543 [117  ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 09:37:03,543 [117  ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 09:37:03,543 [117  ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 09:37:03,559 [117  ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 09:37:03,590 [117  ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 09:37:04,039 [117  ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - Found 44 classes define auto mapping attributes
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 09:37:04,133 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 09:37:04,307 [117  ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 09:37:04,354 [117  ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 09:37:04,354 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 09:37:04,354 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 09:37:04,354 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 09:37:04,354 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 09:37:04,354 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 09:37:04,354 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 09:37:04,354 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 09:37:04,354 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 09:37:04,370 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 09:37:06,132 [124  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"2cefec48-dd2a-4a30-99cb-76ea0deb2bd5","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T01:37:06.0451309Z","Properties":{}}
DEBUG 2017-11-09 09:37:06,132 [88   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"2cefec48-dd2a-4a30-99cb-76ea0deb2bd5","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T01:37:06.0451309Z","Properties":{}}
DEBUG 2017-11-09 09:37:08,741 [97   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"2cefec48-dd2a-4a30-99cb-76ea0deb2bd5","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T01:37:06.0451309Z","Properties":{}}
DEBUG 2017-11-09 09:37:18,338 [123  ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 09:37:18,338 [123  ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 09:37:18,338 [123  ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 09:37:18,338 [123  ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 09:37:22,503 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:22,519 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 09:37:22,644 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:37:22,644 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:37:22,644 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:37:22,644 [1    ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:37:22,926 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:37:23,382 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 09:37:23,383 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 09:37:23,384 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 09:37:23,387 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 09:37:23,398 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 09:37:23,435 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 09:37:23,975 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 44 classes define auto mapping attributes
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 09:37:24,085 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 09:37:24,274 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 09:37:24,274 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 09:37:24,274 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 09:37:24,289 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 09:37:24,305 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 09:37:24,305 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 09:37:24,305 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 09:37:24,305 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 09:37:24,305 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 09:37:24,305 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 09:37:28,928 [107  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"2cefec48-dd2a-4a30-99cb-76ea0deb2bd5","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T01:37:28.592131Z","Properties":{}}
DEBUG 2017-11-09 09:37:28,928 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"2cefec48-dd2a-4a30-99cb-76ea0deb2bd5","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T01:37:28.592131Z","Properties":{}}
DEBUG 2017-11-09 09:37:31,746 [123  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"2cefec48-dd2a-4a30-99cb-76ea0deb2bd5","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T01:37:28.592131Z","Properties":{}}
DEBUG 2017-11-09 09:45:18,435 [104  ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 09:45:18,436 [104  ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 09:45:18,436 [104  ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 09:45:18,436 [104  ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 09:45:21,752 [125  ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,768 [125  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:21,784 [125  ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 09:45:21,866 [125  ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:45:21,866 [125  ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:45:21,866 [125  ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:45:21,866 [125  ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 09:45:22,131 [125  ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 09:45:22,599 [125  ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 09:45:22,599 [125  ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 09:45:22,599 [125  ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 09:45:22,614 [125  ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 09:45:22,614 [125  ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 09:45:22,646 [125  ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 09:45:23,114 [125  ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - Found 44 classes define auto mapping attributes
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 09:45:23,192 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 09:45:23,207 [125  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 09:45:23,457 [125  ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 09:45:23,472 [125  ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 09:45:23,472 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 09:45:23,472 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 09:45:23,488 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 09:45:23,504 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 09:45:23,504 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 09:45:23,504 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 09:45:23,504 [125  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 09:45:24,974 [104  ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"2cefec48-dd2a-4a30-99cb-76ea0deb2bd5","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T01:45:24.8965336Z","Properties":{}}
DEBUG 2017-11-09 10:01:35,830 [104  ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 10:01:35,830 [104  ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 10:01:35,830 [104  ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 10:01:35,830 [104  ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 10:01:38,452 [117  ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:38,468 [117  ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 10:01:38,608 [117  ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 10:01:38,608 [117  ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 10:01:38,608 [117  ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 10:01:38,608 [117  ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 10:01:38,907 [117  ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 10:01:39,406 [117  ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 10:01:39,406 [117  ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 10:01:39,406 [117  ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 10:01:39,406 [117  ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 10:01:39,421 [117  ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 10:01:39,453 [117  ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 10:01:39,967 [117  ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 10:01:40,060 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - Found 44 classes define auto mapping attributes
DEBUG 2017-11-09 10:01:40,060 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 10:01:40,077 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 10:01:40,077 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 10:01:40,077 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 10:01:40,077 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 10:01:40,077 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 10:01:40,077 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 10:01:40,077 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 10:01:40,077 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 10:01:40,077 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 10:01:40,077 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 10:01:40,077 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 10:01:40,077 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 10:01:40,077 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 10:01:40,077 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 10:01:40,078 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 10:01:40,079 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 10:01:40,079 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 10:01:40,079 [117  ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 10:01:40,347 [117  ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 10:01:40,363 [117  ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 10:01:40,378 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 10:01:40,394 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 10:01:40,394 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 10:01:40,394 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 10:01:40,394 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 10:01:40,394 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 10:01:40,394 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 10:01:40,394 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 10:01:40,394 [117  ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 10:01:43,580 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"2cefec48-dd2a-4a30-99cb-76ea0deb2bd5","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T02:01:43.4085392Z","Properties":{}}
DEBUG 2017-11-09 11:50:16,645 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 11:50:16,655 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 11:50:16,661 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,662 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,663 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,663 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,663 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,663 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,663 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,663 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,663 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,663 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,664 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,664 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,664 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,664 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,664 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,664 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,664 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,664 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,664 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,665 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,665 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:16,667 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 11:50:16,894 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 11:50:16,894 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 11:50:16,894 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 11:50:16,894 [1    ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 11:50:17,168 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:50:18,621 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 11:50:18,632 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 11:50:18,634 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 11:50:18,639 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 11:50:18,652 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 11:50:18,692 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 11:50:19,153 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 11:50:19,251 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 11:50:19,251 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 11:50:19,254 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 11:50:19,255 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 11:50:19,542 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 11:50:19,555 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 11:50:19,563 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 11:50:19,564 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 11:50:19,564 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 11:50:19,565 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 11:50:19,566 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 11:50:19,567 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 11:50:19,567 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 11:50:19,568 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 11:50:19,569 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 11:50:19,570 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 11:50:19,570 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 11:50:19,571 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 11:50:19,572 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 11:50:19,573 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 11:50:19,574 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 11:50:19,574 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 11:50:19,575 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 11:50:19,576 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 11:50:19,577 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 11:50:19,578 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 11:50:19,579 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 11:50:19,580 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 11:50:19,580 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 11:50:19,581 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 11:50:19,582 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 11:50:19,583 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2017-11-09 11:50:31,522 [8    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:50:36,664 [6    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:50:41,832 [6    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:50:47,042 [6    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:50:52,182 [12   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:50:57,414 [7    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:51:02,549 [12   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:51:07,757 [12   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:51:12,871 [7    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:51:18,026 [7    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:51:23,154 [15   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:51:28,311 [10   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:51:33,434 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:51:38,578 [10   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:51:43,741 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:51:48,902 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:51:54,025 [8    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:51:59,153 [12   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:52:04,301 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:52:09,428 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:52:14,569 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:52:19,729 [8    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:52:24,890 [23   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:52:30,035 [26   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:52:35,185 [23   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:52:40,336 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:52:45,515 [29   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:52:50,678 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:52:55,775 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:53:00,910 [12   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:53:06,012 [12   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:53:11,144 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:53:16,275 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:53:21,393 [29   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:53:26,555 [8    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:53:31,723 [32   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:53:36,868 [38   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 11:53:41,982 [11   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2017-11-09 11:53:43,856 [11   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 11:53:43,857 [11   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 11:53:43,858 [11   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 11:53:43,858 [11   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 11:54:18,240 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 11:54:18,251 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 11:54:18,256 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,259 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,259 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,259 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,259 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,259 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,259 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,259 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,259 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,260 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,260 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,260 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,260 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,260 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,260 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,260 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,260 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,261 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,261 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,261 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,261 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:18,263 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 11:54:18,407 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 11:54:18,407 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 11:54:18,407 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 11:54:18,407 [1    ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 11:54:18,715 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 11:54:19,888 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 11:54:19,894 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 11:54:19,895 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 11:54:19,902 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 11:54:19,912 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 11:54:19,950 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 11:54:20,448 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 11:54:20,535 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 11:54:20,535 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 11:54:20,537 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 11:54:20,537 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 11:54:20,537 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 11:54:20,537 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 11:54:20,537 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 11:54:20,537 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 11:54:20,537 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 11:54:20,537 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 11:54:20,537 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 11:54:20,538 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 11:54:20,539 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 11:54:20,539 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 11:54:20,539 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 11:54:20,539 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 11:54:20,539 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 11:54:20,539 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 11:54:20,800 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 11:54:20,814 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 11:54:20,821 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 11:54:20,822 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 11:54:20,823 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 11:54:20,824 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 11:54:20,825 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 11:54:20,825 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 11:54:20,826 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 11:54:20,827 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 11:54:20,828 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 11:54:20,828 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 11:54:20,829 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 11:54:20,830 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 11:54:20,831 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 11:54:20,831 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 11:54:20,832 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 11:54:20,833 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 11:54:20,834 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 11:54:20,835 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 11:54:20,836 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 11:54:20,836 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 11:54:20,837 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 11:54:20,838 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 11:54:20,839 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 11:54:20,840 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 11:54:20,841 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 11:54:20,841 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 11:54:43,624 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"09a8db06-f51b-424f-8c28-ad3c7bd620a2","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T03:54:43.6188603Z","Properties":{}}
DEBUG 2017-11-09 11:54:43,718 [37   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 09a8db06-f51b-424f-8c28-ad3c7bd620a2
DEBUG 2017-11-09 11:54:53,344 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 09a8db06-f51b-424f-8c28-ad3c7bd620a2
DEBUG 2017-11-09 11:54:54,176 [27   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"e1ce17c2-0052-4551-b370-5eeb50dcb3df","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T03:54:54.1768603Z","Properties":{}}
DEBUG 2017-11-09 11:54:54,187 [36   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: e1ce17c2-0052-4551-b370-5eeb50dcb3df
DEBUG 2017-11-09 11:55:09,244 [36   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: e1ce17c2-0052-4551-b370-5eeb50dcb3df
DEBUG 2017-11-09 11:55:10,089 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"208e0591-9753-40df-afbf-4a27c0243644","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T03:55:10.0898603Z","Properties":{}}
DEBUG 2017-11-09 11:55:10,098 [8    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 208e0591-9753-40df-afbf-4a27c0243644
DEBUG 2017-11-09 11:55:12,820 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 208e0591-9753-40df-afbf-4a27c0243644
DEBUG 2017-11-09 11:55:13,589 [31   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"3ac7c3a0-9925-4072-a4b8-16abbd0cd828","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T03:55:13.5898603Z","Properties":{}}
DEBUG 2017-11-09 11:55:13,596 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 3ac7c3a0-9925-4072-a4b8-16abbd0cd828
DEBUG 2017-11-09 12:00:58,933 [20   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 12:00:58,934 [20   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 12:00:58,935 [20   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 12:00:58,935 [20   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 12:01:04,937 [14   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 12:01:04,937 [14   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:04,952 [14   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 12:01:05,030 [14   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 12:01:05,030 [14   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 12:01:05,030 [14   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 12:01:05,030 [14   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 12:01:05,298 [14   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:06,071 [14   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 12:01:06,086 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 12:01:06,086 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 12:01:06,086 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 12:01:06,102 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 12:01:06,133 [14   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 12:01:06,570 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 12:01:06,664 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 12:01:06,944 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 12:01:06,960 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 12:01:06,960 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 12:01:06,960 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 12:01:06,960 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 12:01:06,960 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 12:01:06,960 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 12:01:06,960 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 12:01:06,960 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 12:01:06,976 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2017-11-09 12:01:11,316 [20   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:01:16,468 [20   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:01:21,644 [20   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:01:26,777 [15   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:01:31,923 [15   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:01:37,044 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:01:42,192 [12   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:01:47,312 [29   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2017-11-09 12:01:50,738 [29   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 12:01:50,738 [29   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 12:01:50,738 [29   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 12:01:50,738 [29   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 12:01:58,385 [28   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 12:01:58,400 [28   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 12:01:58,400 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,400 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,400 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,400 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:58,416 [28   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 12:01:58,541 [28   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 12:01:58,541 [28   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 12:01:58,541 [28   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 12:01:58,541 [28   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 12:01:58,837 [28   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:01:59,744 [28   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 12:01:59,744 [28   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 12:01:59,744 [28   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 12:01:59,744 [28   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 12:01:59,759 [28   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 12:01:59,791 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 12:02:00,228 [28   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 12:02:00,306 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 12:02:00,306 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 12:02:00,306 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 12:02:00,306 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 12:02:00,306 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 12:02:00,306 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 12:02:00,321 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 12:02:00,577 [28   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 12:02:00,590 [28   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 12:02:00,597 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 12:02:00,598 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 12:02:00,599 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 12:02:00,600 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 12:02:00,600 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 12:02:00,601 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 12:02:00,602 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 12:02:00,603 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 12:02:00,604 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 12:02:00,604 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 12:02:00,605 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 12:02:00,606 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 12:02:00,607 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 12:02:00,607 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 12:02:00,608 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 12:02:00,609 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 12:02:00,610 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 12:02:00,610 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 12:02:00,611 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 12:02:00,612 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 12:02:00,612 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 12:02:00,613 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 12:02:00,614 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 12:02:00,615 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 12:02:00,616 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 12:02:00,617 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2017-11-09 12:02:04,983 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:02:10,124 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:02:15,279 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:02:20,406 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:02:25,613 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:02:30,756 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:02:35,928 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:02:41,050 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:02:46,208 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:02:51,339 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:02:56,468 [8    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:03:01,598 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:03:06,771 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:03:11,900 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:03:17,046 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:03:22,190 [12   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:03:27,344 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:03:32,467 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:03:37,628 [8    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:03:42,757 [8    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:03:47,875 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:03:52,999 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:03:58,144 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:04:03,240 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:04:08,375 [8    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:04:13,503 [12   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:04:18,633 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:04:23,817 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:04:28,961 [15   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:04:34,094 [8    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:04:39,238 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:04:44,389 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:04:49,543 [12   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:04:54,667 [36   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:04:59,800 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:05:04,970 [36   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:05:10,126 [36   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:05:15,264 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2017-11-09 12:05:16,656 [12   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 12:05:16,656 [12   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 12:05:16,656 [12   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 12:05:16,656 [12   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 12:05:20,962 [28   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 12:05:20,977 [28   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 12:05:20,977 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:20,993 [28   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 12:05:21,088 [28   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 12:05:21,088 [28   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 12:05:21,088 [28   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 12:05:21,088 [28   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 12:05:21,369 [28   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:21,868 [28   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 12:05:21,868 [28   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 12:05:21,868 [28   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 12:05:21,868 [28   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 12:05:21,884 [28   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 12:05:21,915 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 12:05:22,385 [28   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 12:05:22,494 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 12:05:22,760 [28   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 12:05:22,775 [28   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 12:05:22,775 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 12:05:22,775 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 12:05:22,775 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 12:05:22,791 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 12:05:22,806 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 12:05:22,806 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2017-11-09 12:05:27,039 [15   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:05:32,204 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 12:05:37,374 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 53
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2017-11-09 12:05:41,467 [12   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 12:05:41,467 [12   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 12:05:41,467 [12   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 12:05:41,467 [12   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 12:05:50,738 [28   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:50,754 [28   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 12:05:50,910 [28   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 12:05:50,910 [28   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 12:05:50,910 [28   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 12:05:50,910 [28   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 12:05:51,193 [28   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 12:05:52,117 [28   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 12:05:52,117 [28   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 12:05:52,117 [28   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 12:05:52,117 [28   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 12:05:52,132 [28   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 12:05:52,163 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 12:05:52,616 [28   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 12:05:52,694 [28   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 12:05:52,943 [28   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 12:05:52,959 [28   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 12:05:52,959 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 12:05:52,959 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 12:05:52,975 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 12:05:52,990 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 12:05:52,990 [28   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 12:05:55,200 [37   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"4abcd1b9-4295-48cd-8d40-3b8484167fb2","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T04:05:55.1846622Z","Properties":{}}
DEBUG 2017-11-09 13:10:11,388 [46   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 13:10:11,388 [46   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:10:11,388 [46   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:10:11,388 [46   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 13:10:16,497 [50   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 13:10:16,508 [50   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 13:10:16,513 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,515 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,515 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,515 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,515 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,515 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,515 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,515 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,516 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,516 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,516 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,516 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,516 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,516 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,516 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,516 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,517 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,517 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,517 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,517 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,517 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:16,519 [50   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 13:10:16,608 [50   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:10:16,608 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:10:16,608 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:10:16,608 [50   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:10:16,877 [50   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:10:17,718 [50   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 13:10:17,723 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 13:10:17,724 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 13:10:17,728 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 13:10:17,739 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 13:10:17,774 [50   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:10:18,239 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:10:18,329 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 13:10:18,329 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 13:10:18,331 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 13:10:18,331 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 13:10:18,331 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 13:10:18,331 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 13:10:18,331 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 13:10:18,331 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 13:10:18,331 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 13:10:18,331 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 13:10:18,331 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 13:10:18,331 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 13:10:18,331 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 13:10:18,332 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 13:10:18,333 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 13:10:18,333 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 13:10:18,333 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 13:10:18,623 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:10:18,635 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:10:18,643 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 13:10:18,644 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 13:10:18,645 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 13:10:18,645 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 13:10:18,646 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 13:10:18,647 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 13:10:18,648 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 13:10:18,649 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 13:10:18,649 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 13:10:18,650 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 13:10:18,651 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 13:10:18,652 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 13:10:18,653 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 13:10:18,653 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 13:10:18,654 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 13:10:18,655 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 13:10:18,656 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 13:10:18,657 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 13:10:18,657 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 13:10:18,658 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 13:10:18,659 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 13:10:18,660 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 13:10:18,660 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 13:10:18,661 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 13:10:18,663 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 13:10:18,664 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 13:10:19,898 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"4abcd1b9-4295-48cd-8d40-3b8484167fb2","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:10:19.7568855Z","Properties":{}}
DEBUG 2017-11-09 13:10:19,899 [23   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"4abcd1b9-4295-48cd-8d40-3b8484167fb2","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:10:19.7568855Z","Properties":{}}
DEBUG 2017-11-09 13:10:21,917 [23   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"4abcd1b9-4295-48cd-8d40-3b8484167fb2","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:10:19.7568855Z","Properties":{}}
DEBUG 2017-11-09 13:10:24,395 [6    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 4abcd1b9-4295-48cd-8d40-3b8484167fb2
DEBUG 2017-11-09 13:10:25,284 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"62254532-0d4f-451f-8d70-249e5a101f1a","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:10:25.2848855Z","Properties":{}}
DEBUG 2017-11-09 13:10:25,327 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 62254532-0d4f-451f-8d70-249e5a101f1a
DEBUG 2017-11-09 13:11:50,539 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 62254532-0d4f-451f-8d70-249e5a101f1a
DEBUG 2017-11-09 13:11:51,358 [6    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"300be32d-74a5-4975-85c2-bc81388d9bb3","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:11:51.3582857Z","Properties":{}}
DEBUG 2017-11-09 13:11:51,366 [39   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 300be32d-74a5-4975-85c2-bc81388d9bb3
ERROR 2017-11-09 13:11:58,158 [44   ] nHandling.AbpApiExceptionFilterAttribute - There is no such an entity. Entity type: TaiKang.Tk.ClassifiedContent, id: 0
Abp.Domain.Entities.EntityNotFoundException: There is no such an entity. Entity type: TaiKang.Tk.ClassifiedContent, id: 0
   在 Abp.Domain.Repositories.AbpRepositoryBase`2.<GetAsync>d__21.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithPostActionAndFinallyAndGetResult>d__5`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithPostActionAndFinallyAndGetResult>d__5`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Application.Services.AsyncCrudAppService`8.<Update>d__8.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithPostActionAndFinallyAndGetResult>d__5`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithFinallyAndGetResult>d__3`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Threading.Tasks.TaskHelpersExtensions.<CastToObject>d__3`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ApiControllerActionInvoker.<InvokeActionAsyncCore>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Uow.AbpApiUowFilter.<ExecuteActionFilterAsync>d__6.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Validation.AbpApiValidationFilter.<ExecuteActionFilterAsync>d__5.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Auditing.AbpApiAuditFilter.<ExecuteActionFilterAsync>d__4.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ActionFilterResult.<ExecuteAsync>d__2.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Security.AntiForgery.AbpAntiForgeryApiFilter.<ExecuteAuthorizationFilterAsync>d__10.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Authorization.AbpApiAuthorizeFilter.<ExecuteAuthorizationFilterAsync>d__7.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.AuthenticationFilterResult.<ExecuteAsync>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ExceptionFilterResult.<ExecuteAsync>d__0.MoveNext()
ERROR 2017-11-09 13:12:31,317 [43   ] nHandling.AbpApiExceptionFilterAttribute - There is no such an entity. Entity type: TaiKang.Tk.ClassifiedContent, id: 0
Abp.Domain.Entities.EntityNotFoundException: There is no such an entity. Entity type: TaiKang.Tk.ClassifiedContent, id: 0
   在 Abp.Domain.Repositories.AbpRepositoryBase`2.<GetAsync>d__21.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithPostActionAndFinallyAndGetResult>d__5`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithPostActionAndFinallyAndGetResult>d__5`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Application.Services.AsyncCrudAppService`8.<Update>d__8.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithPostActionAndFinallyAndGetResult>d__5`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.Threading.InternalAsyncHelper.<AwaitTaskWithFinallyAndGetResult>d__3`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Threading.Tasks.TaskHelpersExtensions.<CastToObject>d__3`1.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ApiControllerActionInvoker.<InvokeActionAsyncCore>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Uow.AbpApiUowFilter.<ExecuteActionFilterAsync>d__6.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Validation.AbpApiValidationFilter.<ExecuteActionFilterAsync>d__5.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Auditing.AbpApiAuditFilter.<ExecuteActionFilterAsync>d__4.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ActionFilterResult.<ExecuteAsync>d__2.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Security.AntiForgery.AbpAntiForgeryApiFilter.<ExecuteAuthorizationFilterAsync>d__10.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Authorization.AbpApiAuthorizeFilter.<ExecuteAuthorizationFilterAsync>d__7.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.AuthenticationFilterResult.<ExecuteAsync>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ExceptionFilterResult.<ExecuteAsync>d__0.MoveNext()
DEBUG 2017-11-09 13:14:18,356 [46   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 300be32d-74a5-4975-85c2-bc81388d9bb3
DEBUG 2017-11-09 13:14:19,058 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"ca1b73e8-8763-4fe7-9cf6-ef9510fb4627","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:14:19.0588864Z","Properties":{}}
DEBUG 2017-11-09 13:14:19,068 [42   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: ca1b73e8-8763-4fe7-9cf6-ef9510fb4627
DEBUG 2017-11-09 13:15:57,421 [86   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: ca1b73e8-8763-4fe7-9cf6-ef9510fb4627
DEBUG 2017-11-09 13:15:58,152 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"54ce90c5-0f37-45d8-bb51-9f61f34f9d4b","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:15:58.1526869Z","Properties":{}}
DEBUG 2017-11-09 13:15:58,165 [84   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 54ce90c5-0f37-45d8-bb51-9f61f34f9d4b
DEBUG 2017-11-09 13:16:05,345 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 54ce90c5-0f37-45d8-bb51-9f61f34f9d4b
DEBUG 2017-11-09 13:16:06,221 [47   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"8f850333-1ce1-4efe-8abd-ee9b16686672","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:16:06.2206869Z","Properties":{}}
DEBUG 2017-11-09 13:16:06,228 [53   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 8f850333-1ce1-4efe-8abd-ee9b16686672
DEBUG 2017-11-09 13:19:10,309 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 8f850333-1ce1-4efe-8abd-ee9b16686672
DEBUG 2017-11-09 13:19:10,975 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"a02682a6-8605-4f2c-9d23-0440d50e321e","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:19:10.9758879Z","Properties":{}}
DEBUG 2017-11-09 13:19:10,983 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: a02682a6-8605-4f2c-9d23-0440d50e321e
DEBUG 2017-11-09 13:40:06,564 [35   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 13:40:06,565 [35   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:40:06,566 [35   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:40:06,566 [35   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 13:40:12,816 [85   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 13:40:12,826 [85   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 13:40:12,832 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,833 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,833 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,833 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,833 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,833 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,833 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,834 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,834 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,834 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,834 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,834 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,834 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,834 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,834 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,835 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,835 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,835 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,835 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,835 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,835 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:12,837 [85   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 13:40:12,977 [85   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:40:12,977 [85   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:40:12,977 [85   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:40:12,977 [85   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:40:13,269 [85   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:40:14,203 [85   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 13:40:14,218 [85   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 13:40:14,218 [85   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 13:40:14,218 [85   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 13:40:14,234 [85   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 13:40:14,265 [85   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:40:14,730 [85   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 13:40:14,808 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 13:40:15,104 [85   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:40:15,117 [85   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:40:15,125 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 13:40:15,126 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 13:40:15,127 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 13:40:15,128 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 13:40:15,128 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 13:40:15,129 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 13:40:15,130 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 13:40:15,131 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 13:40:15,132 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 13:40:15,133 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 13:40:15,133 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 13:40:15,136 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 13:40:15,138 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 13:40:15,138 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 13:40:15,139 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 13:40:15,140 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 13:40:15,141 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 13:40:15,142 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 13:40:15,142 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 13:40:15,143 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 13:40:15,144 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 13:40:15,145 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 13:40:15,145 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 13:40:15,146 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 13:40:15,147 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 13:40:15,148 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 13:40:17,946 [36   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"a02682a6-8605-4f2c-9d23-0440d50e321e","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:40:17.7987933Z","Properties":{}}
DEBUG 2017-11-09 13:40:18,129 [17   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 13:40:18,130 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:40:18,130 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:40:18,130 [17   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 13:40:19,159 [85   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 13:40:19,169 [85   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 13:40:19,169 [85   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 13:40:19,211 [85   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 13:40:19,220 [85   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 13:40:19,256 [85   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:40:19,704 [85   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:40:19,788 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 13:40:19,790 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 13:40:19,792 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 13:40:19,793 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 13:40:19,794 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 13:40:19,794 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 13:40:20,035 [85   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:40:20,051 [85   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:40:20,051 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 13:40:20,051 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 13:40:20,051 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 13:40:20,051 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 13:40:20,051 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 13:40:20,051 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 13:40:20,051 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 13:40:20,051 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 13:40:20,066 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2017-11-09 13:40:24,453 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 13:40:29,564 [35   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 13:40:34,705 [8    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 13:40:39,832 [35   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 13:40:44,965 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 13:40:50,096 [48   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 13:40:55,207 [15   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 13:41:00,321 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2017-11-09 13:41:00,959 [8    ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 13:41:00,960 [8    ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:41:00,960 [8    ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:41:00,961 [8    ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 13:41:12,389 [85   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 13:41:12,400 [85   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 13:41:12,406 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,408 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,408 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,408 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,408 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,408 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,408 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,408 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,409 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,409 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,409 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,409 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,409 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,409 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,409 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,409 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,410 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,410 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,410 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,410 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,410 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:12,412 [85   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 13:41:12,511 [85   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:41:12,511 [85   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:41:12,511 [85   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:41:12,511 [85   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:41:12,783 [85   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:13,615 [85   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 13:41:13,619 [85   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 13:41:13,620 [85   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 13:41:13,624 [85   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 13:41:13,634 [85   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 13:41:13,671 [85   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:41:14,118 [85   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 13:41:14,228 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 13:41:14,481 [85   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:41:14,497 [85   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:41:14,497 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 13:41:14,497 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 13:41:14,497 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 13:41:14,497 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 13:41:14,497 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 13:41:14,497 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 13:41:14,497 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 13:41:14,497 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 13:41:14,497 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 13:41:14,497 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 13:41:14,512 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 13:41:14,512 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 13:41:14,512 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 13:41:14,512 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 13:41:14,512 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 13:41:14,512 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 13:41:14,512 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 13:41:14,512 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 13:41:14,512 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 13:41:14,512 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 13:41:14,512 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 13:41:14,512 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 13:41:14,512 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 13:41:14,512 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 13:41:14,512 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 13:41:14,512 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2017-11-09 13:41:18,823 [8    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 55
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 55
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 13:41:23,932 [8    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 55
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 55
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2017-11-09 13:41:28,306 [35   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 13:41:28,307 [35   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:41:28,307 [35   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:41:28,307 [35   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 13:41:36,176 [85   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 13:41:36,186 [85   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 13:41:36,192 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,193 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,193 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,193 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,193 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,193 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,194 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,194 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,194 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,194 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,194 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,194 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,194 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,194 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,195 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,195 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,195 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,195 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,195 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,195 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,195 [85   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:36,198 [85   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 13:41:36,337 [85   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:41:36,337 [85   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:41:36,337 [85   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:41:36,337 [85   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:41:36,617 [85   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:41:37,567 [85   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 13:41:37,571 [85   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 13:41:37,572 [85   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 13:41:37,578 [85   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 13:41:37,587 [85   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 13:41:37,621 [85   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:41:38,082 [85   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 13:41:38,163 [85   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 13:41:38,417 [85   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:41:38,433 [85   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:41:38,448 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 13:41:38,448 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 13:41:38,448 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 13:41:38,448 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 13:41:38,448 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 13:41:38,448 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 13:41:38,448 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 13:41:38,448 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 13:41:38,448 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 13:41:38,448 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 13:41:38,448 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 13:41:38,448 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 13:41:38,448 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 13:41:38,448 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 13:41:38,448 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 13:41:38,448 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 13:41:38,464 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 13:41:38,464 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 13:41:38,464 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 13:41:38,464 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 13:41:38,464 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 13:41:38,464 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 13:41:38,464 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 13:41:38,464 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 13:41:38,464 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 13:41:38,464 [85   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 13:41:40,740 [31   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"dfdb26cb-3f58-451c-bbba-c73849909476","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:41:40.7311934Z","Properties":{}}
DEBUG 2017-11-09 13:48:06,877 [11   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 13:48:06,877 [11   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:48:06,878 [11   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:48:06,878 [11   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 13:48:14,859 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:14,875 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 13:48:14,968 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:48:14,968 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:48:14,968 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:48:14,968 [1    ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:48:15,234 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:48:16,036 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 13:48:16,036 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 13:48:16,036 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 13:48:16,036 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 13:48:16,052 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 13:48:16,083 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:48:16,526 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 13:48:16,620 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 13:48:16,869 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:48:16,885 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 13:48:16,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 13:48:16,916 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 13:48:16,916 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 13:48:16,916 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 13:48:16,916 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 13:48:16,916 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 13:48:17,997 [33   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"dfdb26cb-3f58-451c-bbba-c73849909476","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:48:17.8959955Z","Properties":{}}
DEBUG 2017-11-09 13:48:17,997 [30   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"dfdb26cb-3f58-451c-bbba-c73849909476","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:48:17.8959955Z","Properties":{}}
DEBUG 2017-11-09 13:48:20,037 [38   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"dfdb26cb-3f58-451c-bbba-c73849909476","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:48:17.8959955Z","Properties":{}}
DEBUG 2017-11-09 13:50:57,995 [46   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 13:50:57,996 [46   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:50:57,997 [46   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:50:57,997 [46   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 13:51:03,126 [14   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 13:51:03,137 [14   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 13:51:03,143 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,144 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,144 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,144 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,144 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,145 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,145 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,145 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,145 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,145 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,146 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,146 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,146 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,146 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,146 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,146 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,146 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,146 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,146 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,147 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,147 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:03,149 [14   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 13:51:03,292 [14   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:51:03,292 [14   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:51:03,292 [14   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:51:03,292 [14   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 13:51:03,577 [14   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 13:51:04,574 [14   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 13:51:04,579 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 13:51:04,580 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 13:51:04,586 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 13:51:04,595 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 13:51:04,631 [14   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 13:51:05,092 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:51:05,178 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 13:51:05,178 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 13:51:05,180 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 13:51:05,180 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 13:51:05,180 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 13:51:05,180 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 13:51:05,180 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 13:51:05,181 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 13:51:05,182 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 13:51:05,182 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 13:51:05,182 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 13:51:05,182 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 13:51:05,182 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 13:51:05,182 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 13:51:05,182 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 13:51:05,182 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 13:51:05,182 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 13:51:05,182 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 13:51:05,444 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:51:05,456 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 13:51:05,464 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 13:51:05,464 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 13:51:05,465 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 13:51:05,466 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 13:51:05,467 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 13:51:05,468 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 13:51:05,468 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 13:51:05,469 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 13:51:05,470 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 13:51:05,471 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 13:51:05,471 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 13:51:05,472 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 13:51:05,473 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 13:51:05,474 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 13:51:05,474 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 13:51:05,475 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 13:51:05,476 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 13:51:05,476 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 13:51:05,477 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 13:51:05,478 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 13:51:05,479 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 13:51:05,479 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 13:51:05,480 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 13:51:05,481 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 13:51:05,482 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 13:51:05,482 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 13:51:08,049 [12   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"dfdb26cb-3f58-451c-bbba-c73849909476","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:51:07.8713965Z","Properties":{}}
DEBUG 2017-11-09 13:51:08,050 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"dfdb26cb-3f58-451c-bbba-c73849909476","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:51:07.8713965Z","Properties":{}}
DEBUG 2017-11-09 13:51:10,072 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"dfdb26cb-3f58-451c-bbba-c73849909476","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:51:07.8713965Z","Properties":{}}
DEBUG 2017-11-09 13:51:12,648 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: dfdb26cb-3f58-451c-bbba-c73849909476
DEBUG 2017-11-09 13:51:13,976 [74   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"687e24bb-0dc1-441a-a26f-e952892dc141","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:51:13.9763965Z","Properties":{}}
DEBUG 2017-11-09 13:51:14,010 [71   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 687e24bb-0dc1-441a-a26f-e952892dc141
DEBUG 2017-11-09 13:51:19,816 [12   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 687e24bb-0dc1-441a-a26f-e952892dc141
DEBUG 2017-11-09 13:51:20,791 [74   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"fa53ac2f-cce0-40f5-a684-3f9d7df26ba2","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:51:20.7913965Z","Properties":{}}
DEBUG 2017-11-09 13:51:20,797 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: fa53ac2f-cce0-40f5-a684-3f9d7df26ba2
DEBUG 2017-11-09 13:51:33,141 [66   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: fa53ac2f-cce0-40f5-a684-3f9d7df26ba2
DEBUG 2017-11-09 13:51:34,199 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"e7e381c4-3967-4970-b353-2aa1192fa6ef","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:51:34.1993965Z","Properties":{}}
DEBUG 2017-11-09 13:51:34,207 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: e7e381c4-3967-4970-b353-2aa1192fa6ef
DEBUG 2017-11-09 13:56:02,516 [31   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: e7e381c4-3967-4970-b353-2aa1192fa6ef
DEBUG 2017-11-09 13:56:03,386 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"1bfd0148-b8e8-4e55-8d42-d0f78feacd04","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:56:03.3868975Z","Properties":{}}
DEBUG 2017-11-09 13:56:03,394 [23   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 1bfd0148-b8e8-4e55-8d42-d0f78feacd04
DEBUG 2017-11-09 13:56:07,091 [35   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 1bfd0148-b8e8-4e55-8d42-d0f78feacd04
DEBUG 2017-11-09 13:56:07,573 [8    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"1250a70e-6305-434e-86bc-ad9e50082949","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T05:56:07.5732975Z","Properties":{}}
DEBUG 2017-11-09 13:56:07,580 [33   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 1250a70e-6305-434e-86bc-ad9e50082949
DEBUG 2017-11-09 14:03:07,676 [56   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 14:03:07,677 [56   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:03:07,677 [56   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:03:07,677 [56   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 14:03:12,564 [14   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,579 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:12,595 [14   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 14:03:12,673 [14   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:03:12,673 [14   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:03:12,673 [14   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:03:12,673 [14   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:03:12,957 [14   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:03:13,770 [14   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 14:03:13,770 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 14:03:13,770 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 14:03:13,770 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 14:03:13,786 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 14:03:13,826 [14   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:03:14,302 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 14:03:14,382 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 14:03:14,663 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:03:14,679 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:03:14,694 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 14:03:14,694 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 14:03:14,694 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 14:03:14,694 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 14:03:14,694 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 14:03:14,694 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 14:03:14,694 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 14:03:14,694 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 14:03:14,694 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 14:03:14,694 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 14:03:14,694 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 14:03:14,694 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 14:03:14,710 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 14:03:14,710 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 14:03:14,710 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 14:03:14,710 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 14:03:14,710 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 14:03:14,710 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 14:03:14,710 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 14:03:14,710 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 14:03:14,710 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 14:03:14,710 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 14:03:14,710 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 14:03:14,710 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 14:03:14,710 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 14:03:14,710 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 14:03:16,116 [47   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"1250a70e-6305-434e-86bc-ad9e50082949","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:03:16.0232999Z","Properties":{}}
DEBUG 2017-11-09 14:03:16,116 [58   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"1250a70e-6305-434e-86bc-ad9e50082949","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:03:16.0232999Z","Properties":{}}
DEBUG 2017-11-09 14:03:18,147 [81   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"1250a70e-6305-434e-86bc-ad9e50082949","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:03:16.0232999Z","Properties":{}}
DEBUG 2017-11-09 14:03:30,931 [47   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 1250a70e-6305-434e-86bc-ad9e50082949
DEBUG 2017-11-09 14:03:32,463 [53   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"48c6d990-aaca-45d4-ac98-5c43c9d8f363","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:03:32.4638999Z","Properties":{}}
DEBUG 2017-11-09 14:03:32,493 [47   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 48c6d990-aaca-45d4-ac98-5c43c9d8f363
DEBUG 2017-11-09 14:03:36,694 [31   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 48c6d990-aaca-45d4-ac98-5c43c9d8f363
DEBUG 2017-11-09 14:03:37,653 [53   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"edceaff9-c947-4a45-bd3f-93e56a489235","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:03:37.6530999Z","Properties":{}}
DEBUG 2017-11-09 14:03:37,661 [58   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: edceaff9-c947-4a45-bd3f-93e56a489235
DEBUG 2017-11-09 14:03:39,301 [47   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: edceaff9-c947-4a45-bd3f-93e56a489235
DEBUG 2017-11-09 14:03:40,062 [53   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"7db3cb37-19ca-4460-ab53-b9fdf4fc4aa8","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:03:40.0622999Z","Properties":{}}
DEBUG 2017-11-09 14:03:40,075 [12   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 7db3cb37-19ca-4460-ab53-b9fdf4fc4aa8
DEBUG 2017-11-09 14:03:42,067 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 7db3cb37-19ca-4460-ab53-b9fdf4fc4aa8
DEBUG 2017-11-09 14:03:46,268 [47   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"093abb0f-7a64-48d6-9e53-a4b091d2f3e0","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:03:46.2689Z","Properties":{}}
DEBUG 2017-11-09 14:03:46,274 [81   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 093abb0f-7a64-48d6-9e53-a4b091d2f3e0
DEBUG 2017-11-09 14:04:13,114 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 093abb0f-7a64-48d6-9e53-a4b091d2f3e0
DEBUG 2017-11-09 14:04:13,770 [81   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"20d7639d-32ef-4a16-9e2e-eba68d5a15e0","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:04:13.7703001Z","Properties":{}}
DEBUG 2017-11-09 14:04:13,778 [81   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 20d7639d-32ef-4a16-9e2e-eba68d5a15e0
DEBUG 2017-11-09 14:04:25,288 [66   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 20d7639d-32ef-4a16-9e2e-eba68d5a15e0
DEBUG 2017-11-09 14:04:26,097 [66   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"1d5951b5-fc4e-462a-b037-77f3653d1775","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:04:26.0971001Z","Properties":{}}
DEBUG 2017-11-09 14:04:26,105 [66   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 1d5951b5-fc4e-462a-b037-77f3653d1775
DEBUG 2017-11-09 14:04:37,491 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 1d5951b5-fc4e-462a-b037-77f3653d1775
DEBUG 2017-11-09 14:04:38,167 [47   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"16f4a429-e3ca-4fa2-a8ed-a95a010e992f","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:04:38.1677002Z","Properties":{}}
DEBUG 2017-11-09 14:04:38,176 [81   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 16f4a429-e3ca-4fa2-a8ed-a95a010e992f
DEBUG 2017-11-09 14:04:41,716 [81   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 16f4a429-e3ca-4fa2-a8ed-a95a010e992f
DEBUG 2017-11-09 14:04:42,444 [58   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"043e0a11-ac0c-428a-85ee-5e34f3ee771a","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:04:42.4445002Z","Properties":{}}
DEBUG 2017-11-09 14:04:42,451 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 043e0a11-ac0c-428a-85ee-5e34f3ee771a
DEBUG 2017-11-09 14:05:08,952 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 043e0a11-ac0c-428a-85ee-5e34f3ee771a
DEBUG 2017-11-09 14:05:09,633 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"d38e6245-cd66-41ee-bc28-9c4b91c175b4","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:05:09.6337003Z","Properties":{}}
DEBUG 2017-11-09 14:05:09,641 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: d38e6245-cd66-41ee-bc28-9c4b91c175b4
DEBUG 2017-11-09 14:06:28,436 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: d38e6245-cd66-41ee-bc28-9c4b91c175b4
DEBUG 2017-11-09 14:06:29,533 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"c2a3d8d7-2854-4a03-bad3-59c3cbe55964","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:06:29.5337005Z","Properties":{}}
DEBUG 2017-11-09 14:06:29,542 [12   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: c2a3d8d7-2854-4a03-bad3-59c3cbe55964
DEBUG 2017-11-09 14:06:35,882 [35   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: c2a3d8d7-2854-4a03-bad3-59c3cbe55964
DEBUG 2017-11-09 14:06:38,478 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"27e82fd1-9c0d-44d1-8463-cc220c79d7ca","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:06:38.4785005Z","Properties":{}}
DEBUG 2017-11-09 14:06:38,503 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 27e82fd1-9c0d-44d1-8463-cc220c79d7ca
DEBUG 2017-11-09 14:07:41,147 [24   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 14:07:41,148 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:07:41,149 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:07:41,149 [24   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 14:07:43,937 [50   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 14:07:43,952 [50   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 14:07:43,952 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,952 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,952 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,952 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,952 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,952 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,952 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,952 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,952 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,952 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,952 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,968 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,968 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,968 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,968 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,968 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,968 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,968 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,968 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,968 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,968 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:43,968 [50   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 14:07:44,093 [50   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:07:44,093 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:07:44,093 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:07:44,093 [50   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:07:44,390 [50   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:07:44,889 [50   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 14:07:44,889 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 14:07:44,889 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 14:07:44,905 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 14:07:44,905 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 14:07:44,936 [50   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:07:45,453 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:07:45,531 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 14:07:45,531 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 14:07:45,546 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 14:07:45,796 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:07:45,811 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 14:07:45,827 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 14:07:45,843 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 14:07:45,843 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 14:07:45,843 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 14:07:45,843 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 14:07:45,843 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 14:07:45,843 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 14:07:45,843 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 14:07:48,672 [23   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"27e82fd1-9c0d-44d1-8463-cc220c79d7ca","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:07:48.4697008Z","Properties":{}}
DEBUG 2017-11-09 14:07:48,672 [77   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"27e82fd1-9c0d-44d1-8463-cc220c79d7ca","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:07:48.4697008Z","Properties":{}}
DEBUG 2017-11-09 14:07:50,719 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"27e82fd1-9c0d-44d1-8463-cc220c79d7ca","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:07:48.4697008Z","Properties":{}}
DEBUG 2017-11-09 14:08:34,644 [24   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 14:08:34,644 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:08:34,645 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:08:34,645 [24   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 14:08:37,101 [50   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,117 [50   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 14:08:37,242 [50   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:08:37,242 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:08:37,242 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:08:37,242 [50   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:08:37,509 [50   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:08:37,852 [50   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 14:08:37,868 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 14:08:37,868 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 14:08:37,868 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 14:08:37,868 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 14:08:37,899 [50   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:08:38,464 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 14:08:38,558 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 14:08:38,761 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:08:38,761 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 14:08:38,776 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 14:08:38,792 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 14:08:38,792 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 14:08:38,792 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 14:08:38,792 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 14:08:38,792 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 14:08:38,792 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 14:08:38,792 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 14:08:38,792 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 14:08:40,575 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"27e82fd1-9c0d-44d1-8463-cc220c79d7ca","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:08:40.4969011Z","Properties":{}}
DEBUG 2017-11-09 14:14:27,501 [77   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 14:14:27,501 [77   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:14:27,501 [77   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:14:27,501 [77   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 14:14:30,079 [76   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 14:14:30,090 [76   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 14:14:30,095 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,096 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,096 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,097 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,097 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,097 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,097 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,097 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,097 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,097 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,098 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,098 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,098 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,098 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,098 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,098 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,098 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,099 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,099 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,099 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,099 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,101 [76   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 14:14:30,194 [76   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:14:30,194 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:14:30,194 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:14:30,194 [76   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:14:30,476 [76   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:14:30,988 [76   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 14:14:30,993 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 14:14:30,994 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 14:14:30,998 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 14:14:31,008 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 14:14:31,044 [76   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:14:31,519 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:14:31,612 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 14:14:31,612 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 14:14:31,615 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 14:14:31,616 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 14:14:31,617 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 14:14:31,925 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:14:31,938 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:14:31,945 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 14:14:31,946 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 14:14:31,947 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 14:14:31,948 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 14:14:31,949 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 14:14:31,949 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 14:14:31,950 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 14:14:31,951 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 14:14:31,952 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 14:14:31,952 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 14:14:31,953 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 14:14:31,954 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 14:14:31,955 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 14:14:31,955 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 14:14:31,956 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 14:14:31,957 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 14:14:31,958 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 14:14:31,958 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 14:14:31,959 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 14:14:31,960 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 14:14:31,961 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 14:14:31,962 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 14:14:31,962 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 14:14:31,963 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 14:14:31,964 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 14:14:31,965 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 14:14:33,315 [31   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"27e82fd1-9c0d-44d1-8463-cc220c79d7ca","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:14:33.1939027Z","Properties":{}}
DEBUG 2017-11-09 14:17:12,848 [47   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 14:17:12,848 [47   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:17:12,849 [47   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:17:12,849 [47   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 14:17:16,066 [50   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 14:17:16,076 [50   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 14:17:16,082 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,083 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,083 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,083 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,083 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,084 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,084 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,084 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,084 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,084 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,085 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,085 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,085 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,085 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,085 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,085 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,085 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,085 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,086 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,086 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,086 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:16,088 [50   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 14:17:16,264 [50   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:17:16,264 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:17:16,264 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:17:16,264 [50   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:17:16,682 [50   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:17,247 [50   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 14:17:17,251 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 14:17:17,252 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 14:17:17,258 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 14:17:17,267 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 14:17:17,302 [50   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:17:17,766 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:17:17,855 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 14:17:17,856 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 14:17:17,858 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 14:17:17,859 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 14:17:17,860 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 14:17:17,860 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 14:17:17,860 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 14:17:17,860 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 14:17:17,860 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 14:17:17,860 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 14:17:17,860 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 14:17:17,860 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 14:17:17,860 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 14:17:17,860 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 14:17:17,860 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 14:17:17,860 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 14:17:17,860 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:17:17,860 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:17:17,860 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 14:17:17,860 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 14:17:18,121 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:17:18,133 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:17:18,140 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 14:17:18,141 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 14:17:18,142 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 14:17:18,143 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 14:17:18,143 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 14:17:18,144 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 14:17:18,145 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 14:17:18,146 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 14:17:18,146 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 14:17:18,147 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 14:17:18,148 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 14:17:18,149 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 14:17:18,150 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 14:17:18,150 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 14:17:18,151 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 14:17:18,152 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 14:17:18,153 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 14:17:18,154 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 14:17:18,154 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 14:17:18,155 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 14:17:18,156 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 14:17:18,157 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 14:17:18,157 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 14:17:18,158 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 14:17:18,159 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 14:17:18,160 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 14:17:21,321 [79   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"27e82fd1-9c0d-44d1-8463-cc220c79d7ca","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:17:21.1695034Z","Properties":{}}
DEBUG 2017-11-09 14:17:31,472 [58   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 14:17:31,473 [58   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:17:31,474 [58   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:17:31,474 [58   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 14:17:36,431 [76   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 14:17:36,442 [76   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 14:17:36,448 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,449 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,449 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,449 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,449 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,449 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,450 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,450 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,450 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,450 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,450 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,450 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,450 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,450 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,451 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,451 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,451 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,451 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,451 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,451 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,451 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:36,453 [76   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 14:17:36,548 [76   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:17:36,548 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:17:36,548 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:17:36,548 [76   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:17:36,831 [76   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:17:37,671 [76   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 14:17:37,676 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 14:17:37,676 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 14:17:37,681 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 14:17:37,690 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 14:17:37,726 [76   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:17:38,237 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:17:38,327 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 14:17:38,328 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 14:17:38,330 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 14:17:38,331 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 14:17:38,332 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 14:17:38,603 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:17:38,616 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:17:38,624 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 14:17:38,625 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 14:17:38,625 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 14:17:38,626 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 14:17:38,627 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 14:17:38,628 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 14:17:38,628 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 14:17:38,629 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 14:17:38,630 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 14:17:38,631 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 14:17:38,632 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 14:17:38,633 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 14:17:38,634 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 14:17:38,634 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 14:17:38,635 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 14:17:38,636 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 14:17:38,637 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 14:17:38,637 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 14:17:38,638 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 14:17:38,639 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 14:17:38,640 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 14:17:38,640 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 14:17:38,641 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 14:17:38,642 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 14:17:38,643 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 14:17:38,644 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 14:17:39,953 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"27e82fd1-9c0d-44d1-8463-cc220c79d7ca","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:17:39.7725034Z","Properties":{}}
DEBUG 2017-11-09 14:17:39,966 [47   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"27e82fd1-9c0d-44d1-8463-cc220c79d7ca","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:17:39.7725034Z","Properties":{}}
DEBUG 2017-11-09 14:17:41,994 [31   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"27e82fd1-9c0d-44d1-8463-cc220c79d7ca","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:17:39.7725034Z","Properties":{}}
DEBUG 2017-11-09 14:17:44,986 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 27e82fd1-9c0d-44d1-8463-cc220c79d7ca
DEBUG 2017-11-09 14:17:46,218 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"c0d8db7c-f9d8-48cd-8345-b49e60f79550","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:17:46.2185034Z","Properties":{}}
DEBUG 2017-11-09 14:17:46,251 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: c0d8db7c-f9d8-48cd-8345-b49e60f79550
DEBUG 2017-11-09 14:17:48,928 [77   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: c0d8db7c-f9d8-48cd-8345-b49e60f79550
DEBUG 2017-11-09 14:17:52,823 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"de7268cb-b04d-441a-9675-7b38eed4c869","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:17:52.8235034Z","Properties":{}}
DEBUG 2017-11-09 14:17:52,830 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: de7268cb-b04d-441a-9675-7b38eed4c869
DEBUG 2017-11-09 14:18:18,360 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: de7268cb-b04d-441a-9675-7b38eed4c869
DEBUG 2017-11-09 14:18:58,019 [24   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 14:18:58,019 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:18:58,019 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:18:58,019 [24   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 14:19:05,463 [64   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 14:19:05,473 [64   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 14:19:05,479 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,480 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,480 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,480 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,480 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,480 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,481 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,481 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,481 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,481 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,481 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,481 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,481 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,481 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,482 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,482 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,482 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,482 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,482 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,482 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,482 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:05,485 [64   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 14:19:05,626 [64   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:19:05,626 [64   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:19:05,626 [64   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:19:05,626 [64   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:19:05,933 [64   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:19:06,883 [64   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 14:19:06,888 [64   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 14:19:06,889 [64   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 14:19:06,895 [64   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 14:19:06,905 [64   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 14:19:06,941 [64   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:19:07,400 [64   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:19:07,487 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 14:19:07,487 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 14:19:07,489 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 14:19:07,489 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 14:19:07,489 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 14:19:07,489 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 14:19:07,489 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 14:19:07,489 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 14:19:07,489 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 14:19:07,489 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 14:19:07,489 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 14:19:07,489 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 14:19:07,489 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 14:19:07,490 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 14:19:07,491 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 14:19:07,491 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 14:19:07,491 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:19:07,491 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:19:07,491 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 14:19:07,491 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 14:19:07,778 [64   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:19:07,790 [64   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:19:07,798 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 14:19:07,799 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 14:19:07,799 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 14:19:07,800 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 14:19:07,801 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 14:19:07,802 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 14:19:07,802 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 14:19:07,803 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 14:19:07,804 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 14:19:07,805 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 14:19:07,805 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 14:19:07,806 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 14:19:07,807 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 14:19:07,808 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 14:19:07,809 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 14:19:07,809 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 14:19:07,810 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 14:19:07,811 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 14:19:07,812 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 14:19:07,813 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 14:19:07,813 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 14:19:07,814 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 14:19:07,815 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 14:19:07,816 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 14:19:07,816 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 14:19:07,817 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 14:19:16,662 [27   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"da804015-34c0-4a38-baf9-505ca994c621","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:19:16.6609035Z","Properties":{}}
DEBUG 2017-11-09 14:19:16,730 [31   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: da804015-34c0-4a38-baf9-505ca994c621
ERROR 2017-11-09 14:19:18,101 [27   ] Abp.Logging.LogHelper                    - Can not find file for: ~/Areas/Mpa/Views/Product/Index.js! System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioningForEmbeddedFile(String path)
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioning(String path)
DEBUG 2017-11-09 14:19:18,116 [46   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: da804015-34c0-4a38-baf9-505ca994c621
DEBUG 2017-11-09 14:19:18,526 [31   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"5d94d662-dd1f-4bec-8e5b-84daefe9c6e6","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:19:18.5263035Z","Properties":{}}
DEBUG 2017-11-09 14:19:18,533 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 5d94d662-dd1f-4bec-8e5b-84daefe9c6e6
DEBUG 2017-11-09 14:20:19,551 [31   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 14:20:19,552 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:20:19,553 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:20:19,553 [31   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 14:20:24,209 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 14:20:24,219 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 14:20:24,225 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,226 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,226 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,226 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,227 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,227 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,227 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,227 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,227 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,227 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,227 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,227 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,228 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,228 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,228 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,228 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,228 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,228 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,228 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,228 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,228 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:24,231 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 14:20:24,321 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:20:24,321 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:20:24,321 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:20:24,321 [1    ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:20:24,596 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:20:25,412 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 14:20:25,417 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 14:20:25,418 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 14:20:25,422 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 14:20:25,432 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 14:20:25,467 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:20:25,927 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:20:26,013 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 14:20:26,013 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 14:20:26,016 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 14:20:26,017 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 14:20:26,295 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:20:26,308 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:20:26,316 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 14:20:26,317 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 14:20:26,318 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 14:20:26,319 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 14:20:26,320 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 14:20:26,320 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 14:20:26,321 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 14:20:26,322 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 14:20:26,323 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 14:20:26,325 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 14:20:26,325 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 14:20:26,326 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 14:20:26,327 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 14:20:26,328 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 14:20:26,329 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 14:20:26,329 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 14:20:26,330 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 14:20:26,331 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 14:20:26,332 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 14:20:26,333 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 14:20:26,333 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 14:20:26,334 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 14:20:26,335 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 14:20:26,336 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 14:20:26,336 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 14:20:26,337 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 14:20:28,240 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"5d94d662-dd1f-4bec-8e5b-84daefe9c6e6","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:20:27.3843038Z","Properties":{}}
DEBUG 2017-11-09 14:20:28,242 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"5d94d662-dd1f-4bec-8e5b-84daefe9c6e6","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:20:27.3843038Z","Properties":{}}
DEBUG 2017-11-09 14:20:30,265 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"5d94d662-dd1f-4bec-8e5b-84daefe9c6e6","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:20:27.3843038Z","Properties":{}}
ERROR 2017-11-09 14:20:31,916 [66   ] Abp.Logging.LogHelper                    - Can not find file for: ~/Areas/Mpa/Views/Product/Index.js! System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioningForEmbeddedFile(String path)
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioning(String path)
DEBUG 2017-11-09 14:20:31,947 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 5d94d662-dd1f-4bec-8e5b-84daefe9c6e6
DEBUG 2017-11-09 14:20:32,898 [66   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"c88a1535-e352-4c0c-a9e1-46341d160649","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:20:32.8983038Z","Properties":{}}
DEBUG 2017-11-09 14:20:32,956 [46   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: c88a1535-e352-4c0c-a9e1-46341d160649
DEBUG 2017-11-09 14:20:34,432 [31   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: c88a1535-e352-4c0c-a9e1-46341d160649
DEBUG 2017-11-09 14:20:35,139 [30   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f7465588-97fa-48e4-8f67-f4b6ebc461f8","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:20:35.1391038Z","Properties":{}}
DEBUG 2017-11-09 14:20:35,146 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: f7465588-97fa-48e4-8f67-f4b6ebc461f8
DEBUG 2017-11-09 14:24:21,571 [33   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: f7465588-97fa-48e4-8f67-f4b6ebc461f8
DEBUG 2017-11-09 14:24:22,456 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"3af2c5b8-0aea-44b2-b775-8b63cecb1451","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:24:22.456705Z","Properties":{}}
DEBUG 2017-11-09 14:24:22,464 [56   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 3af2c5b8-0aea-44b2-b775-8b63cecb1451
DEBUG 2017-11-09 14:28:13,545 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 3af2c5b8-0aea-44b2-b775-8b63cecb1451
DEBUG 2017-11-09 14:28:14,656 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"48bfc580-ed34-4992-98d9-14bd6d857346","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:28:14.6561063Z","Properties":{}}
DEBUG 2017-11-09 14:28:14,666 [33   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 48bfc580-ed34-4992-98d9-14bd6d857346
DEBUG 2017-11-09 14:28:18,414 [31   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 48bfc580-ed34-4992-98d9-14bd6d857346
DEBUG 2017-11-09 14:28:18,862 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"d451fdae-e698-405e-afb3-15ddfe4427ab","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:28:18.8623063Z","Properties":{}}
DEBUG 2017-11-09 14:28:18,871 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: d451fdae-e698-405e-afb3-15ddfe4427ab
DEBUG 2017-11-09 14:28:36,100 [57   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 14:28:36,101 [57   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:28:36,101 [57   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:28:36,101 [57   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 14:28:40,520 [64   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 14:28:40,531 [64   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 14:28:40,537 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,538 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,539 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,539 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,539 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,539 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,539 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,539 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,539 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,540 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,540 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,540 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,540 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,540 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,540 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,541 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,541 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,541 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,541 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,541 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,541 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:40,543 [64   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 14:28:40,688 [64   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:28:40,688 [64   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:28:40,688 [64   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:28:40,688 [64   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:28:40,980 [64   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:28:41,936 [64   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 14:28:41,941 [64   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 14:28:41,941 [64   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 14:28:41,947 [64   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 14:28:41,957 [64   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 14:28:41,991 [64   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:28:42,449 [64   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:28:42,536 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 14:28:42,536 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 14:28:42,538 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 14:28:42,539 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 14:28:42,540 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 14:28:42,801 [64   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:28:42,814 [64   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:28:42,822 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 14:28:42,823 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 14:28:42,823 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 14:28:42,824 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 14:28:42,825 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 14:28:42,826 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 14:28:42,826 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 14:28:42,827 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 14:28:42,828 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 14:28:42,828 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 14:28:42,829 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 14:28:42,830 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 14:28:42,831 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 14:28:42,831 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 14:28:42,832 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 14:28:42,833 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 14:28:42,834 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 14:28:42,835 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 14:28:42,836 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 14:28:42,837 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 14:28:42,837 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 14:28:42,838 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 14:28:42,839 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 14:28:42,840 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 14:28:42,840 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 14:28:42,841 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 14:28:45,640 [31   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"d451fdae-e698-405e-afb3-15ddfe4427ab","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:28:45.5041063Z","Properties":{}}
DEBUG 2017-11-09 14:28:45,641 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"d451fdae-e698-405e-afb3-15ddfe4427ab","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:28:45.5041063Z","Properties":{}}
DEBUG 2017-11-09 14:28:47,662 [54   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"d451fdae-e698-405e-afb3-15ddfe4427ab","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:28:45.5041063Z","Properties":{}}
DEBUG 2017-11-09 14:28:50,493 [77   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: d451fdae-e698-405e-afb3-15ddfe4427ab
DEBUG 2017-11-09 14:28:51,518 [23   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"9247c9a0-b992-4ebb-89dd-95c7e31282fb","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:28:51.5181063Z","Properties":{}}
DEBUG 2017-11-09 14:28:51,546 [33   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 9247c9a0-b992-4ebb-89dd-95c7e31282fb
DEBUG 2017-11-09 14:29:39,873 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 9247c9a0-b992-4ebb-89dd-95c7e31282fb
DEBUG 2017-11-09 14:29:40,743 [23   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"8850213c-1677-42e6-88af-2e27b1b8702c","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:29:40.7431063Z","Properties":{}}
DEBUG 2017-11-09 14:29:40,754 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 8850213c-1677-42e6-88af-2e27b1b8702c
ERROR 2017-11-09 14:32:48,052 [27   ] nHandling.AbpApiExceptionFilterAttribute - No property or field 'actions' exists in type 'Banner'
No property or field 'actions' exists in type 'Banner' (at index 0)
DEBUG 2017-11-09 14:32:58,814 [33   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 8850213c-1677-42e6-88af-2e27b1b8702c
DEBUG 2017-11-09 14:32:59,591 [77   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"3864b6af-38df-4a0f-a6d8-9dee0b8675dc","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:32:59.5917072Z","Properties":{}}
DEBUG 2017-11-09 14:32:59,598 [23   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 3864b6af-38df-4a0f-a6d8-9dee0b8675dc
ERROR 2017-11-09 14:33:01,104 [54   ] nHandling.AbpApiExceptionFilterAttribute - No property or field 'actions' exists in type 'User'
No property or field 'actions' exists in type 'User' (at index 0)
ERROR 2017-11-09 14:33:05,640 [31   ] nHandling.AbpApiExceptionFilterAttribute - No property or field 'actions' exists in type 'User'
No property or field 'actions' exists in type 'User' (at index 0)
ERROR 2017-11-09 14:33:09,166 [33   ] nHandling.AbpApiExceptionFilterAttribute - No property or field 'actions' exists in type 'User'
No property or field 'actions' exists in type 'User' (at index 0)
DEBUG 2017-11-09 14:33:32,206 [27   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 3864b6af-38df-4a0f-a6d8-9dee0b8675dc
DEBUG 2017-11-09 14:33:32,863 [57   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"7b330fc6-2103-4012-9b44-de65978fdca7","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:33:32.8639073Z","Properties":{}}
DEBUG 2017-11-09 14:33:32,874 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 7b330fc6-2103-4012-9b44-de65978fdca7
ERROR 2017-11-09 14:34:47,636 [57   ] Abp.Logging.LogHelper                    - Can not find file for: ~/Areas/Mpa/Views/Product/Index.js! System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioningForEmbeddedFile(String path)
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioning(String path)
DEBUG 2017-11-09 14:34:47,648 [27   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 7b330fc6-2103-4012-9b44-de65978fdca7
DEBUG 2017-11-09 14:34:48,483 [49   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f9a0349c-8ffa-4715-84f3-44e6c14343f1","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:34:48.4831075Z","Properties":{}}
DEBUG 2017-11-09 14:34:48,491 [31   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: f9a0349c-8ffa-4715-84f3-44e6c14343f1
DEBUG 2017-11-09 14:35:26,623 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: f9a0349c-8ffa-4715-84f3-44e6c14343f1
DEBUG 2017-11-09 14:35:27,338 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"5e967ae3-cf38-4c03-a451-fbd3411a3298","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:35:27.3387077Z","Properties":{}}
DEBUG 2017-11-09 14:35:27,345 [27   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 5e967ae3-cf38-4c03-a451-fbd3411a3298
DEBUG 2017-11-09 14:36:11,756 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 5e967ae3-cf38-4c03-a451-fbd3411a3298
DEBUG 2017-11-09 14:36:12,590 [77   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"b5b32e90-cfff-4c0a-a18a-e865f9d6fccb","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:36:12.5901078Z","Properties":{}}
DEBUG 2017-11-09 14:36:12,598 [33   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: b5b32e90-cfff-4c0a-a18a-e865f9d6fccb
DEBUG 2017-11-09 14:37:05,136 [17   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 14:37:05,136 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:37:05,137 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:37:05,137 [17   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 14:37:07,596 [14   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 14:37:07,607 [14   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 14:37:07,612 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,614 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,614 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,614 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,614 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,614 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,614 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,615 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,615 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,615 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,615 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,615 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,616 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,616 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,616 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,616 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,616 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,616 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,616 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,616 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,617 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:07,619 [14   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 14:37:07,711 [14   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:37:07,712 [14   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:37:07,712 [14   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:37:07,712 [14   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:37:07,979 [14   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:37:08,463 [14   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 14:37:08,480 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 14:37:08,481 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 14:37:08,485 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 14:37:08,495 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 14:37:08,530 [14   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:37:08,995 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:37:09,086 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2017-11-09 14:37:09,086 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 14:37:09,089 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 14:37:09,089 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 14:37:09,089 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 14:37:09,089 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 14:37:09,089 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 14:37:09,089 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 14:37:09,089 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 14:37:09,089 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 14:37:09,089 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 14:37:09,090 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 14:37:09,091 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 14:37:09,091 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 14:37:09,091 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 14:37:09,091 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:37:09,091 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:37:09,091 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 14:37:09,091 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 14:37:09,380 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:37:09,393 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:37:09,401 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 14:37:09,401 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 14:37:09,402 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 14:37:09,403 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 14:37:09,404 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 14:37:09,404 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 14:37:09,405 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 14:37:09,406 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 14:37:09,407 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 14:37:09,407 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 14:37:09,408 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 14:37:09,409 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 14:37:09,410 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 14:37:09,410 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 14:37:09,411 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 14:37:09,412 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 14:37:09,413 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 14:37:09,413 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 14:37:09,414 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 14:37:09,415 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 14:37:09,416 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 14:37:09,416 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 14:37:09,417 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 14:37:09,418 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 14:37:09,419 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 14:37:09,420 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 14:37:10,920 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"b5b32e90-cfff-4c0a-a18a-e865f9d6fccb","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:37:10.7873081Z","Properties":{}}
DEBUG 2017-11-09 14:52:47,178 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: b5b32e90-cfff-4c0a-a18a-e865f9d6fccb
DEBUG 2017-11-09 14:52:48,329 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"76a646c6-e2f4-4a81-8755-2a6952836771","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:52:48.329512Z","Properties":{}}
DEBUG 2017-11-09 14:52:48,381 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 76a646c6-e2f4-4a81-8755-2a6952836771
DEBUG 2017-11-09 14:52:49,926 [39   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 76a646c6-e2f4-4a81-8755-2a6952836771
DEBUG 2017-11-09 14:52:50,628 [78   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"8294e87d-ce6f-4c70-95b8-7e9477961218","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:52:50.628512Z","Properties":{}}
DEBUG 2017-11-09 14:52:50,635 [39   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 8294e87d-ce6f-4c70-95b8-7e9477961218
DEBUG 2017-11-09 14:53:45,853 [82   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 14:53:45,854 [82   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:53:45,855 [82   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:53:45,855 [82   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 14:53:51,289 [64   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 14:53:51,299 [64   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 14:53:51,304 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,306 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,306 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,306 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,306 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,306 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,306 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,306 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,307 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,307 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,307 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,307 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,307 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,307 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,307 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,307 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,308 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,308 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,308 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,308 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,308 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:51,310 [64   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 14:53:51,452 [64   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:53:51,452 [64   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:53:51,452 [64   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:53:51,452 [64   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:53:51,741 [64   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:53:52,682 [64   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 14:53:52,687 [64   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 14:53:52,688 [64   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 14:53:52,694 [64   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 14:53:52,704 [64   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 14:53:52,739 [64   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:53:53,201 [64   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:53:53,288 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 46 classes define auto mapping attributes
DEBUG 2017-11-09 14:53:53,288 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 14:53:53,290 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 14:53:53,291 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 14:53:53,292 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 14:53:53,564 [64   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:53:53,578 [64   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:53:53,585 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 14:53:53,586 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 14:53:53,587 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 14:53:53,588 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 14:53:53,589 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 14:53:53,590 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 14:53:53,590 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 14:53:53,591 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 14:53:53,592 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 14:53:53,593 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 14:53:53,593 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 14:53:53,594 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 14:53:53,595 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 14:53:53,596 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 14:53:53,597 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 14:53:53,597 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 14:53:53,598 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 14:53:53,599 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 14:53:53,600 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 14:53:53,601 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 14:53:53,601 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 14:53:53,602 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 14:53:53,603 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 14:53:53,604 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 14:53:53,605 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 14:53:53,605 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 14:53:53,606 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 14:53:56,172 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"8294e87d-ce6f-4c70-95b8-7e9477961218","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:53:56.0267123Z","Properties":{}}
DEBUG 2017-11-09 14:53:56,174 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"8294e87d-ce6f-4c70-95b8-7e9477961218","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:53:56.0267123Z","Properties":{}}
DEBUG 2017-11-09 14:53:58,192 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"8294e87d-ce6f-4c70-95b8-7e9477961218","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:53:56.0267123Z","Properties":{}}
DEBUG 2017-11-09 14:54:00,630 [51   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 8294e87d-ce6f-4c70-95b8-7e9477961218
DEBUG 2017-11-09 14:54:01,584 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"bcd56910-c383-4e91-923d-f428935f7e7d","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:54:01.5847123Z","Properties":{}}
DEBUG 2017-11-09 14:54:01,653 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: bcd56910-c383-4e91-923d-f428935f7e7d
DEBUG 2017-11-09 14:54:40,634 [18   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 14:54:40,637 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:54:40,638 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:54:40,638 [18   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 14:54:45,775 [64   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 14:54:45,786 [64   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 14:54:45,792 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,794 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,794 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,794 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,794 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,794 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,794 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,794 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,794 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,794 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,795 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,795 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,795 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,795 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,795 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,795 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,795 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,795 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,796 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,796 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,796 [64   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:45,798 [64   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 14:54:45,893 [64   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:54:45,893 [64   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:54:45,893 [64   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:54:45,893 [64   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:54:46,190 [64   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:54:47,008 [64   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 14:54:47,013 [64   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 14:54:47,014 [64   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 14:54:47,017 [64   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 14:54:47,027 [64   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 14:54:47,062 [64   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:54:47,560 [64   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:54:47,650 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 46 classes define auto mapping attributes
DEBUG 2017-11-09 14:54:47,650 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 14:54:47,652 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 14:54:47,652 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 14:54:47,652 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 14:54:47,652 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 14:54:47,653 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 14:54:47,654 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 14:54:47,654 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 14:54:47,654 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 14:54:47,654 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 14:54:47,654 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 14:54:47,654 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 14:54:47,654 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 14:54:47,654 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 14:54:47,654 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:54:47,654 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:54:47,654 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 14:54:47,654 [64   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 14:54:47,936 [64   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:54:47,949 [64   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:54:47,958 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 14:54:47,959 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 14:54:47,960 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 14:54:47,960 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 14:54:47,961 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 14:54:47,962 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 14:54:47,963 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 14:54:47,964 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 14:54:47,965 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 14:54:47,966 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 14:54:47,967 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 14:54:47,967 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 14:54:47,968 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 14:54:47,969 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 14:54:47,970 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 14:54:47,971 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 14:54:47,971 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 14:54:47,972 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 14:54:47,973 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 14:54:47,974 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 14:54:47,974 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 14:54:47,975 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 14:54:47,976 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 14:54:47,977 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 14:54:47,978 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 14:54:47,979 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 14:54:47,979 [64   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 14:54:49,076 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"bcd56910-c383-4e91-923d-f428935f7e7d","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:54:48.9567123Z","Properties":{}}
DEBUG 2017-11-09 14:54:49,078 [18   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"bcd56910-c383-4e91-923d-f428935f7e7d","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:54:48.9567123Z","Properties":{}}
DEBUG 2017-11-09 14:54:51,138 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"bcd56910-c383-4e91-923d-f428935f7e7d","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:54:48.9567123Z","Properties":{}}
DEBUG 2017-11-09 14:54:53,621 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: bcd56910-c383-4e91-923d-f428935f7e7d
DEBUG 2017-11-09 14:54:54,860 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"7d2bf056-7c1e-4b78-bd82-abd9275cbdd4","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:54:54.8607123Z","Properties":{}}
DEBUG 2017-11-09 14:54:54,892 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 7d2bf056-7c1e-4b78-bd82-abd9275cbdd4
ERROR 2017-11-09 14:54:56,643 [45   ] Abp.Logging.LogHelper                    - Can not find file for: ~/Areas/Mpa/Views/CompanyIntroduce/Index.min.css! System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioningForEmbeddedFile(String path)
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioning(String path)
DEBUG 2017-11-09 14:54:56,753 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 7d2bf056-7c1e-4b78-bd82-abd9275cbdd4
DEBUG 2017-11-09 14:54:57,274 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"d7802c2e-a1b4-4f43-a8fd-e26e9d624aca","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:54:57.2747123Z","Properties":{}}
DEBUG 2017-11-09 14:54:57,280 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: d7802c2e-a1b4-4f43-a8fd-e26e9d624aca
DEBUG 2017-11-09 14:56:24,800 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: d7802c2e-a1b4-4f43-a8fd-e26e9d624aca
DEBUG 2017-11-09 14:56:25,625 [37   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"9511a1b3-168e-4d0d-93e4-7c716749408a","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:56:25.6257123Z","Properties":{}}
DEBUG 2017-11-09 14:56:25,632 [51   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 9511a1b3-168e-4d0d-93e4-7c716749408a
DEBUG 2017-11-09 14:58:41,837 [78   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 14:58:41,837 [78   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:58:41,837 [78   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:58:41,837 [78   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 14:58:44,308 [14   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:44,324 [14   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 14:58:44,466 [14   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:58:44,466 [14   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:58:44,466 [14   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:58:44,466 [14   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:58:44,731 [14   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:45,246 [14   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 14:58:45,246 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 14:58:45,246 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 14:58:45,262 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 14:58:45,262 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 14:58:45,309 [14   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:58:45,779 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 46 classes define auto mapping attributes
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 14:58:45,872 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 14:58:45,888 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 14:58:45,888 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 14:58:45,888 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 14:58:45,888 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 14:58:45,888 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 14:58:45,888 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 14:58:45,888 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 14:58:45,888 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:58:45,888 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:58:45,888 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 14:58:45,888 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 14:58:46,215 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:58:46,215 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:58:46,231 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 14:58:46,231 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 14:58:46,231 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 14:58:46,231 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 14:58:46,231 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 14:58:46,231 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 14:58:46,231 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 14:58:46,231 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 14:58:46,231 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 14:58:46,231 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 14:58:46,231 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 14:58:46,231 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 14:58:46,231 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 14:58:46,231 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 14:58:46,247 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 14:58:46,247 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 14:58:46,247 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 14:58:46,247 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 14:58:46,247 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 14:58:46,247 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 14:58:46,247 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 14:58:46,247 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 14:58:46,247 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 14:58:46,247 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 14:58:46,247 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 14:58:46,247 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 14:58:46,247 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 14:58:49,207 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"9511a1b3-168e-4d0d-93e4-7c716749408a","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:58:49.0517128Z","Properties":{}}
DEBUG 2017-11-09 14:58:49,207 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"9511a1b3-168e-4d0d-93e4-7c716749408a","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:58:49.0517128Z","Properties":{}}
DEBUG 2017-11-09 14:58:51,236 [78   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"9511a1b3-168e-4d0d-93e4-7c716749408a","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:58:49.0517128Z","Properties":{}}
DEBUG 2017-11-09 14:58:53,114 [25   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 14:58:53,116 [25   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:58:53,117 [25   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:58:53,117 [25   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 14:58:55,712 [50   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:55,728 [50   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 14:58:55,853 [50   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:58:55,853 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:58:55,853 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:58:55,853 [50   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:58:56,102 [50   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:58:56,477 [50   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 14:58:56,477 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 14:58:56,477 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 14:58:56,477 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 14:58:56,492 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 14:58:56,508 [50   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:58:56,975 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:58:57,093 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 46 classes define auto mapping attributes
DEBUG 2017-11-09 14:58:57,093 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 14:58:57,095 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 14:58:57,096 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 14:58:57,276 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:58:57,286 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:58:57,290 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 14:58:57,290 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 14:58:57,291 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 14:58:57,292 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 14:58:57,293 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 14:58:57,293 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 14:58:57,294 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 14:58:57,295 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 14:58:57,296 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 14:58:57,296 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 14:58:57,297 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 14:58:57,298 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 14:58:57,299 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 14:58:57,299 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 14:58:57,300 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 14:58:57,301 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 14:58:57,302 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 14:58:57,302 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 14:58:57,303 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 14:58:57,304 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 14:58:57,305 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 14:58:57,306 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 14:58:57,306 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 14:58:57,307 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 14:58:57,308 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 14:58:57,309 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 14:58:57,310 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 14:58:59,045 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"9511a1b3-168e-4d0d-93e4-7c716749408a","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:58:58.9589128Z","Properties":{}}
DEBUG 2017-11-09 14:59:04,437 [40   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 14:59:04,437 [40   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:59:04,437 [40   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:59:04,437 [40   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 14:59:06,844 [14   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:06,859 [14   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 14:59:06,984 [14   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:59:06,984 [14   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:59:06,984 [14   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:59:06,984 [14   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 14:59:07,234 [14   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 14:59:07,647 [14   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 14:59:07,647 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 14:59:07,647 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 14:59:07,647 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 14:59:07,662 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 14:59:07,693 [14   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 14:59:08,208 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 46 classes define auto mapping attributes
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 14:59:08,302 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 14:59:08,489 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:59:08,505 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 14:59:08,505 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 14:59:08,505 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 14:59:08,505 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 14:59:08,505 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 14:59:08,505 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 14:59:08,505 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 14:59:08,505 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 14:59:08,505 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 14:59:08,505 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 14:59:08,520 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 14:59:10,283 [51   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"9511a1b3-168e-4d0d-93e4-7c716749408a","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T06:59:10.1897128Z","Properties":{}}
DEBUG 2017-11-09 15:32:58,477 [45   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 15:32:58,477 [45   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:32:58,477 [45   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:32:58,477 [45   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 15:33:03,244 [76   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 15:33:03,254 [76   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:03,259 [76   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 15:33:03,337 [76   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:33:03,337 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:33:03,337 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:33:03,337 [76   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:33:03,608 [76   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:04,373 [76   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 15:33:04,373 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 15:33:04,373 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 15:33:04,373 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 15:33:04,388 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 15:33:04,419 [76   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:33:04,865 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 46 classes define auto mapping attributes
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 15:33:04,943 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 15:33:05,193 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:33:05,209 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 15:33:05,224 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 15:33:05,240 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 15:33:05,240 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 15:33:05,240 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 15:33:05,240 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 15:33:05,240 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 15:33:05,240 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 15:33:05,240 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 15:33:05,240 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 15:33:05,240 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2017-11-09 15:33:09,635 [44   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:33:14,801 [78   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:33:19,898 [13   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2017-11-09 15:33:20,335 [25   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 15:33:20,335 [25   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:33:20,335 [25   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:33:20,335 [25   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 15:33:25,788 [76   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 15:33:25,800 [76   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 15:33:25,805 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,807 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,807 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,807 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,807 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,807 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,808 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,808 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,808 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,808 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,809 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,809 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,809 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,809 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,809 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,809 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,809 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,809 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,809 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,810 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,810 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:25,812 [76   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 15:33:25,964 [76   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:33:25,964 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:33:25,964 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:33:25,964 [76   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:33:26,262 [76   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:33:27,298 [76   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 15:33:27,303 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 15:33:27,303 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 15:33:27,309 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 15:33:27,318 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 15:33:27,344 [76   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:33:27,811 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 46 classes define auto mapping attributes
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 15:33:27,889 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 15:33:28,154 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:33:28,170 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:33:28,170 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 15:33:28,170 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 15:33:28,170 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 15:33:28,170 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 15:33:28,170 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 15:33:28,170 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 15:33:28,170 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 15:33:28,185 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2017-11-09 15:33:32,526 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:33:37,741 [78   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:33:42,925 [51   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:33:48,105 [45   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:33:53,302 [82   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:33:58,446 [45   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:34:03,594 [78   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:34:08,727 [13   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:34:13,832 [13   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString) 位置 E:\SVN\泰康生物\TaiKang.EntityFramework\EntityFramework\TaiKangDbContext.cs:行号 65
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2017-11-09 15:34:15,193 [25   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 15:34:15,193 [25   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:34:15,193 [25   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:34:15,193 [25   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 15:34:21,948 [76   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 15:34:21,948 [76   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:21,964 [76   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 15:34:22,042 [76   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:34:22,042 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:34:22,042 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:34:22,042 [76   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:34:22,307 [76   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:34:23,138 [76   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 15:34:23,138 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 15:34:23,138 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 15:34:23,138 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 15:34:23,153 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 15:34:23,184 [76   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:34:23,637 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 46 classes define auto mapping attributes
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 15:34:23,731 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 15:34:23,983 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:34:23,999 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:34:24,015 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 15:34:24,015 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 15:34:24,015 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 15:34:24,015 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 15:34:24,015 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 15:34:24,015 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 15:34:24,015 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 15:34:24,015 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 15:34:24,015 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 15:34:24,015 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 15:34:24,015 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 15:34:24,015 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 15:34:24,015 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 15:34:24,015 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 15:34:24,015 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 15:34:24,030 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 15:34:24,030 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 15:34:24,030 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 15:34:24,030 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 15:34:24,030 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 15:34:24,030 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 15:34:24,030 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 15:34:24,030 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 15:34:24,030 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 15:34:24,030 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 15:34:24,030 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 15:34:24,030 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 15:34:24,942 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"8263b9a4-0bdd-4770-91fe-7381036e81ec","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T07:34:24.9407231Z","Properties":{}}
DEBUG 2017-11-09 15:36:00,889 [13   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 15:36:00,889 [13   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:36:00,890 [13   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:36:00,890 [13   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 15:36:07,136 [76   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 15:36:07,146 [76   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 15:36:07,152 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,153 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,153 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,153 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,153 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,153 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,153 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,154 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,154 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,154 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,154 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,154 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,154 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,154 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,154 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,155 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,155 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,155 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,155 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,155 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,155 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:07,157 [76   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 15:36:07,296 [76   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:36:07,296 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:36:07,296 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:36:07,296 [76   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:36:07,580 [76   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:36:08,517 [76   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 15:36:08,522 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 15:36:08,523 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 15:36:08,528 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 15:36:08,538 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 15:36:08,573 [76   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:36:09,025 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:36:09,112 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 46 classes define auto mapping attributes
DEBUG 2017-11-09 15:36:09,112 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 15:36:09,114 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 15:36:09,115 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 15:36:09,375 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:36:09,387 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:36:09,395 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 15:36:09,396 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 15:36:09,397 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 15:36:09,398 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 15:36:09,398 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 15:36:09,400 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 15:36:09,401 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 15:36:09,401 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 15:36:09,402 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 15:36:09,403 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 15:36:09,404 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 15:36:09,404 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 15:36:09,405 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 15:36:09,406 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 15:36:09,406 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 15:36:09,407 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 15:36:09,408 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 15:36:09,409 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 15:36:09,410 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 15:36:09,411 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 15:36:09,411 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 15:36:09,412 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 15:36:09,413 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 15:36:09,414 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 15:36:09,414 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 15:36:09,415 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 15:36:09,416 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2017-11-09 15:36:13,773 [35   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:36:18,923 [71   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:36:24,086 [71   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:36:29,229 [25   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:36:34,409 [7    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:36:39,540 [13   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:36:44,696 [44   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:36:49,850 [71   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:36:54,999 [71   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:37:00,152 [71   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2017-11-09 15:37:05,309 [25   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate TaiKang.EntityFramework.TaiKangDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'TaiKangDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 TaiKang.EntityFramework.TaiKangDbContext..ctor(String nameOrConnectionString)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2017-11-09 15:37:08,839 [82   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 15:37:08,839 [82   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:37:08,840 [82   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:37:08,840 [82   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 15:37:15,284 [76   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 15:37:15,296 [76   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 15:37:15,301 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,303 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,303 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,303 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,303 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,303 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,303 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,303 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,303 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,303 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,304 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,304 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,304 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,304 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,304 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,304 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,304 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,304 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,305 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,305 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,305 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:15,308 [76   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 15:37:15,404 [76   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:37:15,404 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:37:15,404 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:37:15,404 [76   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:37:15,686 [76   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:16,559 [76   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 15:37:16,564 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 15:37:16,565 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 15:37:16,569 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 15:37:16,578 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 15:37:16,613 [76   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:37:17,093 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:37:17,179 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 46 classes define auto mapping attributes
DEBUG 2017-11-09 15:37:17,179 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 15:37:17,182 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 15:37:17,183 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 15:37:17,448 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:37:17,461 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:37:17,469 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 15:37:17,469 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 15:37:17,470 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 15:37:17,471 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 15:37:17,472 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 15:37:17,473 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 15:37:17,473 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 15:37:17,474 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 15:37:17,475 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 15:37:17,476 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 15:37:17,476 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 15:37:17,477 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 15:37:17,478 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 15:37:17,479 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 15:37:17,479 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 15:37:17,480 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 15:37:17,481 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 15:37:17,482 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 15:37:17,483 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 15:37:17,483 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 15:37:17,484 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 15:37:17,485 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 15:37:17,486 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 15:37:17,487 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 15:37:17,488 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 15:37:17,488 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 15:37:17,489 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 15:37:21,547 [71   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 15:37:21,547 [71   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:37:21,548 [71   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:37:21,548 [71   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 15:37:26,737 [76   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 15:37:26,747 [76   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 15:37:26,753 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,754 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,754 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,755 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,755 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,755 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,755 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,755 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,755 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,755 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,756 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,756 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,756 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,756 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,756 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,756 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,756 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,756 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,757 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,757 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,757 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:26,759 [76   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 15:37:26,902 [76   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:37:26,902 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:37:26,902 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:37:26,902 [76   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:37:27,195 [76   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:37:28,175 [76   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 15:37:28,180 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 15:37:28,181 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 15:37:28,188 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 15:37:28,198 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 15:37:28,235 [76   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:37:28,717 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:37:28,806 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 46 classes define auto mapping attributes
DEBUG 2017-11-09 15:37:28,807 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 15:37:28,809 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 15:37:28,809 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 15:37:28,809 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 15:37:28,809 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 15:37:28,809 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 15:37:28,809 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 15:37:28,809 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 15:37:28,809 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 15:37:28,809 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 15:37:28,809 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 15:37:28,809 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 15:37:28,809 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 15:37:28,810 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 15:37:28,811 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 15:37:28,811 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 15:37:28,811 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:37:28,811 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:37:28,811 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 15:37:28,811 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 15:37:29,090 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:37:29,103 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:37:29,111 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 15:37:29,112 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 15:37:29,113 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 15:37:29,113 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 15:37:29,114 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 15:37:29,115 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 15:37:29,116 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 15:37:29,116 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 15:37:29,117 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 15:37:29,118 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 15:37:29,119 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 15:37:29,120 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 15:37:29,120 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 15:37:29,121 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 15:37:29,122 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 15:37:29,123 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 15:37:29,124 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 15:37:29,125 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 15:37:29,126 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 15:37:29,126 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 15:37:29,127 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 15:37:29,128 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 15:37:29,129 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 15:37:29,130 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 15:37:29,130 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 15:37:29,131 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 15:37:29,132 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 15:37:31,469 [37   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"301431fd-790f-4403-b22a-d6ef9018b494","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T07:37:31.4591232Z","Properties":{}}
DEBUG 2017-11-09 15:44:02,567 [71   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 15:44:02,569 [71   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:44:02,570 [71   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:44:02,570 [71   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 15:44:05,084 [14   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 15:44:05,095 [14   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 15:44:05,100 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,102 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,102 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,102 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,102 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,103 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,103 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,103 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,103 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,103 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,104 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,104 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,104 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,104 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,104 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,104 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,104 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,104 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,105 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,105 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,105 [14   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:05,107 [14   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 15:44:05,249 [14   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:44:05,249 [14   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:44:05,249 [14   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:44:05,249 [14   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:44:05,534 [14   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:06,050 [14   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 15:44:06,054 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 15:44:06,055 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 15:44:06,061 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 15:44:06,070 [14   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 15:44:06,106 [14   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:44:06,602 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:44:06,700 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 46 classes define auto mapping attributes
DEBUG 2017-11-09 15:44:06,700 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 15:44:06,703 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 15:44:06,704 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 15:44:06,705 [14   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 15:44:06,976 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:44:06,990 [14   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:44:06,997 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 15:44:06,998 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 15:44:06,998 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 15:44:06,999 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 15:44:07,000 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 15:44:07,001 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 15:44:07,002 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 15:44:07,003 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 15:44:07,004 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 15:44:07,004 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 15:44:07,005 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 15:44:07,006 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 15:44:07,006 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 15:44:07,007 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 15:44:07,008 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 15:44:07,009 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 15:44:07,009 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 15:44:07,010 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 15:44:07,011 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 15:44:07,012 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 15:44:07,012 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 15:44:07,013 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 15:44:07,014 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 15:44:07,015 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 15:44:07,015 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 15:44:07,016 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 15:44:07,017 [14   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 15:44:10,134 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"301431fd-790f-4403-b22a-d6ef9018b494","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T07:44:09.9881232Z","Properties":{}}
DEBUG 2017-11-09 15:44:10,136 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"301431fd-790f-4403-b22a-d6ef9018b494","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T07:44:09.9881232Z","Properties":{}}
DEBUG 2017-11-09 15:44:12,155 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"301431fd-790f-4403-b22a-d6ef9018b494","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T07:44:09.9881232Z","Properties":{}}
DEBUG 2017-11-09 15:44:48,719 [18   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 15:44:48,720 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:44:48,720 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:44:48,720 [18   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 15:44:51,198 [50   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 15:44:51,210 [50   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 15:44:51,215 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,217 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,217 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,217 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,218 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,218 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,218 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,218 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,218 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,218 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,219 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,219 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,219 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,219 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,219 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,220 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,220 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,220 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,220 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,220 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,220 [50   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:51,223 [50   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 15:44:51,315 [50   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:44:51,315 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:44:51,315 [50   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:44:51,315 [50   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:44:51,597 [50   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:44:52,099 [50   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 15:44:52,104 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 15:44:52,105 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 15:44:52,109 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 15:44:52,118 [50   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 15:44:52,153 [50   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:44:52,626 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:44:52,719 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 46 classes define auto mapping attributes
DEBUG 2017-11-09 15:44:52,720 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 15:44:52,722 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 15:44:52,723 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 15:44:52,724 [50   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 15:44:53,011 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:44:53,030 [50   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:44:53,038 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 15:44:53,039 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 15:44:53,040 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 15:44:53,040 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 15:44:53,041 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 15:44:53,042 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 15:44:53,043 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 15:44:53,043 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 15:44:53,045 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 15:44:53,046 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 15:44:53,046 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 15:44:53,047 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 15:44:53,048 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 15:44:53,049 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 15:44:53,049 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 15:44:53,050 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 15:44:53,051 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 15:44:53,052 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 15:44:53,053 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 15:44:53,053 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 15:44:53,054 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 15:44:53,055 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 15:44:53,056 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 15:44:53,057 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 15:44:53,058 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 15:44:53,058 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 15:44:53,059 [50   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 15:44:54,424 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"301431fd-790f-4403-b22a-d6ef9018b494","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T07:44:54.3191232Z","Properties":{}}
DEBUG 2017-11-09 15:49:33,291 [25   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 15:49:33,291 [25   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:49:33,292 [25   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:49:33,292 [25   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 15:49:37,942 [76   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 15:49:37,953 [76   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 15:49:37,958 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,960 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,960 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,960 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,960 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,960 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,960 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,961 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,961 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,961 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,961 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,961 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,961 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,961 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,961 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,962 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,962 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,962 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,962 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,962 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,962 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:37,965 [76   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 15:49:38,109 [76   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:49:38,109 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:49:38,109 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:49:38,109 [76   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 15:49:38,405 [76   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 15:49:39,426 [76   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 15:49:39,432 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 15:49:39,433 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 15:49:39,438 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 15:49:39,449 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 15:49:39,485 [76   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 15:49:39,963 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:49:40,049 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 47 classes define auto mapping attributes
DEBUG 2017-11-09 15:49:40,049 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 15:49:40,051 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 15:49:40,051 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 15:49:40,051 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 15:49:40,051 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 15:49:40,051 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 15:49:40,051 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 15:49:40,051 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 15:49:40,051 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 15:49:40,052 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 15:49:40,053 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 15:49:40,053 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 15:49:40,053 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Product.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:49:40,053 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 15:49:40,053 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:49:40,053 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 15:49:40,053 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 15:49:40,053 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 15:49:40,319 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:49:40,332 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 15:49:40,340 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 15:49:40,341 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 15:49:40,341 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 15:49:40,342 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 15:49:40,343 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 15:49:40,344 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 15:49:40,344 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 15:49:40,345 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 15:49:40,346 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 15:49:40,347 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 15:49:40,348 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 15:49:40,349 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 15:49:40,349 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 15:49:40,350 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 15:49:40,351 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 15:49:40,352 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 15:49:40,353 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 15:49:40,353 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 15:49:40,354 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 15:49:40,355 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 15:49:40,356 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 15:49:40,357 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 15:49:40,358 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 15:49:40,358 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 15:49:40,359 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 15:49:40,360 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 15:49:40,361 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 15:49:43,007 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"301431fd-790f-4403-b22a-d6ef9018b494","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T07:49:42.8641232Z","Properties":{}}
DEBUG 2017-11-09 15:49:43,008 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"301431fd-790f-4403-b22a-d6ef9018b494","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T07:49:42.8641232Z","Properties":{}}
DEBUG 2017-11-09 15:49:45,034 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"301431fd-790f-4403-b22a-d6ef9018b494","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T07:49:42.8641232Z","Properties":{}}
DEBUG 2017-11-09 15:51:31,835 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 301431fd-790f-4403-b22a-d6ef9018b494
DEBUG 2017-11-09 15:51:33,091 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"ff6ebdc2-020c-4ed9-964d-b4db490100db","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T07:51:33.0911232Z","Properties":{}}
DEBUG 2017-11-09 15:51:33,131 [71   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: ff6ebdc2-020c-4ed9-964d-b4db490100db
DEBUG 2017-11-09 15:52:08,034 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: ff6ebdc2-020c-4ed9-964d-b4db490100db
DEBUG 2017-11-09 15:52:08,841 [18   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f88d2092-4b80-4084-9689-378591a1732d","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T07:52:08.8411232Z","Properties":{}}
DEBUG 2017-11-09 15:52:08,851 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: f88d2092-4b80-4084-9689-378591a1732d
DEBUG 2017-11-09 15:53:14,582 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: f88d2092-4b80-4084-9689-378591a1732d
DEBUG 2017-11-09 15:53:15,605 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"3c4366ac-84c6-4322-8fec-bf414314c036","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T07:53:15.6051232Z","Properties":{}}
DEBUG 2017-11-09 15:53:15,618 [51   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 3c4366ac-84c6-4322-8fec-bf414314c036
DEBUG 2017-11-09 16:08:49,820 [51   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 3c4366ac-84c6-4322-8fec-bf414314c036
DEBUG 2017-11-09 16:08:50,882 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"073ed7e1-5df3-4ce3-ba08-68ff2e7fe15d","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T08:08:50.8821232Z","Properties":{}}
DEBUG 2017-11-09 16:08:50,893 [71   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 073ed7e1-5df3-4ce3-ba08-68ff2e7fe15d
DEBUG 2017-11-09 16:09:58,407 [78   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 073ed7e1-5df3-4ce3-ba08-68ff2e7fe15d
DEBUG 2017-11-09 16:09:59,460 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"b5bfc1e1-8848-48e6-82ee-cabc36258bd0","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T08:09:59.4601232Z","Properties":{}}
DEBUG 2017-11-09 16:09:59,471 [51   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: b5bfc1e1-8848-48e6-82ee-cabc36258bd0
DEBUG 2017-11-09 16:12:23,449 [71   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: b5bfc1e1-8848-48e6-82ee-cabc36258bd0
DEBUG 2017-11-09 16:12:24,136 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"51bd000c-4fd5-49c2-9f2a-a1a4bf9cce88","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T08:12:24.1361232Z","Properties":{}}
DEBUG 2017-11-09 16:12:24,144 [71   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 51bd000c-4fd5-49c2-9f2a-a1a4bf9cce88
DEBUG 2017-11-09 16:12:30,508 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 51bd000c-4fd5-49c2-9f2a-a1a4bf9cce88
DEBUG 2017-11-09 16:12:31,422 [82   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"e37c7f45-48f1-4774-be9a-3cdb6e890f20","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T08:12:31.4221232Z","Properties":{}}
DEBUG 2017-11-09 16:12:31,428 [18   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: e37c7f45-48f1-4774-be9a-3cdb6e890f20
DEBUG 2017-11-09 16:12:38,020 [37   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: e37c7f45-48f1-4774-be9a-3cdb6e890f20
DEBUG 2017-11-09 16:12:38,971 [37   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"77bde5e3-5d5b-48ac-9d2f-74381876f0dd","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T08:12:38.9711232Z","Properties":{}}
DEBUG 2017-11-09 16:12:38,981 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 77bde5e3-5d5b-48ac-9d2f-74381876f0dd
DEBUG 2017-11-09 16:15:22,291 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 77bde5e3-5d5b-48ac-9d2f-74381876f0dd
DEBUG 2017-11-09 16:15:22,908 [51   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f4e8227f-1ae7-43a3-b870-ff78b0a8bd3b","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T08:15:22.9081232Z","Properties":{}}
DEBUG 2017-11-09 16:15:22,917 [37   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: f4e8227f-1ae7-43a3-b870-ff78b0a8bd3b
DEBUG 2017-11-09 16:31:38,293 [45   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 16:31:38,293 [45   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 16:31:38,294 [45   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 16:31:38,294 [45   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 16:31:41,677 [76   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 16:31:41,689 [76   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 16:31:41,694 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,696 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,696 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,696 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,696 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,696 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,696 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,697 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,697 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,697 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,697 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,697 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,697 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,698 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,698 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,698 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,698 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,698 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,698 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,698 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,699 [76   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:41,701 [76   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 16:31:41,810 [76   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 16:31:41,810 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 16:31:41,810 [76   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 16:31:41,810 [76   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 16:31:42,110 [76   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 16:31:42,624 [76   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 16:31:42,629 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 16:31:42,629 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 16:31:42,634 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 16:31:42,644 [76   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 16:31:42,679 [76   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 16:31:43,167 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 16:31:43,262 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 47 classes define auto mapping attributes
DEBUG 2017-11-09 16:31:43,262 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 16:31:43,265 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 16:31:43,266 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 16:31:43,267 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 16:31:43,267 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 16:31:43,267 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 16:31:43,267 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 16:31:43,267 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 16:31:43,267 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 16:31:43,267 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 16:31:43,267 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 16:31:43,267 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 16:31:43,281 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Product.CreateOrEditModalViewModel
DEBUG 2017-11-09 16:31:43,281 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 16:31:43,282 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 16:31:43,282 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 16:31:43,282 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 16:31:43,282 [76   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 16:31:43,571 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 16:31:43,583 [76   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 16:31:43,592 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 16:31:43,593 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 16:31:43,594 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 16:31:43,594 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 16:31:43,595 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 16:31:43,596 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 16:31:43,597 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 16:31:43,597 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 16:31:43,598 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 16:31:43,599 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 16:31:43,600 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 16:31:43,601 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 16:31:43,602 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 16:31:43,603 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 16:31:43,604 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 16:31:43,604 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 16:31:43,605 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 16:31:43,606 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 16:31:43,607 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 16:31:43,607 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 16:31:43,608 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 16:31:43,609 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 16:31:43,610 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 16:31:43,610 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 16:31:43,611 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 16:31:43,612 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 16:31:43,613 [76   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 16:31:45,386 [78   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"f4e8227f-1ae7-43a3-b870-ff78b0a8bd3b","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T08:31:45.2231232Z","Properties":{}}
DEBUG 2017-11-09 16:36:32,778 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: f4e8227f-1ae7-43a3-b870-ff78b0a8bd3b
DEBUG 2017-11-09 16:36:34,066 [35   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"77f697e5-08bf-4326-8868-e26c30d1e40e","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T08:36:34.0661232Z","Properties":{}}
DEBUG 2017-11-09 16:36:34,095 [18   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 77f697e5-08bf-4326-8868-e26c30d1e40e
DEBUG 2017-11-09 16:39:23,440 [71   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 77f697e5-08bf-4326-8868-e26c30d1e40e
DEBUG 2017-11-09 16:39:24,160 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"1f3c57e0-d3b7-42af-b28b-f2c980d31dd2","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T08:39:24.1601232Z","Properties":{}}
DEBUG 2017-11-09 16:39:24,171 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 1f3c57e0-d3b7-42af-b28b-f2c980d31dd2
DEBUG 2017-11-09 16:45:51,323 [64   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 1f3c57e0-d3b7-42af-b28b-f2c980d31dd2
DEBUG 2017-11-09 16:45:52,033 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"16ec573d-dc7a-4153-9074-02bf855d1480","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T08:45:52.0331232Z","Properties":{}}
DEBUG 2017-11-09 16:45:52,044 [78   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 16ec573d-dc7a-4153-9074-02bf855d1480
DEBUG 2017-11-09 16:48:47,819 [78   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 16ec573d-dc7a-4153-9074-02bf855d1480
DEBUG 2017-11-09 16:48:49,241 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"a4db07c5-4855-41ae-9540-70348f8e5653","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T08:48:49.2411232Z","Properties":{}}
DEBUG 2017-11-09 16:48:49,251 [71   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: a4db07c5-4855-41ae-9540-70348f8e5653
ERROR 2017-11-09 16:48:56,932 [37   ] nHandling.AbpApiExceptionFilterAttribute - No property or field 'actions' exists in type 'Product'
No property or field 'actions' exists in type 'Product' (at index 0)
DEBUG 2017-11-09 17:11:19,036 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: a4db07c5-4855-41ae-9540-70348f8e5653
DEBUG 2017-11-09 17:11:19,928 [64   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"edcd2f09-751c-48dd-b3d6-2741d9067f6c","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T09:11:19.9281232Z","Properties":{}}
DEBUG 2017-11-09 17:11:19,937 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: edcd2f09-751c-48dd-b3d6-2741d9067f6c
DEBUG 2017-11-09 17:11:28,847 [37   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: edcd2f09-751c-48dd-b3d6-2741d9067f6c
DEBUG 2017-11-09 17:11:29,610 [51   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"6aad5713-186e-4c1d-bfbf-e9a7b659f92a","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T09:11:29.6101232Z","Properties":{}}
DEBUG 2017-11-09 17:11:29,618 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 6aad5713-186e-4c1d-bfbf-e9a7b659f92a
DEBUG 2017-11-09 17:14:09,817 [58   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 6aad5713-186e-4c1d-bfbf-e9a7b659f92a
DEBUG 2017-11-09 17:14:10,679 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"69caca3e-1e11-4895-8437-2ae6cdbe3f15","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T09:14:10.6791232Z","Properties":{}}
DEBUG 2017-11-09 17:14:10,687 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 69caca3e-1e11-4895-8437-2ae6cdbe3f15
DEBUG 2017-11-09 17:14:19,363 [51   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 69caca3e-1e11-4895-8437-2ae6cdbe3f15
DEBUG 2017-11-09 17:14:20,103 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"866ddfef-b5e5-4591-8c7a-c66f2961897c","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T09:14:20.1031232Z","Properties":{}}
DEBUG 2017-11-09 17:14:20,109 [71   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 866ddfef-b5e5-4591-8c7a-c66f2961897c
DEBUG 2017-11-09 17:15:39,712 [58   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 866ddfef-b5e5-4591-8c7a-c66f2961897c
DEBUG 2017-11-09 17:15:40,564 [43   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"c5bac610-378b-4215-98bd-e0d27bae13b9","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T09:15:40.5641232Z","Properties":{}}
DEBUG 2017-11-09 17:15:40,572 [45   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: c5bac610-378b-4215-98bd-e0d27bae13b9
DEBUG 2017-11-09 17:33:22,427 [37   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: c5bac610-378b-4215-98bd-e0d27bae13b9
DEBUG 2017-11-09 17:33:23,498 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"a0d1f75c-9590-4262-9e7e-a11390d899da","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T09:33:23.4981232Z","Properties":{}}
DEBUG 2017-11-09 17:33:23,507 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: a0d1f75c-9590-4262-9e7e-a11390d899da
ERROR 2017-11-09 17:34:38,725 [37   ] Abp.Logging.LogHelper                    - Can not find file for: ~/Areas/Mpa/Views/CompanyIntroduce/Index.min.css! System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioningForEmbeddedFile(String path)
   在 Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioning(String path)
DEBUG 2017-11-09 17:34:38,843 [43   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: a0d1f75c-9590-4262-9e7e-a11390d899da
DEBUG 2017-11-09 17:34:39,747 [58   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"1bd291d6-d206-4ca4-98ad-379191a5b5a9","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T09:34:39.7471232Z","Properties":{}}
DEBUG 2017-11-09 17:34:39,755 [35   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 1bd291d6-d206-4ca4-98ad-379191a5b5a9
DEBUG 2017-11-09 17:34:41,388 [51   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 1bd291d6-d206-4ca4-98ad-379191a5b5a9
DEBUG 2017-11-09 17:34:41,909 [58   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f31b056c-f23f-4434-ab7a-4c20a52765d9","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T09:34:41.9091232Z","Properties":{}}
DEBUG 2017-11-09 17:34:41,916 [44   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: f31b056c-f23f-4434-ab7a-4c20a52765d9
DEBUG 2017-11-09 17:35:35,974 [64   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: f31b056c-f23f-4434-ab7a-4c20a52765d9
WARN  2017-11-09 17:35:37,321 [19   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
WARN  2017-11-09 17:35:37,484 [51   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
WARN  2017-11-09 17:40:20,149 [25   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
DEBUG 2017-11-09 17:40:23,996 [18   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"0f915c7e-1c84-4200-921e-553a6172c500","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T09:40:23.9961232Z","Properties":{}}
DEBUG 2017-11-09 17:40:24,004 [71   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 0f915c7e-1c84-4200-921e-553a6172c500
DEBUG 2017-11-09 17:40:26,962 [37   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 0f915c7e-1c84-4200-921e-553a6172c500
DEBUG 2017-11-09 17:40:27,912 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"e943c615-774a-41d4-9beb-cd6acd289c47","IpAddress":"::1","TenantId":1,"UserId":3,"ConnectTime":"2017-11-09T09:40:27.9121232Z","Properties":{}}
DEBUG 2017-11-09 17:40:27,919 [37   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: e943c615-774a-41d4-9beb-cd6acd289c47
DEBUG 2017-11-09 21:36:00,351 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 21:36:00,367 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 21:36:00,373 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,375 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,375 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,375 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,375 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,376 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,376 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,376 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,376 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,376 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,376 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,377 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,377 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,377 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,377 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,377 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,377 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,377 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,377 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,378 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,378 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:00,381 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 21:36:00,520 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 21:36:00,520 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 21:36:00,521 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 21:36:00,521 [1    ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 21:36:00,997 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 21:36:02,593 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 21:36:02,601 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 21:36:02,602 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 21:36:02,624 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 21:36:02,635 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 21:36:02,687 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 21:36:03,906 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 21:36:04,139 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 47 classes define auto mapping attributes
DEBUG 2017-11-09 21:36:04,139 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 21:36:04,143 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 21:36:04,143 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 21:36:04,144 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 21:36:04,145 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 21:36:04,145 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 21:36:04,145 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 21:36:04,145 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 21:36:04,145 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 21:36:04,145 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 21:36:04,145 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 21:36:04,145 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 21:36:04,145 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 21:36:04,145 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 21:36:04,145 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 21:36:04,145 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 21:36:04,145 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 21:36:04,145 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 21:36:04,146 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 21:36:04,146 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 21:36:04,146 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 21:36:04,146 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 21:36:04,146 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Product.CreateOrEditModalViewModel
DEBUG 2017-11-09 21:36:04,146 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 21:36:04,146 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 21:36:04,146 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 21:36:04,146 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 21:36:04,146 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 21:36:04,751 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 21:36:04,771 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 21:36:04,783 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 21:36:04,784 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 21:36:04,785 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 21:36:04,786 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 21:36:04,787 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 21:36:04,787 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 21:36:04,788 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 21:36:04,789 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 21:36:04,790 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 21:36:04,791 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 21:36:04,793 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 21:36:04,795 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 21:36:04,798 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 21:36:04,799 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 21:36:04,800 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 21:36:04,801 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 21:36:04,801 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 21:36:04,802 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 21:36:04,803 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 21:36:04,804 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 21:36:04,805 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 21:36:04,806 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 21:36:04,807 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 21:36:04,808 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 21:36:04,809 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 21:36:04,810 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 21:36:04,811 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2017-11-09 21:36:14,909 [11   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
WARN  2017-11-09 21:36:18,725 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
WARN  2017-11-09 21:36:20,887 [12   ] aiKang.Web.Controllers.AccountController - Login failed!
Abp.UI.UserFriendlyException: Login failed!
   at TaiKang.Web.Controllers.AccountController.<GetLoginResultAsync>d__23.MoveNext() in C:\Users\derily\Documents\Visual Studio 2017\Projects\TaiKangWeb\TaiKang.Web\Controllers\AccountController.cs:line 216
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at TaiKang.Web.Controllers.AccountController.<Login>d__20.MoveNext() in C:\Users\derily\Documents\Visual Studio 2017\Projects\TaiKangWeb\TaiKang.Web\Controllers\AccountController.cs:line 144
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Abp.Threading.InternalAsyncHelper.<AwaitTaskWithPostActionAndFinallyAndGetResult>d__5`1.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass37.<BeginInvokeAsynchronousActionMethod>b__36(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass33.<BeginInvokeActionMethodWithFilters>b__32(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
WARN  2017-11-09 21:37:13,321 [28   ] aiKang.Web.Controllers.AccountController - Login failed!
Abp.UI.UserFriendlyException: Login failed!
   at TaiKang.Web.Controllers.AccountController.<GetLoginResultAsync>d__23.MoveNext() in C:\Users\derily\Documents\Visual Studio 2017\Projects\TaiKangWeb\TaiKang.Web\Controllers\AccountController.cs:line 216
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at TaiKang.Web.Controllers.AccountController.<Login>d__20.MoveNext() in C:\Users\derily\Documents\Visual Studio 2017\Projects\TaiKangWeb\TaiKang.Web\Controllers\AccountController.cs:line 144
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Abp.Threading.InternalAsyncHelper.<AwaitTaskWithPostActionAndFinallyAndGetResult>d__5`1.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass37.<BeginInvokeAsynchronousActionMethod>b__36(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass33.<BeginInvokeActionMethodWithFilters>b__32(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
WARN  2017-11-09 21:37:21,987 [19   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
WARN  2017-11-09 21:37:37,924 [26   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
WARN  2017-11-09 21:37:38,186 [11   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
WARN  2017-11-09 21:37:40,859 [24   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
WARN  2017-11-09 21:38:04,553 [11   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
WARN  2017-11-09 21:38:14,686 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
WARN  2017-11-09 21:38:31,236 [27   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
ERROR 2017-11-09 21:38:36,210 [27   ] Abp.Logging.LogHelper                    - Can not find file for: ~/Areas/Mpa/Views/CompanyIntroduce/Index.min.css! System.NullReferenceException: Object reference not set to an instance of an object.
   at Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioningForEmbeddedFile(String path)
   at Abp.Web.Mvc.Extensions.HtmlHelperResourceExtensions.GetPathWithVersioning(String path)
WARN  2017-11-09 21:38:36,689 [5    ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
WARN  2017-11-09 21:38:44,058 [26   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
WARN  2017-11-09 21:39:04,444 [27   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
WARN  2017-11-09 21:39:18,711 [24   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
WARN  2017-11-09 21:39:29,831 [22   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
WARN  2017-11-09 21:39:37,499 [5    ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
DEBUG 2017-11-09 21:39:39,892 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"bf80c105-3cc7-41f7-9cf6-8a051f3d5ba9","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T13:39:39.8866398Z","Properties":{}}
DEBUG 2017-11-09 21:39:39,962 [10   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: bf80c105-3cc7-41f7-9cf6-8a051f3d5ba9
DEBUG 2017-11-09 21:44:41,358 [12   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: bf80c105-3cc7-41f7-9cf6-8a051f3d5ba9
WARN  2017-11-09 21:44:41,832 [12   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
DEBUG 2017-11-09 21:45:02,955 [9    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"8670046b-2679-48e6-b950-c8f501aaeac8","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T13:45:02.9559023Z","Properties":{}}
DEBUG 2017-11-09 21:45:02,963 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 8670046b-2679-48e6-b950-c8f501aaeac8
DEBUG 2017-11-09 21:45:46,513 [18   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 8670046b-2679-48e6-b950-c8f501aaeac8
WARN  2017-11-09 21:45:46,996 [32   ] naries.DictionaryBasedLocalizationSource - Can not find 'ContactUs' in localization source 'TaiKang'!
DEBUG 2017-11-09 21:46:08,065 [12   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"256add84-a149-4b6e-b717-5ae05b0133c8","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T13:46:08.0651663Z","Properties":{}}
DEBUG 2017-11-09 21:46:08,075 [12   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 256add84-a149-4b6e-b717-5ae05b0133c8
DEBUG 2017-11-09 21:50:13,559 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 256add84-a149-4b6e-b717-5ae05b0133c8
ERROR 2017-11-09 21:50:32,934 [9    ] nHandling.AbpApiExceptionFilterAttribute - There is no such an entity. Entity type: TaiKang.Tk.Banner, id: 0
Abp.Domain.Entities.EntityNotFoundException: There is no such an entity. Entity type: TaiKang.Tk.Banner, id: 0
   在 Abp.Domain.Repositories.AbpRepositoryBase`2.Get(TPrimaryKey id)
   在 Castle.Proxies.Invocations.IRepository`2_Get_28.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`1Proxy_5.Get(Int32 id)
   在 Castle.Proxies.BannerAppServiceProxy.GetEntityById_callback(Int32 id)
   在 Castle.Proxies.Invocations.CrudAppService`8_GetEntityById.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Auditing.AuditingInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Runtime.Validation.Interception.ValidationInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BannerAppServiceProxy.GetEntityById(Int32 id)
   在 Abp.Application.Services.CrudAppService`8.Update(TUpdateInput input)
   在 Castle.Proxies.BannerAppServiceProxy.Update_callback(BannerDto input)
   在 Castle.Proxies.Invocations.CrudAppService`8_Update.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Auditing.AuditingInterceptor.PerformSyncAuditing(IInvocation invocation, AuditInfo auditInfo)
   在 Abp.Auditing.AuditingInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Runtime.Validation.Interception.ValidationInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BannerAppServiceProxy.Update(BannerDto input)
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   在 Abp.WebApi.Controllers.Dynamic.Interceptors.AbpDynamicApiControllerInterceptor`1.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.DynamicApiController`1Proxy_4.Update(BannerDto input)
   在 lambda_method(Closure , Object , Object[] )
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.<>c__DisplayClass10.<GetExecutor>b__9(Object instance, Object[] methodParameters)
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.Execute(Object instance, Object[] arguments)
   在 System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(HttpControllerContext controllerContext, IDictionary`2 arguments, CancellationToken cancellationToken)
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ApiControllerActionInvoker.<InvokeActionAsyncCore>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Uow.AbpApiUowFilter.<ExecuteActionFilterAsync>d__6.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Validation.AbpApiValidationFilter.<ExecuteActionFilterAsync>d__5.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Auditing.AbpApiAuditFilter.<ExecuteActionFilterAsync>d__4.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ActionFilterResult.<ExecuteAsync>d__2.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Security.AntiForgery.AbpAntiForgeryApiFilter.<ExecuteAuthorizationFilterAsync>d__10.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Authorization.AbpApiAuthorizeFilter.<ExecuteAuthorizationFilterAsync>d__7.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.AuthenticationFilterResult.<ExecuteAsync>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ExceptionFilterResult.<ExecuteAsync>d__0.MoveNext()
DEBUG 2017-11-09 21:50:35,153 [37   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"6f5ce62b-c007-4680-b656-fb51591ebce6","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T13:50:35.1535412Z","Properties":{}}
DEBUG 2017-11-09 21:50:35,161 [9    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 6f5ce62b-c007-4680-b656-fb51591ebce6
DEBUG 2017-11-09 21:51:55,753 [33   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 6f5ce62b-c007-4680-b656-fb51591ebce6
DEBUG 2017-11-09 21:52:17,293 [33   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"d523052c-4b80-4cf0-bd29-652feec2fb3b","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T13:52:17.2930284Z","Properties":{}}
DEBUG 2017-11-09 21:52:17,301 [30   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: d523052c-4b80-4cf0-bd29-652feec2fb3b
DEBUG 2017-11-09 21:52:40,915 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: d523052c-4b80-4cf0-bd29-652feec2fb3b
DEBUG 2017-11-09 21:53:02,478 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"92c48bb1-9006-4378-81b4-5a985dffc083","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T13:53:02.4783702Z","Properties":{}}
DEBUG 2017-11-09 21:53:02,490 [30   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 92c48bb1-9006-4378-81b4-5a985dffc083
DEBUG 2017-11-09 21:54:23,673 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 92c48bb1-9006-4378-81b4-5a985dffc083
DEBUG 2017-11-09 21:54:45,232 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"586ec9e7-634e-4ee4-b008-be643856bf77","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T13:54:45.2326121Z","Properties":{}}
DEBUG 2017-11-09 21:54:45,242 [41   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 586ec9e7-634e-4ee4-b008-be643856bf77
DEBUG 2017-11-09 21:55:46,465 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 586ec9e7-634e-4ee4-b008-be643856bf77
DEBUG 2017-11-09 21:56:08,082 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"2648d443-708c-4f2f-992b-737372191870","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T13:56:08.082709Z","Properties":{}}
DEBUG 2017-11-09 21:56:08,091 [33   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 2648d443-708c-4f2f-992b-737372191870
DEBUG 2017-11-09 22:08:16,193 [39   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 2648d443-708c-4f2f-992b-737372191870
DEBUG 2017-11-09 22:08:37,894 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"d0281fc5-48b2-4c06-bfc2-780154498a83","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T14:08:37.8945356Z","Properties":{}}
DEBUG 2017-11-09 22:08:37,912 [41   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: d0281fc5-48b2-4c06-bfc2-780154498a83
DEBUG 2017-11-09 22:08:38,970 [36   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: d0281fc5-48b2-4c06-bfc2-780154498a83
DEBUG 2017-11-09 22:09:00,483 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"5510e2e3-6f6e-4397-913c-ba0da5cc6cae","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T14:09:00.4838319Z","Properties":{}}
DEBUG 2017-11-09 22:09:00,501 [33   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 5510e2e3-6f6e-4397-913c-ba0da5cc6cae
DEBUG 2017-11-09 22:09:37,786 [30   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 5510e2e3-6f6e-4397-913c-ba0da5cc6cae
DEBUG 2017-11-09 22:09:59,919 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"9ab6e818-86f2-41f5-8728-5b031ed31731","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T14:09:59.9194798Z","Properties":{}}
DEBUG 2017-11-09 22:09:59,938 [43   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 9ab6e818-86f2-41f5-8728-5b031ed31731
DEBUG 2017-11-09 22:10:15,086 [43   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 9ab6e818-86f2-41f5-8728-5b031ed31731
DEBUG 2017-11-09 22:10:36,925 [40   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"58de2d87-ff92-4530-ac89-c6ec06271c4b","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T14:10:36.9253868Z","Properties":{}}
DEBUG 2017-11-09 22:10:36,939 [12   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 58de2d87-ff92-4530-ac89-c6ec06271c4b
DEBUG 2017-11-09 22:17:06,507 [12   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 58de2d87-ff92-4530-ac89-c6ec06271c4b
DEBUG 2017-11-09 22:17:28,294 [21   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"0212c5d1-b311-4ae1-9bb5-771798cf30c7","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T14:17:28.2949417Z","Properties":{}}
DEBUG 2017-11-09 22:17:28,307 [39   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 0212c5d1-b311-4ae1-9bb5-771798cf30c7
DEBUG 2017-11-09 22:18:02,330 [33   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 0212c5d1-b311-4ae1-9bb5-771798cf30c7
DEBUG 2017-11-09 22:18:24,377 [12   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"9cfda9af-9220-4fd7-b4b8-c028231fe6f8","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T14:18:24.3757921Z","Properties":{}}
DEBUG 2017-11-09 22:18:24,421 [36   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 9cfda9af-9220-4fd7-b4b8-c028231fe6f8
DEBUG 2017-11-09 22:21:46,470 [30   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 9cfda9af-9220-4fd7-b4b8-c028231fe6f8
DEBUG 2017-11-09 22:22:08,562 [36   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f7ed949d-0b86-4d0b-a257-dee91e5f29ce","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T14:22:08.5614676Z","Properties":{}}
DEBUG 2017-11-09 22:22:08,588 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: f7ed949d-0b86-4d0b-a257-dee91e5f29ce
DEBUG 2017-11-09 22:25:06,805 [33   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 22:25:06,808 [33   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 22:25:06,809 [33   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 22:25:06,809 [33   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2017-11-09 22:25:17,769 [38   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2017-11-09 22:25:17,787 [38   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2017-11-09 22:25:17,807 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.Web.TaiKangWebModule, TaiKang.Web, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,810 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,810 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,811 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,811 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,811 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,811 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,812 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,812 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangDataModule, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,812 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,813 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,813 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,813 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangCoreModule, TaiKang.Core, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,813 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,813 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,814 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.TaiKangApplicationModule, TaiKang.Application, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,814 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: TaiKang.WebApi.TaiKangWebApiModule, TaiKang.WebApi, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,814 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,814 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,815 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,815 [38   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:17,823 [38   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2017-11-09 22:25:18,267 [38   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 22:25:18,267 [38   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 22:25:18,267 [38   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 22:25:18,267 [38   ] o.Configuration.LanguageManagementConfig - Converted TaiKang (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2017-11-09 22:25:18,763 [38   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: TaiKang.EntityFramework.TaiKangDbContext, TaiKang.EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2017-11-09 22:25:20,454 [38   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2017-11-09 22:25:20,466 [38   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2017-11-09 22:25:20,468 [38   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2017-11-09 22:25:20,498 [38   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2017-11-09 22:25:20,534 [38   ] Abp.Localization.LocalizationManager     - Initialized localization source: TaiKang
DEBUG 2017-11-09 22:25:20,629 [38   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 22:25:21,487 [38   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 22:25:21,626 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 47 classes define auto mapping attributes
DEBUG 2017-11-09 22:25:21,626 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Cache.FriendCacheItem
DEBUG 2017-11-09 22:25:21,628 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.BannerDto
DEBUG 2017-11-09 22:25:21,629 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ClassifiedContentDto
DEBUG 2017-11-09 22:25:21,629 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.CreateOrUpdateJobInput
DEBUG 2017-11-09 22:25:21,629 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.GetJobForEditOutput
DEBUG 2017-11-09 22:25:21,629 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobChanceListDto
DEBUG 2017-11-09 22:25:21,629 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.JobEditDto
DEBUG 2017-11-09 22:25:21,629 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Tk.Dto.ProductDto
DEBUG 2017-11-09 22:25:21,629 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.TenantLoginInfoDto
DEBUG 2017-11-09 22:25:21,629 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Sessions.Dto.UserLoginInfoDto
DEBUG 2017-11-09 22:25:21,629 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitDto
DEBUG 2017-11-09 22:25:21,629 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2017-11-09 22:25:21,629 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2017-11-09 22:25:21,629 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantListDto
DEBUG 2017-11-09 22:25:21,629 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.MultiTenancy.Dto.TenantEditDto
DEBUG 2017-11-09 22:25:21,629 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2017-11-09 22:25:21,629 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Localization.Dto.ApplicationLanguageListDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Friendships.Dto.FriendDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionEditDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.FlatFeatureDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Editions.Dto.EditionListDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatMessageDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleListDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Roles.Dto.RoleEditDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Auditing.Dto.AuditLogListDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2017-11-09 22:25:21,630 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2017-11-09 22:25:21,631 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Product.CreateOrEditModalViewModel
DEBUG 2017-11-09 22:25:21,631 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Jobs.CreateOrEditJobModalViewModel
DEBUG 2017-11-09 22:25:21,631 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.ClassifiedContent.CreateOrEditModalViewModel
DEBUG 2017-11-09 22:25:21,631 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.CreateOrEditModalViewModel
DEBUG 2017-11-09 22:25:21,631 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Areas.Mpa.Models.Banner.IndexViewModel
DEBUG 2017-11-09 22:25:21,631 [38   ] Abp.AutoMapper.AbpAutoMapperModule       - TaiKang.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2017-11-09 22:25:22,106 [38   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 22:25:22,123 [38   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2017-11-09 22:25:22,133 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService' with service name 'app/banner'.
DEBUG 2017-11-09 22:25:22,134 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IBannerAppService_' with service name 'app/bannerAppService_'.
DEBUG 2017-11-09 22:25:22,135 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IClassifiedContentAppService' with service name 'app/classifiedContent'.
DEBUG 2017-11-09 22:25:22,136 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IJobChanceAppService' with service name 'app/jobChance'.
DEBUG 2017-11-09 22:25:22,137 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tk.IProductAppService' with service name 'app/product'.
DEBUG 2017-11-09 22:25:22,138 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2017-11-09 22:25:22,139 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2017-11-09 22:25:22,140 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2017-11-09 22:25:22,141 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2017-11-09 22:25:22,142 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2017-11-09 22:25:22,143 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2017-11-09 22:25:22,143 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2017-11-09 22:25:22,144 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2017-11-09 22:25:22,145 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2017-11-09 22:25:22,146 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2017-11-09 22:25:22,147 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2017-11-09 22:25:22,148 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2017-11-09 22:25:22,149 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2017-11-09 22:25:22,150 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2017-11-09 22:25:22,151 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2017-11-09 22:25:22,152 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2017-11-09 22:25:22,153 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2017-11-09 22:25:22,154 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2017-11-09 22:25:22,155 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2017-11-09 22:25:22,156 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2017-11-09 22:25:22,157 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2017-11-09 22:25:22,158 [38   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'TaiKang.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2017-11-09 22:25:26,257 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"f7ed949d-0b86-4d0b-a257-dee91e5f29ce","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T14:25:26.0347991Z","Properties":{}}
DEBUG 2017-11-09 22:25:52,600 [12   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2017-11-09 22:25:52,601 [12   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 22:25:52,602 [12   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2017-11-09 22:25:52,602 [12   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
WARN  2017-11-09 22:26:01,755 [7    ] nHandling.AbpApiExceptionFilterAttribute - Method arguments are not valid! See ValidationErrors for details.
Abp.Runtime.Validation.AbpValidationException: Method arguments are not valid! See ValidationErrors for details.
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.ThrowValidationError()
   在 Abp.Runtime.Validation.Interception.MethodInvocationValidator.Validate()
   在 Abp.WebApi.Validation.AbpApiValidationFilter.<ExecuteActionFilterAsync>d__5.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Auditing.AbpApiAuditFilter.<ExecuteActionFilterAsync>d__4.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ActionFilterResult.<ExecuteAsync>d__2.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Security.AntiForgery.AbpAntiForgeryApiFilter.<ExecuteAuthorizationFilterAsync>d__10.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Abp.WebApi.Authorization.AbpApiAuthorizeFilter.<ExecuteAuthorizationFilterAsync>d__7.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.AuthenticationFilterResult.<ExecuteAsync>d__0.MoveNext()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 System.Web.Http.Controllers.ExceptionFilterResult.<ExecuteAsync>d__0.MoveNext()
WARN  2017-11-09 22:26:01,829 [7    ] nHandling.AbpApiExceptionFilterAttribute - There are 1 validation errors:
WARN  2017-11-09 22:26:01,829 [7    ] nHandling.AbpApiExceptionFilterAttribute - The value '[object Object]' is not valid for Int32. (id)
DEBUG 2017-11-09 22:26:14,822 [35   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"74fafbb5-1f86-432f-a752-a145aa8c2621","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T14:26:14.8158808Z","Properties":{}}
DEBUG 2017-11-09 22:26:14,908 [20   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 74fafbb5-1f86-432f-a752-a145aa8c2621
DEBUG 2017-11-09 22:36:19,753 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 74fafbb5-1f86-432f-a752-a145aa8c2621
DEBUG 2017-11-09 22:36:22,450 [33   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"0c48f94c-e7f6-4575-a221-00c880923c48","IpAddress":"::1","TenantId":1,"UserId":2,"ConnectTime":"2017-11-09T14:36:22.4493508Z","Properties":{}}
DEBUG 2017-11-09 22:36:22,488 [35   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 0c48f94c-e7f6-4575-a221-00c880923c48
